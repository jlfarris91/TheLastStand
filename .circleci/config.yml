version: 2.1

orbs:
  win: circleci/windows@2.2.0

jobs:
  build:
    executor: win/default

    steps:
      - checkout

      - run:
          name: Setup Environment
          command: |
            choco install GitVersion.Portable

      - run:
          name: Generate Wurst Build Configuration
          command: |
            Push-Location build
            .\GenerateWurstBuildFile.ps1
            Get-Content ..\wurst.build
            Pop-Location

      - run:
          name: Install Dependencies
          command: |
            $pathWithWurst = "{0};{1}\.wurst\" -f [System.Environment]::GetEnvironmentVariable("Path", [EnvironmentVariableTarget]::Machine), $env:USERPROFILE
            [System.Environment]::SetEnvironmentVariable("Path", $pathWithWurst, [EnvironmentVariableTarget]::Machine)
            java -jar .\build\WurstSetup.jar install wurstscript

            # Reload the path variable after grill is installed
            $env:Path=[System.Environment]::GetEnvironmentVariable("Path", [EnvironmentVariableTarget]::Machine)

            grill install

      - run:
          name: Run Map Pipeline
          command: |
            Push-Location build
            .\RunPipeline.ps1
            Pop-Location

      - run:
          name: Run Wurst Tests
          command: grill test

      - run:
          name: Wurst Map Build
          command: |
            Push-Location build
            .\RunWurstBuild.ps1
            Pop-Location

      - run:
          name: Prepare Artifacts
          command: |
            Push-Location build
            .\PrepareArtifacts.ps1
            Pop-Location

      # This isn't strictly required when things are working correctly since the map will be persisted to the workspace
      # so that it can be published as a github release
      - store_artifacts:
          path: ./_artifacts/
      
      - persist_to_workspace:
          root: ~/project
          paths:
            - _artifacts/*

  publish-dev-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: ./project/
      - run:
          name: "Publish Dev Release on GitHub"
          command: |
            ghr -t ${GITHUB_TOKEN} \
                -u ${CIRCLE_PROJECT_USERNAME} \
                -r ${CIRCLE_PROJECT_REPONAME} \
                -c ${CIRCLE_SHA1} \
                -delete \
                TheLastStand-dev ./project/_artifacts/

workflows:
  version: 2
  main:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
                - develop
            tags:
              only: /^\d+\.\d+\.\d+$/
      - publish-dev-release:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
            tags:
              only: /^\d+\.\d+\.\d+$/