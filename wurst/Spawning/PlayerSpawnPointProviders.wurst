package PlayerSpawnPointProviders
import ISpawnPointProvider
import RandomSpawnPointProvider
import HostileCircularCachedSpawnManager
import FriendlyCircularCachedSpawnManager
import UndeadSpawnManager
import SurvivorSpawnManager

RandomSpawnPointProvider array g_hostileRandomSpawnPointProviders
RandomSpawnPointProvider array g_friendlyRandomSpawnPointProviders

// ============================================================================
public function getHostileSpawnPointProviderForPlayer(player p, SpawnRange spawnRange) returns ISpawnPointProvider
  let index = p.getId() * 4
  if (g_hostileRandomSpawnPointProviders[index] == null)
  //{
    let spawnManager = getPlayerCachedHostileSpawnManager(p)
    let fallbackSpawnManager = getPlayerUndeadSpawnManager(p)
    g_hostileRandomSpawnPointProviders[index + SpawnRange.CLOSE castTo int] = new RandomSpawnPointProvider(spawnManager, fallbackSpawnManager, SpawnRange.CLOSE)
    g_hostileRandomSpawnPointProviders[index + SpawnRange.NEAR castTo int] = new RandomSpawnPointProvider(spawnManager, fallbackSpawnManager, SpawnRange.NEAR)
    g_hostileRandomSpawnPointProviders[index + SpawnRange.MID castTo int] = new RandomSpawnPointProvider(spawnManager, fallbackSpawnManager, SpawnRange.MID)
    g_hostileRandomSpawnPointProviders[index + SpawnRange.FAR castTo int] = new RandomSpawnPointProvider(spawnManager, fallbackSpawnManager, SpawnRange.FAR)
  //}
  return g_hostileRandomSpawnPointProviders[index + (spawnRange castTo int)]

// ============================================================================
public function getFriendlySpawnPointProviderForPlayer(player p, SpawnRange spawnRange) returns ISpawnPointProvider
  let index = p.getId() * 4
  if (g_friendlyRandomSpawnPointProviders[index] == null)
  //{
    let spawnManager = getPlayerCachedFriendlySpawnManager(p)
    let fallbackSpawnManager = getPlayerSurvivorSpawnManager(p)
    g_friendlyRandomSpawnPointProviders[index + SpawnRange.CLOSE castTo int] = new RandomSpawnPointProvider(spawnManager, fallbackSpawnManager, SpawnRange.CLOSE)
    g_friendlyRandomSpawnPointProviders[index + SpawnRange.NEAR castTo int] = new RandomSpawnPointProvider(spawnManager, fallbackSpawnManager, SpawnRange.NEAR)
    g_friendlyRandomSpawnPointProviders[index + SpawnRange.MID castTo int] = new RandomSpawnPointProvider(spawnManager, fallbackSpawnManager, SpawnRange.MID)
    g_friendlyRandomSpawnPointProviders[index + SpawnRange.FAR castTo int] = new RandomSpawnPointProvider(spawnManager, fallbackSpawnManager, SpawnRange.FAR)
  //}
  return g_friendlyRandomSpawnPointProviders[index + (spawnRange castTo int)]