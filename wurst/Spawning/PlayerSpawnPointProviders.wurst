package PlayerSpawnPointProviders
import RandomSpawnPointProvider
import UndeadSpawnManager
import HostileGridCachedSpawnManager
import FriendlyGridCachedSpawnManager
import SurvivorSpawnManager

RandomSpawnPointProvider array g_hostileSpawnPointProviders
RandomSpawnPointProvider array g_friendlySpawnPointProviders

// ============================================================================
public function getHostileSpawnPointProviderForPlayer(player p) returns ISpawnPointProvider
  let playerId = p.getId()
  if (g_hostileSpawnPointProviders[playerId] == null)
  //{
    let spawnManager = getPlayerCachedHostileSpawnManager(p)
    let fallbackSpawnManager = getPlayerUndeadSpawnManager(p)
    g_hostileSpawnPointProviders[playerId] = new RandomSpawnPointProvider(spawnManager, fallbackSpawnManager)
  //}
  return g_hostileSpawnPointProviders[playerId]

// ============================================================================
public function getFriendlySpawnPointProviderForPlayer(player p) returns ISpawnPointProvider
  let playerId = p.getId()
  if (g_friendlySpawnPointProviders[playerId] == null)
  //{
    let spawnManager = getPlayerCachedFriendlySpawnManager(p)
    let fallbackSpawnManager = getPlayerSurvivorSpawnManager(p)
    g_friendlySpawnPointProviders[playerId] = new RandomSpawnPointProvider(spawnManager, fallbackSpawnManager)
  //}
  return g_friendlySpawnPointProviders[playerId]
