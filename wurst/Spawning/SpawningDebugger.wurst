package SpawningDebugger
import ClosureTimers
import Frame
import ProjectConstants
import DebuggerDialog
import Spawning

// ============================================================================
class SpawningDebugger extends Frame

  // --------------------------------------------------------------------------
  construct()
    super(createFrame("TEXTAREA", "WaveDebugger", GAME_UI, "", 0))

    doPeriodically(0.1) (CallbackPeriodic cb) ->
      update()

  // --------------------------------------------------------------------------
  function update()

    let frameHandle = getFrameHandle()

    if (frameHandle.isVisible() == false)
      return

    BlzFrameSetText(frameHandle, "Spawned: " + SpawnController.getSpawnCount().toString())
    BlzFrameAddText(frameHandle, "Completed: " + SpawnController.getNumberOfCompletedRequests().toString())

    let queue = SpawnController.getQueue()
    BlzFrameAddText(frameHandle, "Active: " + queue.size().toString())

    for request in queue
      BlzFrameAddText(frameHandle, " > " + request.getDebuggerStateString())

// ============================================================================
init
  if (DEV_ENVIRONMENT)
    DebuggerDialog.registerFrame("SPWN", () -> new SpawningDebugger())