package SpawnDirectors
import Directors
import ClosureTimers
import Range
import WaveGeneratorCommon
import Math
import Time
import Deck
import SpawnCards
import SpawnUndeadUnitDirector
import Vector
import GameConstants
import HumanPlayers
import GameInstance
import ProjectConstants
import DirectorDebugger

SpawnUndeadUnitDirector array g_zombieDirectors
SpawnUndeadUnitDirector array g_eliteDirectors
SpawnUndeadUnitDirector array g_bossDirectors

Vector<SpawnCard> g_normalCards = new Vector<SpawnCard>(4)
Vector<SpawnCard> g_eliteCards = new Vector<SpawnCard>(16)
Vector<SpawnCard> g_bossCards = new Vector<SpawnCard>(8)

Deck g_zombieDeck
Vector<Deck> g_eliteDecks = new Vector<Deck>(TOTAL_NIGHTS)
Vector<Deck> g_bossDecks = new Vector<Deck>(4)

// ============================================================================
function onNightStart()

  for p in g_PlayingHumanPlayers
  //{
    let night = g_GameInstance.getNight()
    let diff = g_GameInstance.getPlayerDifficultyCoeff(p)
    let creditsOnActivation = 25 + ((night / 5).floor() + 1) * 25.0 * diff

    g_zombieDirectors[p.getId()]
    ..setCreditsOnActivation(creditsOnActivation)
    ..enable()

    if (night > 1)
    //{
      if (night mod 5 == 0)
        g_bossDirectors[p.getId()]
        ..setDeck(g_bossDecks.get((night / 5).floor() - 1))
        ..setCreditsOnActivation(creditsOnActivation)
        ..enable()
      else if (night == 16)
        g_bossDirectors[p.getId()]
        ..setDeck(g_bossDecks.get(4))
        ..setCreditsOnActivation(creditsOnActivation)
        ..enable()
      else
        g_eliteDirectors[p.getId()]
        ..setDeck(g_eliteDecks.get(night - 2))
        ..setCreditsOnActivation(creditsOnActivation)
        ..enable()
    //}
  //}


// ============================================================================
function onDayStart()

  for p in g_PlayingHumanPlayers
  //{
    g_zombieDirectors[p.getId()].disable()
    g_eliteDirectors[p.getId()].disable()
    g_bossDirectors[p.getId()].disable()
  //}

// ============================================================================
init

  // Normal cards
  g_normalCards.add(SpawnCards.zombies)

  // Elite cards
  g_eliteCards.add(SpawnCards.skeletonArchers)
  g_eliteCards.add(SpawnCards.necromancers)
  g_eliteCards.add(SpawnCards.crows)
  g_eliteCards.add(SpawnCards.crows) // Boss
  g_eliteCards.add(SpawnCards.cultists)
  g_eliteCards.add(SpawnCards.orcSkeletons)
  g_eliteCards.add(SpawnCards.tombstones)
  g_eliteCards.add(SpawnCards.gargoyles)
  g_eliteCards.add(SpawnCards.gargoyles) // Boss
  g_eliteCards.add(SpawnCards.ghosts)
  g_eliteCards.add(SpawnCards.meatWagons)
  g_eliteCards.add(SpawnCards.raiders)
  g_eliteCards.add(SpawnCards.wyrms)
  g_eliteCards.add(SpawnCards.wyrms) // Boss
  g_eliteCards.add(SpawnCards.wyrms) // Boss

  for i = 0 to TOTAL_NIGHTS - 2
  //{
    let deck = new Deck()
    let elites = deck.addCategory("Elites", 1.0)
    elites.addCard(g_eliteCards.get(i))
    g_eliteDecks.add(deck)
  //}

  g_bossCards.add(SpawnCards.abominations)
  g_bossCards.add(SpawnCards.cryptFiends)
  g_bossCards.add(SpawnCards.forgottenOne)
  g_bossCards.add(SpawnCards.archimonde)

  for i = 0 to 3
  //{
    let deck = new Deck()
    deck.addCategory("Boss", 1.0)
    ..addCard(g_bossCards.get(i))
    g_bossDecks.add(deck)
  //}

  g_zombieDeck = new Deck()
  g_zombieDeck.addCategory("Zombies", 1.0)
  ..addCard(SpawnCards.zombies)

  nullTimer() () ->
  //{

    for p in g_PlayingHumanPlayers
    //{
      let playerDifficulty = g_GameInstance.getPlayerDifficulty(p)

      let zombieCreditsOnActivation = Pow(playerDifficulty + 1, 2.675)

      let zombieDirector = new SpawnUndeadUnitDirector(p.getId().toString() + ":Basic", p)
      zombieDirector.setCreditsOnActivation(zombieCreditsOnActivation)
      zombieDirector.setIntervalBetweenWaves(rangeReal(3.0, 10.0))
      zombieDirector.setIntervalDuringWaves(rangeReal(0.1, 1.0))
      zombieDirector.setSpawnsPerGoldDrop(context -> 20)
      zombieDirector.setGoldDropAmount(context -> 1)
      zombieDirector.setMaxSpawnCount(context -> UNLIMITED)
      zombieDirector.setMaxAliveCount(context -> 10)
      zombieDirector.setDeck(g_zombieDeck)
      g_zombieDirectors[p.getId()] = zombieDirector
      
      let eliteCreditsOnActivation = 2 * Pow(playerDifficulty + 1, 2.675)

      let eliteDirector = new SpawnUndeadUnitDirector(p.getId().toString() + ":Elite", p)
      eliteDirector.setCreditsOnActivation(eliteCreditsOnActivation)
      eliteDirector.setIntervalBetweenWaves(rangeReal(3.0, 10.0))
      eliteDirector.setIntervalDuringWaves(rangeReal(0.1, 1.0))
      eliteDirector.setSpawnsPerGoldDrop(context -> calculateSpawnsPerGoldDropForElites(context))
      eliteDirector.setGoldDropAmount(context -> calculateGoldDropAmountForElites(context))
      eliteDirector.setMaxSpawnCount(context -> calculateMaxSpawnCountForElites(context))
      eliteDirector.setMaxAliveCount(context -> calculateMaxAliveCountForElites(context))
      eliteDirector.setDeck(g_eliteDecks.get(0))
      g_eliteDirectors[p.getId()] = eliteDirector
      
      let bossCreditsOnActivation = 100 + Pow(playerDifficulty + 1, 4.65)

      let bossDirector = new SpawnUndeadUnitDirector(p.getId().toString() + ":Boss", p)
      bossDirector.setCreditsOnActivation(bossCreditsOnActivation)
      bossDirector.setIntervalBetweenWaves(rangeReal(3.0, 10.0))
      bossDirector.setIntervalDuringWaves(rangeReal(0.1, 1.0))
      bossDirector.setSpawnsPerGoldDrop(context -> 1)
      bossDirector.setGoldDropAmount(context -> GOLD_PER_BOSS)
      bossDirector.setMaxSpawnCount(context -> max(playerDifficulty.floor(), 1))
      bossDirector.setMaxAliveCount(context -> max(playerDifficulty.floor(), 1))
      bossDirector.setDeck(g_bossDecks.get(0))
      g_bossDirectors[p.getId()] = bossDirector
    //}

    if (DEV_ENVIRONMENT)
      DirectorDebugger.registerDirector(g_zombieDirectors[0])
      DirectorDebugger.registerDirector(g_eliteDirectors[0])
      DirectorDebugger.registerDirector(g_bossDirectors[0])
  //}

  registerNightEvent(function onNightStart)
  registerDayEvent(function onDayStart)