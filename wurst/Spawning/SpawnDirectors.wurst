package SpawnDirectors
import Directors
import ClosureTimers
import Range
import WaveGeneratorCommon
import Math
import Time
import Deck
import SpawnCards
import SpawnUndeadUnitDirector
import Vector
import GameConstants
import HumanPlayers
import GameInstance

SpawnUndeadUnitDirector array g_zombieDirectors
SpawnUndeadUnitDirector array g_eliteDirectors

Vector<SpawnCard> g_normalCards = new Vector<SpawnCard>(16)
Vector<SpawnCard> g_eliteCards = new Vector<SpawnCard>(16)

Deck g_zombieDeck
Vector<Deck> g_eliteDecks = new Vector<Deck>(TOTAL_NIGHTS)

// ============================================================================
function onNightStart()

  for p in g_PlayingHumanPlayers
  //{
    let night = g_GameInstance.getNight()
    let diff = g_GameInstance.getPlayerDifficultyCoeff(p)
    let creditsOnActivation = 25 + ((night / 5).floor() + 1) * 25.0 * diff

    g_zombieDirectors[p.getId()]
    ..setCreditsOnActivation(creditsOnActivation)
    ..enable()

    if (night > 1)
      g_eliteDirectors[p.getId()]
      ..setDeck(g_eliteDecks.get(night - 2))
      ..setCreditsOnActivation(creditsOnActivation)
      ..enable()
  //}


// ============================================================================
function onDayStart()

  for p in g_PlayingHumanPlayers
  //{
    g_zombieDirectors[p.getId()].disable()
    g_eliteDirectors[p.getId()].disable()
  //}

// ============================================================================
init

  // Normal cards
  g_normalCards.add(SpawnCards.zombies)

  // Elite cards
  g_eliteCards.add(SpawnCards.skeletonArchers)
  g_eliteCards.add(SpawnCards.necromancers)
  g_eliteCards.add(SpawnCards.crows)
  g_eliteCards.add(SpawnCards.abominations)
  g_eliteCards.add(SpawnCards.cultists)
  g_eliteCards.add(SpawnCards.orcSkeletons)
  g_eliteCards.add(SpawnCards.tombstones)
  g_eliteCards.add(SpawnCards.gargoyles)
  g_eliteCards.add(SpawnCards.cryptFiends)
  g_eliteCards.add(SpawnCards.ghosts)
  g_eliteCards.add(SpawnCards.meatWagons)
  g_eliteCards.add(SpawnCards.raiders)
  g_eliteCards.add(SpawnCards.wyrms)
  g_eliteCards.add(SpawnCards.forgottenOne)
  g_eliteCards.add(SpawnCards.archimonde)

  for i = 0 to TOTAL_NIGHTS - 2
  //{
    let deck = new Deck()
    let elites = deck.addCategory("Elites", 1.0)
    elites.addCard(g_eliteCards.get(i), 1.0)
    g_eliteDecks.add(deck)
  //}

  g_zombieDeck = new Deck()
  let zombies = g_zombieDeck.addCategory("Zombies", 1.0)
  zombies.addCard(SpawnCards.zombies, 1.0)

  nullTimer() () ->

    for p in g_PlayingHumanPlayers
    //{
      let zombieDirector = new SpawnUndeadUnitDirector(p.getId().toString() + ":Zombies", p)
      zombieDirector.setCreditsOnActivation(50)
      zombieDirector.setIntervalBetweenWaves(rangeReal(3.0, 10.0))
      zombieDirector.setIntervalDuringWaves(rangeReal(0.1, 1.0))
      zombieDirector.setSpawnsPerGoldDrop(context -> 20)
      zombieDirector.setGoldDropAmount(context -> 1)
      zombieDirector.setMaxSpawnCount(context -> UNLIMITED)
      zombieDirector.setMaxAliveCount(context -> 10)
      zombieDirector.setDeck(g_zombieDeck)
      g_zombieDirectors[p.getId()] = zombieDirector

      let eliteDirector = new SpawnUndeadUnitDirector(p.getId().toString() + ":Elites", p)
      eliteDirector.setCreditsOnActivation(50)
      eliteDirector.setIntervalBetweenWaves(rangeReal(3.0, 10.0))
      eliteDirector.setIntervalDuringWaves(rangeReal(0.1, 1.0))
      eliteDirector.setSpawnsPerGoldDrop(context -> calculateSpawnsPerGoldDropForElites(context))
      eliteDirector.setGoldDropAmount(context -> calculateGoldDropAmountForElites(context))
      eliteDirector.setMaxSpawnCount(context -> calculateMaxSpawnCountForElites(context))
      eliteDirector.setMaxAliveCount(context -> calculateMaxAliveCountForElites(context))
      eliteDirector.setDeck(g_eliteDecks.get(0))
      g_eliteDirectors[p.getId()] = eliteDirector
    //}

  registerNightEvent(function onNightStart)
  registerDayEvent(function onDayStart)