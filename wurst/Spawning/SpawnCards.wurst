package SpawnCards
import Spawning
import GameConstants
import TlsUnitIds
import WaveGeneratorCommon
import Math
import UnitModifiers
import ObjEditingCommons
import BossItemLibrary
import SpawnUndeadUnitDirector
import SpawnDefinitionTags
import FX
import Range

public class SpawnCards

  // Normals
  static SpawnCard zombies          = createSpawnCard_Zombies()           ..setCost(3)
  
  // Elites
  static SpawnCard skeletonArchers  = createSpawnCard_SkeletonArchers()   ..setCost(10)
  static SpawnCard crows            = createSpawnCard_Crows()             ..setCost(10)
  static SpawnCard gargoyles        = createSpawnCard_Gargoyles()         ..setCost(20)
  static SpawnCard wyrms            = createSpawnCard_Wyrms()             ..setCost(30)
  static SpawnCard cultists         = createSpawnCard_Cultists()          ..setCost(20)
  static SpawnCard necromancers     = createSpawnCard_Necromancers()      ..setCost(40)
  static SpawnCard tombstones       = createSpawnCard_Tombstones()        ..setCost(50)
  static SpawnCard ghosts           = createSpawnCard_Ghosts()            ..setCost(30)
  static SpawnCard orcSkeletons     = createSpawnCard_OrcSkeletons()      ..setCost(20)
  static SpawnCard meatWagons       = createSpawnCard_MeatWagons()        ..setCost(20)

  // Bosses
  static SpawnCard abominations     = createSpawnCard_Abomination()       ..setCost(100)
  static SpawnCard cryptFiends      = createSpawnCard_CryptFiends()       ..setCost(100)
  static SpawnCard forgottenOne     = createSpawnCard_ForgottenOne()      ..setCost(100)
  
  // Final Bosses
  static SpawnCard archimonde       = createSpawnCard_Archimonde()        ..setCost(1000)

// ============================================================================
function createSpawnCard_Zombies() returns SpawnCard

  let def = new SpawnDefinition("Zombie")
  ..setSpawnRange(SpawnRange.CLOSE)
  ..setUseUnitRecycler(true)

  let unitTypeProvider = new TieredUnitTypeProvider()
  for i = 0 to MAX_ELITE_TIER-1
    unitTypeProvider.setUnitType(i, TlsUnitIds.Undead.zombiesNight[i])
  def.setUnitTypeProvider(unitTypeProvider)

  def.setCommonUnitModifier() (unit u, SpawnContext context) ->
  //{
    g_zombieMeleeModifiers.apply(context, u)
    u.setMoveSpeed(lerp(120, 250, context.getGameProgress01()))
    u.preferStructureTargets()
  //}

  def.setUnitModifier(TlsUnitIds.Undead.zombiesNight[0]) (u, context) ->
    u.setDefenseType(ArmorType.Unarmored)

  def.setUnitModifier(TlsUnitIds.Undead.zombiesNight[1]) (u, context) ->
    u.setDefenseType(ArmorType.Normal)

  def.setUnitModifier(TlsUnitIds.Undead.zombiesNight[2]) (u, context) ->
    u.setDefenseType(ArmorType.Large)

  return new SpawnCard(def)

// ============================================================================
function createSpawnCard_SkeletonArchers() returns SpawnCard

  let def = new SpawnDefinition("Skeleton Archer")
  ..setTags(SpawnDefinitionTags.ranged, SpawnDefinitionTags.normal)
  ..setSpawnRange(SpawnRange.MID)

  let unitTypeProvider = new TieredUnitTypeProvider()
  for i = 0 to MAX_ELITE_TIER-1
    unitTypeProvider.setUnitType(i, TlsUnitIds.Undead.skeletonArchers[i])
  def.setUnitTypeProvider(unitTypeProvider)

  def.setCommonUnitModifier() (unit u, SpawnContext context) ->
    g_eliteRangedModifiers.apply(context, u)
    u.setDefenseType(ArmorType.Medium)

  return new SpawnCard(def)

// ============================================================================
function createSpawnCard_Crows() returns SpawnCard

  let def = new SpawnDefinition("Crows")
  ..setTags(SpawnDefinitionTags.flying, SpawnDefinitionTags.ranged, SpawnDefinitionTags.magic)
  ..setSpawnRange(SpawnRange.MID)

  let unitTypeProvider = new TieredUnitTypeProvider()
  for i = 0 to MAX_ELITE_TIER-1
    unitTypeProvider.setUnitType(i, TlsUnitIds.Undead.crows[i])
  def.setUnitTypeProvider(unitTypeProvider)

  def.setCommonUnitModifier() (unit u, SpawnContext context) ->
    g_eliteAirModifiers.apply(context, u)
    u.setDefenseType(ArmorType.Small)
    u.setMoveSpeed(300)

  return new SpawnCard(def)

// ============================================================================
function createSpawnCard_Gargoyles() returns SpawnCard

  let def = new SpawnDefinition("Gargoyles")
  ..setTags(SpawnDefinitionTags.flying, SpawnDefinitionTags.melee, SpawnDefinitionTags.normal)
  ..setSpawnRange(SpawnRange.MID)

  let unitTypeProvider = new TieredUnitTypeProvider()
  for i = 0 to MAX_ELITE_TIER-1
    unitTypeProvider.setUnitType(i, TlsUnitIds.Undead.gargoyles[i])
  def.setUnitTypeProvider(unitTypeProvider)

  def.setCommonUnitModifier() (unit u, SpawnContext context) ->
    g_eliteAirModifiers.apply(context, u)
    u.setDefenseType(ArmorType.Medium)
    u.setMoveSpeed(300)

  return new SpawnCard(def)

// ============================================================================
function createSpawnCard_Wyrms() returns SpawnCard

  let def = new SpawnDefinition("Wyrms")
  ..setTags(SpawnDefinitionTags.flying, SpawnDefinitionTags.melee, SpawnDefinitionTags.normal)
  ..setSpawnRange(SpawnRange.MID)

  let unitTypeProvider = new TieredUnitTypeProvider()
  for i = 0 to MAX_ELITE_TIER-1
    unitTypeProvider.setUnitType(i, TlsUnitIds.Undead.wyrms[i])
  def.setUnitTypeProvider(unitTypeProvider)

  def.setCommonUnitModifier() (unit u, SpawnContext context) ->
    g_eliteAirModifiers.apply(context, u)
    g_eliteAirModifiers.applyHealth(context, u, 1.25)
    g_eliteAirModifiers.applyAttack1Cooldown(context, u, 1.5)
    g_eliteAirModifiers.applyAttack1DamageRange(context, u, 0.50)
    u.preferStructureTargets()

  return new SpawnCard(def)

// ============================================================================
function createSpawnCard_Cultists() returns SpawnCard

  let def = new SpawnDefinition("Fallen Cultists")
  ..setTags(SpawnDefinitionTags.invade, SpawnDefinitionTags.melee, SpawnDefinitionTags.piercing)
  ..setSpawnRange(SpawnRange.MID)

  let unitTypeProvider = new TieredUnitTypeProvider()
  for i = 0 to MAX_ELITE_TIER-1
    unitTypeProvider.setUnitType(i, TlsUnitIds.Undead.cultists[i])
  def.setUnitTypeProvider(unitTypeProvider)

  def.setCommonUnitModifier() (unit u, SpawnContext context) ->
    g_eliteMeleeModifiers.apply(context, u)
    g_eliteMeleeModifiers.applyAttack1DamageRange(context, u, 0.6)

  return new SpawnCard(def)

// ============================================================================
function createSpawnCard_Necromancers() returns SpawnCard

  let def = new SpawnDefinition("Necromancers")
  ..setTags(SpawnDefinitionTags.summoner, SpawnDefinitionTags.ranged, SpawnDefinitionTags.magic)
  ..setSpawnRange(SpawnRange.MID)

  let unitTypeProvider = new TieredUnitTypeProvider()
  for i = 0 to MAX_ELITE_TIER-1
    unitTypeProvider.setUnitType(i, TlsUnitIds.Undead.necromancers[i])
  def.setUnitTypeProvider(unitTypeProvider)

  // NOTE: Can't use common modifer here since summoned units would also share it

  def.setUnitModifier(TlsUnitIds.Undead.necromancers[0]) (unit u, SpawnContext context) ->
  //{
    g_eliteRangedModifiers.apply(context, u)
    u.setupNecromancer()
    u.setMoveSpeed(300)
    u.setupSummoner(context)
  //}

  def.setUnitModifier(TlsUnitIds.Undead.necromancers[1]) (unit u, SpawnContext context) ->
  //{
    g_eliteRangedModifiers.apply(context, u)
    u.setupNecromancer()
    u.setMoveSpeed(300)
    u.setupSummoner(context)
  //}

  def.setUnitModifier(TlsUnitIds.Undead.necromancers[2]) (unit u, SpawnContext context) ->
  //{
    g_eliteRangedModifiers.apply(context, u)
    u.setupNecromancer()
    u.setMoveSpeed(300)
    u.setupSummoner(context)
  //}

  // SUMMONS - Skeleton Warrior
  def.setUnitModifier(TlsUnitIds.Undead.skeletonWarrior) (unit u, SpawnContext context) ->
  //{
    g_necromancerSkeletonWarriorModifiers.apply(context, u)
  //}

  // SUMMONS - Skeleton Mage
  def.setUnitModifier(TlsUnitIds.Undead.skeletonMage) (unit u, SpawnContext context) ->
  //{
    g_necromancerSkeletonMageModifiers.apply(context, u)
  //}

  // SUMMONS - Skeleton Champion
  def.setUnitModifier(TlsUnitIds.Undead.skeletonChampion) (unit u, SpawnContext context) ->
  //{
    g_necromancerSkeletonChampionModifiers.apply(context, u)
  //}

  return new SpawnCard(def)

// ============================================================================
function createSpawnCard_Tombstones() returns SpawnCard

  let def = new SpawnDefinition("Tombstones")
  ..setTags(SpawnDefinitionTags.grouped, SpawnDefinitionTags.melee, SpawnDefinitionTags.normal)
  ..setSpawnRange(SpawnRange.CLOSE)

  let unitTypeProvider = new TieredUnitTypeProvider()
  for i = 0 to MAX_ELITE_TIER-1
    unitTypeProvider.setUnitType(i, TlsUnitIds.Undead.tombstones[i])
  def.setUnitTypeProvider(unitTypeProvider)

  def.setUnitModifier(TlsUnitIds.Undead.tombstones[0]) (unit u, SpawnContext context) ->
  //{
    g_eliteMeleeModifiers.applyHealth(context, u, 0.5)
    g_eliteMeleeModifiers.applyArmor(context, u, 0.5)
    u.setupSummoner(context)
  //}

  def.setUnitModifier(TlsUnitIds.Undead.tombstones[1]) (unit u, SpawnContext context) ->
  //{
    g_eliteMeleeModifiers.applyHealth(context, u, 0.75)
    g_eliteMeleeModifiers.applyArmor(context, u, 0.75)
    u.setupSummoner(context)
  //}

  def.setUnitModifier(TlsUnitIds.Undead.tombstones[2]) (unit u, SpawnContext context) ->
  //{
    g_eliteMeleeModifiers.applyHealth(context, u, 1.0)
    g_eliteMeleeModifiers.applyArmor(context, u, 1.0)
    u.setupSummoner(context)
  //}

  let summonEffectPath = "Abilities\\Spells\\Undead\\AnimateDead\\AnimateDeadTarget.mdl"

  def.setUnitModifier(TlsUnitIds.Undead.darkMinions[0]) (unit u, SpawnContext context) ->
  //{
    g_eliteMeleeModifiers.apply(context, u, 0.5)
    FX.createEffectOneShot(summonEffectPath, u.getPos())
  //}

  def.setUnitModifier(TlsUnitIds.Undead.darkMinions[1]) (unit u, SpawnContext context) ->
  //{
    g_eliteMeleeModifiers.apply(context, u, 0.75)
    FX.createEffectOneShot(summonEffectPath, u.getPos())
  //}

  def.setUnitModifier(TlsUnitIds.Undead.darkMinions[2]) (unit u, SpawnContext context) ->
  //{
    g_eliteMeleeModifiers.apply(context, u, 1.0)
    FX.createEffectOneShot(summonEffectPath, u.getPos())
  //}

  return new SpawnCard(def)

// ============================================================================
function createSpawnCard_Ghosts() returns SpawnCard

  let def = new SpawnDefinition("Ghosts")
  ..setTags(SpawnDefinitionTags.invade, SpawnDefinitionTags.ethereal, SpawnDefinitionTags.melee, SpawnDefinitionTags.magic)
  ..setSpawnRange(SpawnRange.MID)

  let unitTypeProvider = new TieredUnitTypeProvider()
  for i = 0 to MAX_ELITE_TIER-1
    unitTypeProvider.setUnitType(i, TlsUnitIds.Undead.ghosts[i])
  def.setUnitTypeProvider(unitTypeProvider)

  def.setCommonUnitModifier() (unit u, SpawnContext context) ->
    g_eliteRangedModifiers.apply(context, u)
    g_eliteRangedModifiers.applyHealth(context, u, 0.5)

  return new SpawnCard(def)

// ============================================================================
function createSpawnCard_OrcSkeletons() returns SpawnCard

  let def = new SpawnDefinition("Orc Skeletons")
  ..setTags(SpawnDefinitionTags.grouped, SpawnDefinitionTags.melee, SpawnDefinitionTags.heavy, SpawnDefinitionTags.normal)
  ..setSpawnRange(SpawnRange.MID)

  let unitTypeProvider = new TieredUnitTypeProvider()
  for i = 0 to MAX_ELITE_TIER-1
    unitTypeProvider.setUnitType(i, TlsUnitIds.Undead.skeletonOrcs[i])
  def.setUnitTypeProvider(unitTypeProvider)

  def.setCommonUnitModifier() (unit u, SpawnContext context) ->
    g_eliteMeleeModifiers.apply(context, u)
    g_eliteMeleeModifiers.applyAttack1Cooldown(context, u, 2.0)
    g_eliteMeleeModifiers.applyAttack1DamageRange(context, u, 0.75)
    u.setMoveSpeed(150)

  return new SpawnCard(def)

// ============================================================================
function createSpawnCard_MeatWagons() returns SpawnCard

  let def = new SpawnDefinition("Meat Wagons")
  ..setTags(SpawnDefinitionTags.ranged, SpawnDefinitionTags.siege)
  ..setSpawnRange(SpawnRange.MID)

  let unitTypeProvider = new TieredUnitTypeProvider()
  for i = 0 to MAX_ELITE_TIER-1
    unitTypeProvider.setUnitType(i, TlsUnitIds.Undead.wagons[i])
  def.setUnitTypeProvider(unitTypeProvider)

  def.setCommonUnitModifier() (unit u, SpawnContext context) ->
    g_eliteRangedModifiers.apply(context, u)
    g_eliteRangedModifiers.applyAttack1Cooldown(context, u, 2.0)

  return new SpawnCard(def)

// ============================================================================
function createSpawnCard_Abomination() returns SpawnCard
  
  let def = new SpawnDefinition("Abominations")
  ..setTags(SpawnDefinitionTags.leader, SpawnDefinitionTags.heavy, SpawnDefinitionTags.siege)
  ..setGoldDropAmount(context -> GOLD_PER_BOSS)
  ..setSpawnRange(SpawnRange.MID)
  ..setupForBoss()

  let unitTypeProvider = new TieredUnitTypeProvider()
  for i = 0 to MAX_ELITE_TIER-1
    unitTypeProvider.setUnitType(i, TlsUnitIds.Undead.abominations[i])
  def.setUnitTypeProvider(unitTypeProvider)

  def.setCommonUnitModifier() (unit u, SpawnContext context) ->
  //{
    g_eliteMeleeModifiers.applyHealth(context, u, 4.0)
    g_eliteMeleeModifiers.applyArmor(context, u, 3.0)
    g_eliteMeleeModifiers.applyAttack1DamageRange(context, u, 2.0)
    g_eliteMeleeModifiers.applyAttack1Cooldown(context, u, 1.0)
    u.awardXpOnDeath(100)
    u.setAcquisitionRange(ELITE_SIGHT_RANGE)
    u.setSightRadius(ELITE_SIGHT_RANGE)
    u.setMoveSpeed(125.0)
    u.awardRandomItemOnDeath(g_BossItemLibrary.rareSet, 1.0)
    u.preferStructureTargets()
  //}

  return new SpawnCard(def)

// ============================================================================
function createSpawnCard_CryptFiends() returns SpawnCard
  
  let def = new SpawnDefinition("Crypt Fiends")
  ..setTags(SpawnDefinitionTags.invade, SpawnDefinitionTags.ranged, SpawnDefinitionTags.magic)
  ..setGoldDropAmount(context -> GOLD_PER_BOSS)
  ..setSpawnRange(SpawnRange.MID)
  ..setupForBoss()

  let unitTypeProvider = new TieredUnitTypeProvider()
  for i = 0 to MAX_ELITE_TIER-1
    unitTypeProvider.setUnitType(i, TlsUnitIds.Undead.fiends[i])
  def.setUnitTypeProvider(unitTypeProvider)

  def.setCommonUnitModifier() (unit u, SpawnContext context) ->
  //{
    g_eliteMeleeModifiers.applyHealth(context, u, 4.0)
    g_eliteMeleeModifiers.applyArmor(context, u, 3.0)
    g_eliteRangedModifiers.applyAttack1DamageRange(context, u, 2.0)
    g_eliteRangedModifiers.applyAttack1Cooldown(context, u, 1.0)
    u.awardXpOnDeath(100)
    u.setAcquisitionRange(ELITE_SIGHT_RANGE)
    u.setSightRadius(ELITE_SIGHT_RANGE)
    u.awardRandomItemOnDeath(g_BossItemLibrary.epicSet, 1.0)
    u.setMoveSpeed(350)
    u.preferOrganicTargets()
  //}

  return new SpawnCard(def)

// ============================================================================
function createSpawnCard_ForgottenOne() returns SpawnCard
  
  let def = new SpawnDefinition("Forbidden One")
  ..setTags(SpawnDefinitionTags.boss, SpawnDefinitionTags.ranged, SpawnDefinitionTags.chaos, SpawnDefinitionTags.hero, SpawnDefinitionTags.summoner)
  ..setGoldDropAmount(context -> GOLD_PER_BOSS)
  ..setSpawnRange(SpawnRange.FAR)
  ..setupForBoss()

  let unitTypeProvider = new TieredUnitTypeProvider()
  for i = 0 to MAX_ELITE_TIER-1
    unitTypeProvider.setUnitType(i, TlsUnitIds.Undead.forgottenOnes[i])
  def.setUnitTypeProvider(unitTypeProvider)

  for i = 0 to MAX_ELITE_TIER-1
  //{
    def.setUnitModifier(TlsUnitIds.Undead.forgottenOnes[i]) (unit u, SpawnContext context) ->
      g_eliteMeleeModifiers.applyHealth(context, u, 2.0)
      g_eliteMeleeModifiers.applyArmor(context, u, 1.0)
      g_eliteMeleeModifiers.applyAttack1Cooldown(context, u, 1.5)
      g_eliteRangedModifiers.applyAttack1DamageRange(context, u, 1.0)
      u.awardRandomItemOnDeath(g_BossItemLibrary.legendarySet, 1.0)
      u.setAttackRange(0, RANGED_UNIT_ATTACK_RANGE.toReal())
      u.setAcquisitionRange(SPAWN_RANGE_FAR.max)
      u.setSightRadius(SPAWN_RANGE_FAR.max)
      u.preferStructureTargets()
      u.setupSummoner(context)
    
    def.setUnitModifier(TlsUnitIds.Undead.tentacles[i]) (unit u, SpawnContext context) ->
      g_eliteMeleeModifiers.applyHealth(context, u, 0.5)
      g_eliteMeleeModifiers.applyArmor(context, u, 0.5)
      g_eliteMeleeModifiers.applyAttack1Cooldown(context, u, 1.0)
      g_eliteMeleeModifiers.applyAttack1DamageRange(context, u, 0.25)
      u.setAcquisitionRange(ELITE_SIGHT_RANGE)
      u.setSightRadius(ELITE_SIGHT_RANGE)
      u.preferOrganicTargets()
  //}

  return new SpawnCard(def)

// ============================================================================
function createSpawnCard_Archimonde() returns SpawnCard
  
  let def = new SpawnDefinition("Archimonde")
  ..setTags(SpawnDefinitionTags.boss, SpawnDefinitionTags.ranged, SpawnDefinitionTags.chaos, SpawnDefinitionTags.hero, SpawnDefinitionTags.summoner)
  ..setGoldDropAmount(context -> GOLD_PER_BOSS)
  ..setSpawnRange(SpawnRange.MID)
  ..setupForBoss()

  let unitTypeProvider = new TieredUnitTypeProvider()
  for i = 0 to MAX_ELITE_TIER-1
    unitTypeProvider.setUnitType(i, TlsUnitIds.Undead.archimonde)
  def.setUnitTypeProvider(unitTypeProvider)

  def.setUnitModifier(TlsUnitIds.Undead.archimonde) (unit u, SpawnContext context) ->
    g_eliteMeleeModifiers.applyHealth(context, u, 4.0)
    g_eliteMeleeModifiers.applyArmor(context, u, 2.0)
    g_eliteMeleeModifiers.applyAttack1Cooldown(context, u, 1.0)
    g_eliteRangedModifiers.applyAttack1DamageRange(context, u, 1.5)
    u.setAttackRange(0, RANGED_UNIT_ATTACK_RANGE.toReal())
    u.setAcquisitionRange(ELITE_SIGHT_RANGE)
    u.setSightRadius(ELITE_SIGHT_RANGE)
    u.setupSummoner(context)

  def.setUnitModifier(TlsUnitIds.Undead.infernal) (unit u, SpawnContext context) ->
    g_eliteMeleeModifiers.apply(context, u, 1.0)
    g_eliteMeleeModifiers.applyAttack1DamageRange(context, u, 0.75)

  def.setUnitModifier(TlsUnitIds.Undead.doomGuard) (unit u, SpawnContext context) ->
    g_eliteMeleeModifiers.apply(context, u, 1.25)
    g_eliteMeleeModifiers.applyAttack1DamageRange(context, u, 0.75)

  def.setUnitModifier(TlsUnitIds.Undead.felHound) (unit u, SpawnContext context) ->
    g_eliteMeleeModifiers.apply(context, u, 1.0)
    g_eliteMeleeModifiers.applyAttack1DamageRange(context, u, 0.75)

  return new SpawnCard(def)