package ISpawnPointProvider
import SpawnPointCollection
import Range
import GameConstants
import Bounds

// ============================================================================
public enum SpawnRange
  CLOSE
  MID
  FAR

// ============================================================================
public function SpawnRange.toRangeReal() returns rangeReal
  switch (this)
    case CLOSE
      return SPAWN_RANGE_CLOSE
    case MID
      return SPAWN_RANGE_MID
    case FAR
      return SPAWN_RANGE_FAR

// ============================================================================
public function SpawnRange.toString() returns string
  switch (this)
    case CLOSE
      return "Close"
    case MID
      return "Mid"
    case FAR
      return "Far"

// ============================================================================
public tuple spawnPointResult(bool succeeded, vec2 spawnPoint)
public tuple spawnPointsResult(bool succeeded, SpawnPointCollection spawnPoints)

// ============================================================================
public interface ISpawnPointProvider
  function getRandomSpawnPointInRange(vec2 pos, rangeReal range) returns spawnPointResult
  function getRandomSpawnPointsInRange(vec2 pos, rangeReal range, int count) returns spawnPointsResult
  function getRandomSpawnPointInRect(bounds bounds) returns spawnPointResult
  function getRandomSpawnPointsInRect(bounds bounds, int count) returns spawnPointsResult

// ============================================================================
public function ISpawnPointProvider.getRandomSpawnPointInPlayableMap() returns spawnPointResult
  return this.getRandomSpawnPointInRect(bounds(playableMin, playableMax))