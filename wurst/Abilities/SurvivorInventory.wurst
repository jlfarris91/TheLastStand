package SurvivorInventory
import RegisterEvents
import TlsUpgradeIds
import GroupUtils
import TlsAbilityIds
import UnitIndexer
import TlsUnitIds

constant int array g_survivorInventoryIds = [
  TlsAbilityIds.survivorInventory1,
  TlsAbilityIds.survivorInventory2,
  TlsAbilityIds.survivorInventory3,
  TlsAbilityIds.survivorInventory4,
  TlsAbilityIds.survivorInventory5
]

item array[6] g_tempInventory

// ============================================================================
function onResearchFinished()
  let research = GetResearched()
  if (research != TlsUpgradeIds.backpack)
    return

  let researchingUnit = GetResearchingUnit()
  let owningPlayer = researchingUnit.getOwner()

  let tempGroup = getGroup()
  tempGroup.enumUnitsOfPlayer(owningPlayer, null)
  for _unit in tempGroup
    updateSurvivorInventory(_unit)
  tempGroup.release()

// ============================================================================
function onUnitIndexed()
  let indexingUnit = getIndexingUnit()

  if (not indexingUnit.isSurvivor())
    return

  updateSurvivorInventory(indexingUnit)
  
// ============================================================================
function updateSurvivorInventory(unit _unit)
  let owningPlayer = _unit.getOwner()

  let survivorInventoryLevel = GetPlayerTechCountSimple(TlsUpgradeIds.backpack, owningPlayer)

  for i = 0 to bj_MAX_INVENTORY - 1
    g_tempInventory[i] = _unit.itemInSlot(i)
    if (g_tempInventory[i] != null)
      UnitRemoveItem(_unit, g_tempInventory[i])    

  _unit.removeAbility(TlsAbilityIds.survivorInventory1)
  _unit.removeAbility(TlsAbilityIds.survivorInventory2)
  _unit.removeAbility(TlsAbilityIds.survivorInventory3)
  _unit.removeAbility(TlsAbilityIds.survivorInventory4)
  _unit.removeAbility(TlsAbilityIds.survivorInventory5)

  _unit.addAbility(g_survivorInventoryIds[survivorInventoryLevel])

  for i = 0 to bj_MAX_INVENTORY - 1
    if (g_tempInventory[i] != null)
      UnitAddItem(_unit, g_tempInventory[i])
    g_tempInventory[i] = null

// ============================================================================
init
  onUnitIndex(function onUnitIndexed)
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_RESEARCH_FINISH, function onResearchFinished)
