package HeroAbility_Shockwave
import ChannelAbilityPreset
import Math
import Icons
import HeroAbilities
import TlsAbilityIds

// ============================================================================
class Shockwave
  static constant int ABILITY_ID = TlsAbilityIds.Hero.shockwave
  static constant int ABILITY_LEARN_ID = TlsAbilityIds.Hero.shockwave_learn

  // --------------------------------------------------------------------------
  static function getTooltipNormal(int effectiveAbilityLevel, int learnedAbilityLevel) returns string
    return "Shockwave - [{0}]".format("Level {0}".format(
      effectiveAbilityLevel.toString()).colorizeTooltipForHeroAbility(effectiveAbilityLevel, learnedAbilityLevel))

  // --------------------------------------------------------------------------
  static function getDamage(int effectiveAbilityLevel) returns real
    return lerp(300.0, 1200.0, parameterize(1, 3, effectiveAbilityLevel))

  // --------------------------------------------------------------------------
  static function getManaCost(int _effectiveAbilityLevel) returns int
    return 60

  // --------------------------------------------------------------------------
  static function getTooltipNormalExtended(int effectiveAbilityLevel, int learnedAbilityLevel) returns string
    return "A wave of force that ripples outward, causing {0} damage to land units in a line.".format(
      getDamage(effectiveAbilityLevel).toString(0).colorizeTooltipForHeroAbility(effectiveAbilityLevel, learnedAbilityLevel))

// ============================================================================
public class ShockwaveComponent extends HeroAbilityComponent

  // --------------------------------------------------------------------------
  construct (IUnitMetadata owner)
    super(owner, Shockwave.ABILITY_ID, Shockwave.ABILITY_LEARN_ID)

  // --------------------------------------------------------------------------
  protected override function getTooltipNormal(int effectiveAbilityLevel, int learnedAbilityLevel) returns string
    return Shockwave.getTooltipNormal(effectiveAbilityLevel, learnedAbilityLevel)
    
  // --------------------------------------------------------------------------
  protected override function getTooltipNormalExtended(int effectiveAbilityLevel, int learnedAbilityLevel) returns string
    return Shockwave.getTooltipNormalExtended(effectiveAbilityLevel, learnedAbilityLevel)

// ============================================================================
public function IUnitMetadata.getShockwaveComponent() returns ShockwaveComponent
  return this.getComponent(ShockwaveComponent.typeId) castTo ShockwaveComponent

// ============================================================================
public function IUnitMetadata.getOrAddShockwaveComponent() returns ShockwaveComponent
  var component = this.getShockwaveComponent()
  if (component == null)
    component = this.addComponent(new ShockwaveComponent(this)) castTo ShockwaveComponent
  return component

// ============================================================================
public function unit.getShockwaveComponent() returns ShockwaveComponent
  let metadata = this.getMetadata()
  return metadata != null ? metadata.getShockwaveComponent() : null

// ============================================================================
public function unit.getOrAddShockwaveComponent() returns ShockwaveComponent
  let metadata = this.getMetadata()
  return metadata != null ? metadata.getOrAddShockwaveComponent() : null

// ============================================================================
@compiletime function createObjects()

  new AbilityDefinitionTaurenChieftainShockWave(Shockwave.ABILITY_ID)
    ..setLevels(10)
    ..setupHeroAbilityGroup(HeroAbilityGroup.R)
    ..setName("Shockwave")
    ..presetTooltipNormal(lvl -> Shockwave.getTooltipNormal(lvl, lvl))
    ..presetTooltipNormalExtended(lvl -> Shockwave.getTooltipNormalExtended(lvl, lvl))
    ..presetDamage(lvl -> Shockwave.getDamage(lvl))
    ..presetManaCost(lvl -> Shockwave.getManaCost(lvl))
    ..setIconNormal(Icons.bTNHolyBolt)

  new HeroLearnAbilityDefinition(Shockwave.ABILITY_LEARN_ID, 3)
    ..setupHeroAbilityGroup(HeroAbilityGroup.R, 0)
    ..setName("Shockwave")
    ..setTooltipLearn("Learn Shockwave - [|cFFFFCC00 Level %d|r]")
    ..setTooltipLearnExtended("A wave of force that ripples out from the Captain, causing damage to land units in a line.|n|n|cFFFFCC00Level 1|r - {0} damage.|n|cFFFFCC00Level 2|r - {1} damage.|n|cFFFFCC00Level 3|r - {2} damage.".format(
      Shockwave.getDamage(1).toString(),
      Shockwave.getDamage(2).toString(),
      Shockwave.getDamage(3).toString()))
    ..setIconResearch(Icons.bTNHolyBolt)

// ============================================================================
init
  registerHeroAbilityComponent(ShockwaveComponent.typeId)