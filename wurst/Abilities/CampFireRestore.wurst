package CampFireRestore
import AbilityObjEditing
import BuffObjEditing
import TlsAbilityIds
import ObjectIds
import ColorUtility
import TlsBuffIds

// ============================================================================
@compiletime function createAbility()

  new AbilityDefinitionAuraRegenerationHealingWard(TlsAbilityIds.campFireRestoreHealth)
    ..setName("Resoring Health")
    ..setEditorSuffix("(Camp Fire)")
    ..setTargetAttachmentPoint("origin")
    ..setAmountofHitPointsRegenerated(1, 0.01)
    ..setPercentage(1, true)
    ..setTargetsAllowed(1, "organic,player,allies")

  new BuffDefinition(TlsBuffIds.campFireRestore, 'BHab')
    ..setTooltipNormal("Camp Fire")
    ..setTooltipNormalExtended(1, "Standing near a camp fire restores health and stamina.")
    ..setIcon("ReplaceableTextures\\CommandButtons\\BTNFirePit.blp")    

  new AbilityDefinitionAuraBrilliancecreep(TlsAbilityIds.campFireRestoreStamina)
    ..setName("Resoring Stamina")
    ..setEditorSuffix("(Camp Fire)")
    ..setTargetAttachmentPoint("origin")
    ..presetManaRegenerationIncrease((int lvl) -> 0.05)
    ..presetPercentBonus((int lvl) -> true)
    ..setTargetsAllowed(1, "organic,player,allies")
    ..presetIcon("ReplaceableTextures\\CommandButtons\\BTNFirePit.blp")
    ..presetTooltipNormal((int lvl) -> "Camp Fire")
    ..presetTooltipNormalExtended((int lvl) -> "Standing near the Camp Fire restores <{0},DataA1,%>% health and <{1},DataA1,%>% stamina per second.|n|n{2}".format(
        TlsAbilityIds.campFireRestoreHealth.toRawCode(),
        TlsAbilityIds.campFireRestoreStamina.toRawCode(),
        "Does not stack!".colorize(Colors.gold)))
    ..presetBuffs((int lvl) -> commaList(TlsBuffIds.campFireRestore))