package SearchLootable
import EventUtility
import Lootables
import ColorUtility
import LootableUnit
import RegisterEvents
import LootableTypes
import Orders

constant int ABILITY_ID_SEARCH = 'A01R'
constant int ABILITY_SEARCH_ORDER = Orders.phaseshift

function onSearchChannel()
  let caster = GetSpellAbilityUnit()
  let target = GetSpellTargetUnit()

  if (not target.isLootable())
    return

  let lootable = target.getLootable()
  if (not lootable.canLoot(caster))
    caster.issueImmediateOrderById(Orders.stop)
    createTTEx(
      lootable.getUnit().getPos().withZ(30),
      "Already looted",
      10.0,
      Colors.red,
      caster.getOwner())

  // We don't do anything here except show the error message

function onSearchCast()
  let caster = GetSpellAbilityUnit()
  let target = GetSpellTargetUnit()

  if (not target.isLootable())
    return

  let lootable = target.getLootable()
  if (not lootable.canLoot(caster))
    caster.issueImmediateOrderById(Orders.stop)
    createTTEx(
      lootable.getUnit().getPos().withZ(30),
      "Already looted",
      10.0,
      Colors.red,
      caster.getOwner())
    return

  lootable.startLooting(caster)

function onRightClick()
  let orderedUnit = GetOrderedUnit()
  let targetUnit = GetOrderTargetUnit()
  if (GetIssuedOrderId() == Orders.smart and targetUnit.isLootableUnitType())
    orderedUnit.issueTargetOrderById(ABILITY_SEARCH_ORDER, targetUnit)

init
  registerSpellChannelEvent(ABILITY_ID_SEARCH, function onSearchChannel)
  registerSpellEffectEvent(ABILITY_ID_SEARCH, function onSearchCast)
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_ISSUED_UNIT_ORDER, function onRightClick)