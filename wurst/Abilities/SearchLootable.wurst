package SearchLootable
import EventUtility
import Lootables
import RegisterEvents
import LootableTypes
import Orders
import UnitMetadata
import ErrorHandling
import FX
import TlsAbilityIds

constant int ABILITY_ID_SEARCH = TlsAbilityIds.search
constant int ABILITY_SEARCH_ORDER = Orders.phaseshift

// ============================================================================
function onSearchChannel()
  let caster = GetSpellAbilityUnit()
  let target = GetSpellTargetUnit()
  let looter = caster.getMetadata()
  let looterUnit = looter.getUnit()
  let lootable = target.getLootable()

  if (lootable == null)
    return

  if (looter == null)
    error("Looter is invalid because it has no metadata")
    return

  if (not lootable.canLoot(looterUnit))
    caster.issueImmediateOrderById(Orders.stop)
    FX.createAlreadyLootedTag(lootable.getUnit().getPos(), caster.getOwner())

  // We don't do anything here except show the error message

// ============================================================================
function onSearchCast()
  let caster = GetSpellAbilityUnit()
  let target = GetSpellTargetUnit()
  let looter = caster.getMetadata()
  let looterUnit = looter.getUnit()
  let lootable = target.getLootable()

  if (lootable == null)
    error("Cannot loot target lootable")
    return

  if (looter == null)
    error("Looter is invalid because it has no metadata")
    return

  if (not lootable.canLoot(looterUnit))
    caster.issueImmediateOrderById(Orders.stop)
    FX.createAlreadyLootedTag(lootable.getUnit().getPos(), caster.getOwner())
    return

  lootable.startLooting(looterUnit)

// ============================================================================
function onRightClick()
  let orderedUnit = GetOrderedUnit()
  let targetUnit = GetOrderTargetUnit()
  if (GetIssuedOrderId() == Orders.smart and targetUnit.isLootableUnitType())
    orderedUnit.issueTargetOrderById(ABILITY_SEARCH_ORDER, targetUnit)

// ============================================================================
init
  registerSpellChannelEvent(ABILITY_ID_SEARCH, function onSearchChannel)
  registerSpellEffectEvent(ABILITY_ID_SEARCH, function onSearchCast)
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_ISSUED_UNIT_ORDER, function onRightClick)