package ReviveHero
import RegisterEvents
import TlsAbilityIds
import TlsUnitIds
import DisplayTextToPlayer
import HeroHeart
import TlsItemIds
import FX
import ColorUtility
import UnitExtensions

// ============================================================================
function reviveHeroUsingHeartItem(item heroHeart, unit sacrifice)
  let heroUnit = getHeartHero(heroHeart)
  destroyHeroHeartItem(heroHeart)
  let pos = sacrifice.getPos()
  let xp = sacrifice.getXp()
  sacrifice.remove()
  heroUnit.resetLevelAndXP()
  heroUnit.setXp(xp, false)
  heroUnit.revive(pos, true)
  FX.createSpawnEffect(pos)
  FX.createTag(pos, "Revived", Colors.gold)
  PanCameraToTimedForPlayer(heroUnit.getOwner(), pos.x, pos.y, 3.0)

// ============================================================================
function onSpellCast()
  let caster = GetSpellAbilityUnit()
  let abilId = GetSpellAbilityId()
  let target = GetSpellTargetUnit()

  if (abilId != TlsAbilityIds.altarRevive)
    return

  if (not target.isAcolyte() or not caster.getOwner().isAllyOf(target.getOwner()))
    displayMessageToPlayer(caster.getOwner(), "You must target a friendly Acolyte")
    return

  let heroHeart = caster.getItemById(TlsItemIds.heart)
  if (heroHeart == null)
    Log.debug("Could not find heart item in altar")
    return

  reviveHeroUsingHeartItem(heroHeart, target)

// ============================================================================
init
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_CAST, function onSpellCast)