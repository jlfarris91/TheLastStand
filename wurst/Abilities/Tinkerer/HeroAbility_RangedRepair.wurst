package HeroAbility_RangedRepair
import ChannelAbilityPreset
import Math
import Icons
import HeroAbilities
import TlsAbilityIds
import RepairTracking
import Ability_Repair

// ============================================================================
class RangedRepair
  static constant int ABILITY_ID = TlsAbilityIds.Hero.rangedRepair
  static constant int ABILITY_LEARN_ID = TlsAbilityIds.Hero.rangedRepair_learn

  // --------------------------------------------------------------------------
  static function getTooltipNormal(int effectiveAbilityLevel, int learnedAbilityLevel) returns string
    return "Ranged Repair - [{0}]".format("Level {0}".format(
      effectiveAbilityLevel.toString()).colorizeTooltipForHeroAbility(effectiveAbilityLevel, learnedAbilityLevel))

  // --------------------------------------------------------------------------
  static function getTooltipNormalExtended(int effectiveAbilityLevel, int learnedAbilityLevel) returns string
    return "Repair mechanical units and structures at a distance {0}x faster than a regular Survivor.".format(
      (BASIC_REPAIR_REPAIR_TIME_RATIO / RangedRepair.getRepairTimeRatio(effectiveAbilityLevel)).toString(1).colorizeTooltipForHeroAbility(effectiveAbilityLevel, learnedAbilityLevel))

  // --------------------------------------------------------------------------
  static function getRepairTimeRatio(int level) returns real
    let x = parameterize01(1, 3, level)
    // 150/200/250/300%
    if (x < 4.0)
      return 1.0 - hill01(x, 0.3325)
    // 400% by lvl 10, 450% by level 20
    return 1.298 - hill01(x, 0.083)

// ============================================================================
public class RangedRepairComponent extends HeroAbilityComponent
  private lightning m_lightning = null

  // --------------------------------------------------------------------------
  construct (IUnitMetadata owner)
    super(owner, RangedRepair.ABILITY_ID, RangedRepair.ABILITY_LEARN_ID)

  // --------------------------------------------------------------------------
  protected override function getTooltipNormal(int effectiveAbilityLevel, int learnedAbilityLevel) returns string
    return RangedRepair.getTooltipNormal(effectiveAbilityLevel, learnedAbilityLevel)
    
  // --------------------------------------------------------------------------
  protected override function getTooltipNormalExtended(int effectiveAbilityLevel, int learnedAbilityLevel) returns string
    return RangedRepair.getTooltipNormalExtended(effectiveAbilityLevel, learnedAbilityLevel)

  // ----------------------------------------------------------------------------
  protected override function onDisabled()
    super.onDisabled()
    destroyLightning()

  // ----------------------------------------------------------------------------
  protected function onStartRepair(unit targetUnit)
    destroyLightning()

    let startPos = getOwnerUnit().getPos().withTerrainZ(60.0)
    let endPos = targetUnit.getPos().withTerrainZ(60.0)

    m_lightning = addLightning(LIGHTNING_CHAIN_LIGHTNING_SEECONDARY, true, startPos, endPos)

  // ----------------------------------------------------------------------------
  protected function onStopRepair(unit _targetUnit)
    destroyLightning()

  // ----------------------------------------------------------------------------
  private function destroyLightning()
    if (m_lightning != null)
      m_lightning.destr()
      m_lightning = null

// ============================================================================
public function IUnitMetadata.getRangedRepairComponent() returns RangedRepairComponent
  return this.getComponent(RangedRepairComponent.typeId) castTo RangedRepairComponent

// ============================================================================
public function IUnitMetadata.getOrAddRangedRepairComponent() returns RangedRepairComponent
  var component = this.getRangedRepairComponent()
  if (component == null)
    component = this.addComponent(new RangedRepairComponent(this)) castTo RangedRepairComponent
  return component

// ============================================================================
public function unit.getRangedRepairComponent() returns RangedRepairComponent
  let metadata = this.getMetadata()
  return metadata != null ? metadata.getRangedRepairComponent() : null

// ============================================================================
public function unit.getOrAddRangedRepairComponent() returns RangedRepairComponent
  let metadata = this.getMetadata()
  return metadata != null ? metadata.getOrAddRangedRepairComponent() : null

// ============================================================================
function onRepairAdd()
  let repairAbilityId = getRepairAbilityId()
  if (repairAbilityId != RangedRepair.ABILITY_ID)
    return

  let repairingUnit = getRepairingUnit()

  let comp = repairingUnit.getRangedRepairComponent()
  if (comp != null and comp.getEnabled())
    comp.onStartRepair(getRepairTargetUnit())

// ============================================================================
function onRepairRemove()
  let repairAbilityId = getRepairAbilityId()
  if (repairAbilityId != RangedRepair.ABILITY_ID)
    return

  let repairingUnit = getRepairingUnit()

  let comp = repairingUnit.getRangedRepairComponent()
  if (comp != null and comp.getEnabled())
    comp.onStopRepair(getRepairTargetUnit())

// ============================================================================
@compiletime function createObjects()

  new AbilityDefinitionRepairHuman(RangedRepair.ABILITY_ID)
    ..setupHeroAbilityGroup(HeroAbilityGroup.W)
    ..setLevels(10)
    ..presetRepairTimeRatio((int lvl) -> RangedRepair.getRepairTimeRatio(lvl))
    ..presetCastRange((int lvl) -> 600.0)
    ..presetTooltipNormal((int lvl) -> RangedRepair.getTooltipNormal(lvl, lvl))
    ..presetTooltipNormalExtended((int lvl) -> RangedRepair.getTooltipNormalExtended(lvl, lvl))
    ..presetTargetsAllowed(lvl -> "mechanical,friend,nonancient,ground,air,structure,bridge,alive,dead,invu,vuln")
    ..presetTooltipTurnOff(lvl ->"|cffc3dbffRight-click to activate auto-casting.|r")
    ..presetTooltipTurnOffExtended(lvl ->"|cffc3dbffRight-click to deactivate auto-casting.|r")

  new HeroLearnAbilityDefinition(RangedRepair.ABILITY_LEARN_ID, 3)
    ..setupHeroAbilityGroup(HeroAbilityGroup.W, 0)
    ..setName("Ranged Repair")
    ..setTooltipLearn("Learn Ranged Repair - [|cFFFFCC00 Level %d|r]")
    ..setTooltipLearnExtended("Repairs mechanical units and structures from a distance.|n|n|cFFFFCC00Level 1|r - {0}x repair rate|n|cFFFFCC00Level 2|r - {1}x repair rate|n|cFFFFCC00Level 3|r - {3}x repair rate".format(
      (BASIC_REPAIR_REPAIR_TIME_RATIO / RangedRepair.getRepairTimeRatio(1)).toString(1),
      (BASIC_REPAIR_REPAIR_TIME_RATIO / RangedRepair.getRepairTimeRatio(2)).toString(1),
      (BASIC_REPAIR_REPAIR_TIME_RATIO / RangedRepair.getRepairTimeRatio(3)).toString(1)))
    ..setIconResearch(Icons.bTNRepair)
    ..presetCooldown(lvl -> 0)
    ..presetManaCost(lvl -> 0)

// ============================================================================
init
  registerHeroAbilityComponentType(RangedRepairComponent.typeId, RangedRepair.ABILITY_ID)
  registerHeroAbilityComponentType(RangedRepairComponent.typeId, RangedRepair.ABILITY_LEARN_ID)

  registerRepairAdd(function onRepairAdd)
  registerRepairRemove(function onRepairRemove)
