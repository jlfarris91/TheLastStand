package HeroAbility_StructureArmorAura
import ChannelAbilityPreset
import Math
import Icons
import HeroAbilities
import TlsAbilityIds
import RealExtensions

// ============================================================================
class StructureArmorAura
  static constant int ABILITY_ID = TlsAbilityIds.Hero.structureArmorAura
  static constant int ABILITY_LEARN_ID = TlsAbilityIds.Hero.structureArmorAura_learn

  // --------------------------------------------------------------------------
  static function getTooltipNormal(int effectiveAbilityLevel, int learnedAbilityLevel) returns string
    return "Structure Armor Aura - [{0}]".format("Level {0}".format(
      effectiveAbilityLevel.toString()).colorizeTooltipForHeroAbility(effectiveAbilityLevel, learnedAbilityLevel))

  // --------------------------------------------------------------------------
  static function getArmorBonus(int effectiveAbilityLevel) returns real
    return lerp(10.0, 30.0, parameterize(1, 3, effectiveAbilityLevel))

  // --------------------------------------------------------------------------
  static function getTooltipNormalExtended(int effectiveAbilityLevel, int learnedAbilityLevel) returns string
    return "Gives {0} additional armor to nearby friendly structures.".format(
      getArmorBonus(effectiveAbilityLevel).toPercentageString01().colorizeTooltipForHeroAbility(effectiveAbilityLevel, learnedAbilityLevel))

// ============================================================================
public class StructureArmorAuraComponent extends HeroAbilityComponent

  // --------------------------------------------------------------------------
  construct (IUnitMetadata owner)
    super(owner, StructureArmorAura.ABILITY_ID, StructureArmorAura.ABILITY_LEARN_ID)

  // --------------------------------------------------------------------------
  protected override function getTooltipNormal(int effectiveAbilityLevel, int learnedAbilityLevel) returns string
    return StructureArmorAura.getTooltipNormal(effectiveAbilityLevel, learnedAbilityLevel)
    
  // --------------------------------------------------------------------------
  protected override function getTooltipNormalExtended(int effectiveAbilityLevel, int learnedAbilityLevel) returns string
    return StructureArmorAura.getTooltipNormalExtended(effectiveAbilityLevel, learnedAbilityLevel)

// ============================================================================
public function IUnitMetadata.getStructureArmorAuraComponent() returns StructureArmorAuraComponent
  return this.getComponent(StructureArmorAuraComponent.typeId) castTo StructureArmorAuraComponent

// ============================================================================
public function IUnitMetadata.getOrAddStructureArmorAuraComponent() returns StructureArmorAuraComponent
  var component = this.getStructureArmorAuraComponent()
  if (component == null)
    component = this.addComponent(new StructureArmorAuraComponent(this)) castTo StructureArmorAuraComponent
  return component

// ============================================================================
public function unit.getStructureArmorAuraComponent() returns StructureArmorAuraComponent
  let metadata = this.getMetadata()
  return metadata != null ? metadata.getStructureArmorAuraComponent() : null

// ============================================================================
public function unit.getOrAddStructureArmorAuraComponent() returns StructureArmorAuraComponent
  let metadata = this.getMetadata()
  return metadata != null ? metadata.getOrAddStructureArmorAuraComponent() : null

// ============================================================================
@compiletime function createObjects()

  new AbilityDefinitionPaladinDevotionAura(StructureArmorAura.ABILITY_ID)
    ..setLevels(10)
    ..setupHeroAbilityGroup(HeroAbilityGroup.Q)
    ..setName("Structure Armor Aura")
    ..presetTooltipNormal(lvl -> StructureArmorAura.getTooltipNormal(lvl, lvl))
    ..presetTooltipNormalExtended(lvl -> StructureArmorAura.getTooltipNormalExtended(lvl, lvl))
    ..presetArmorBonus(lvl -> StructureArmorAura.getArmorBonus(lvl))
    ..presetTargetsAllowed(lvl -> "air,ground,friend,vuln,invu")
    ..setIconNormal(Icons.bTNDevotion)

  new HeroLearnAbilityDefinition(StructureArmorAura.ABILITY_LEARN_ID, 3)
    ..setupHeroAbilityGroup(HeroAbilityGroup.Q, 1)
    ..setName("Structure Armor Aura")
    ..setTooltipLearn("Learn Structure Armor Aura - [|cFFFFCC00 Level %d|r]")
    ..setTooltipLearnExtended("Gives additional armor to nearby friendly structures.|n|n|cFFFFCC00Level 1|r - Increases base armor by {0}.|n|cFFFFCC00Level 2|r - Increases base armor by {1}.|n|cFFFFCC00Level 3|r - Increases base armor by {2}.".format(
      StructureArmorAura.getArmorBonus(1).toString(),
      StructureArmorAura.getArmorBonus(2).toString(),
      StructureArmorAura.getArmorBonus(3).toString()))
    ..setIconResearch(Icons.bTNDevotion)

// ============================================================================
init
  registerHeroAbilityComponent(StructureArmorAuraComponent.typeId)