package UndeadUnitFactory
import UnitMetadata
import TlsUnitIds
import Abomination
import CryptFiendComponent
import UndeadTargetingComponent
import NecromancerComponent
import ArchimondeComponent
import GameConstants
import GhostComponent

// ============================================================================
public class UndeadUnitFactory implements IUnitMetadataFactory

  // --------------------------------------------------------------------------
  override function createUnit(unit u) returns IUnitMetadata
    let unitId = u.getTypeId()

    IUnitMetadata metadata = null

    if (unitId.isZombie())
      metadata = new UnitMetadata()

    switch (unitId)
      case TlsUnitIds.Undead.abomination
        metadata = new Abomination()
      case TlsUnitIds.Undead.necromancer | TlsUnitIds.Undead.greaterNecromancer
        metadata = new UnitMetadata()
        metadata.addComponent(new NecromancerComponent(metadata))
      case TlsUnitIds.Undead.cryptFiend
        metadata = new UnitMetadata()
        metadata.addComponent(new CryptFiendComponent(metadata))
      case TlsUnitIds.Undead.cryptFiendBurrowDummy
        metadata = new UnitMetadata()
        metadata.addComponent(new CryptFiendDummyComponent(metadata))
      case TlsUnitIds.Undead.archimonde
        metadata = new UnitMetadata()
        metadata.addComponent(new ArchimondeComponent(metadata))
      case TlsUnitIds.Undead.ghost | TlsUnitIds.Undead.wraith | TlsUnitIds.Undead.banshee
        metadata = new UnitMetadata()
        metadata.addComponent(new GhostComponent(metadata))
    
    if (metadata == null and u.getOwner() == PLAYER_UNDEAD)
      metadata = new UnitMetadata()

    // All undead units get an UndeadTargetingComponent
    if (metadata != null)
      metadata.addComponent(new UndeadTargetingComponent(metadata))

    return metadata