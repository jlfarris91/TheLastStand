package UndeadUnitFactory
import UnitMetadata
import TlsUnitIds
import GameConstants

import Abomination
import CryptFiendComponent
import UndeadTargetingComponent
import NecromancerComponent
import ArchimondeComponent
import GhostComponent
import TombstoneComponent

// ============================================================================
public class UndeadUnitFactory implements IUnitMetadataFactory

  // --------------------------------------------------------------------------
  override function createUnit(unit _unit) returns IUnitMetadata
    let unitId = _unit.getTypeId()

    IUnitMetadata metadata = null

    // Zombies
    if (unitId.isZombie())
      metadata = new UnitMetadata()

    // Abominations
    else if (_unit.isTypeOfAbomination())
      metadata = new Abomination()

    // Necromancers
    else if (_unit.isTypeOfNecromancer())
      metadata = new UnitMetadata()
      metadata.addComponent(new NecromancerComponent(metadata))

    // Crypy Fiends
    else if (_unit.isTypeOfFiend())
      metadata = new UnitMetadata()
      metadata.addComponent(new CryptFiendComponent(metadata))

    // Crypt Fiend burrow dummy
    else if (_unit.getTypeId() == TlsUnitIds.Undead.cryptFiendBurrowDummy)
      metadata = new UnitMetadata()
      metadata.addComponent(new CryptFiendDummyComponent(metadata))

    // Ghosts
    else if (_unit.isTypeOfGhost())
      metadata = new UnitMetadata()
      metadata.addComponent(new GhostComponent(metadata))

    // Tombstones
    else if (_unit.isTypeOfTombstone())
      metadata = new UnitMetadata()
      metadata.addComponent(new TombstoneComponent(metadata))

    // Archimonde
    else if (_unit.getTypeId() == TlsUnitIds.Undead.archimonde)
      metadata = new UnitMetadata()
      metadata.addComponent(new ArchimondeComponent(metadata))
    
    if (metadata == null and _unit.getOwner() == PLAYER_UNDEAD)
      metadata = new UnitMetadata()

    // All undead units get an UndeadTargetingComponent
    if (metadata != null)
      metadata.addComponent(new UndeadTargetingComponent(metadata))

    return metadata