package UndeadUnitFactory
import UnitMetadata
import TlsUnitIds
import Abomination
import IncreaseAcquisitionRangeWhileStillComponent
import Necromancer
import CryptFiendComponent
import UndeadTargetingComponent

// ============================================================================
public class UndeadUnitFactory implements IUnitMetadataFactory

  // --------------------------------------------------------------------------
  override function createUnit(unit u) returns IUnitMetadata
    let unitId = u.getTypeId()

    IUnitMetadata metadata = null

    if (unitId.isZombie())
      metadata = new UnitMetadata()

    switch (unitId)
      case TlsUnitIds.Undead.abomination
        metadata = new Abomination()
      case TlsUnitIds.Undead.crow
        metadata = new UnitMetadata()
        metadata.addComponent(new IncreaseAcquisitionRangeWhileStillComponent(metadata))
      case TlsUnitIds.Undead.necromancer | TlsUnitIds.Undead.greaterNecromancer
        metadata = new Necromancer()
      case TlsUnitIds.Undead.cryptFiend
        metadata = new UnitMetadata()
        metadata.addComponent(new CryptFiendComponent(metadata))
      case TlsUnitIds.Undead.cryptFiendBurrowDummy
        metadata = new UnitMetadata()
        metadata.addComponent(new CryptFiendDummyComponent(metadata))

    if (metadata != null)
      metadata.addComponent(new UndeadTargetingComponent(metadata))

    return metadata