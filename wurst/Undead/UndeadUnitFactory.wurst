package UndeadUnitFactory
import UnitMetadata
import TlsUnitIds
import CryptFiendComponent
import UndeadTargetingComponent
import NecromancerComponent
import ArchimondeComponent
import GameConstants
import GhostComponent
import AbominationComponent

// ============================================================================
public class UndeadUnitFactory implements IUnitMetadataFactory

  // --------------------------------------------------------------------------
  override function createUnit(IUnitMetadata metadata) returns bool
    let u = metadata.getUnit()
    let unitId = u.getTypeId()
    var handled = false

    // All undead units get an UndeadTargetingComponent
    if (u.getOwner() == PLAYER_UNDEAD)
      metadata.addComponent(new UndeadTargetingComponent(metadata))
      handled = true

    if (unitId.isTypeOfAbomination())
      metadata.addComponent(new AbominationComponent(metadata))
      handled = true

    if (unitId.isTypeOfNecromancer())
      metadata.addComponent(new NecromancerComponent(metadata))
      handled = true

    if (unitId.isTypeOfFiend())
      metadata.addComponent(new CryptFiendComponent(metadata))
      handled = true

    if (unitId == TlsUnitIds.Undead.cryptFiendBurrowDummy)
      metadata.addComponent(new CryptFiendDummyComponent(metadata))
      handled = true

    if (unitId == TlsUnitIds.Undead.archimonde)
      metadata.addComponent(new ArchimondeComponent(metadata))
      handled = true

    if (unitId.isTypeOfGhost())
      metadata.addComponent(new GhostComponent(metadata))
      handled = true

    return handled