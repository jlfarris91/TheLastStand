package Necromancer
import NecromancerComponent
import TlsUnitIds
import TlsAbilityIds
import UnitMetadata
import RegisterEvents
import ObjectIds
import HashMap
import Action

// ============================================================================
public class Necromancer extends UnitMetadata
  private IterableMap<int, Action2<unit, real>> m_summonedUnitModifiers

  // --------------------------------------------------------------------------
  construct()
    m_summonedUnitModifiers = new IterableMap<int, Action2<unit, real>>()

  // --------------------------------------------------------------------------
  ondestroy
    for key in m_summonedUnitModifiers
      destroy m_summonedUnitModifiers.get(key)
    destroy m_summonedUnitModifiers
    m_summonedUnitModifiers = null

  // --------------------------------------------------------------------------
  override function onUnitChanged(unit oldUnit, unit newUnit)
    super.onUnitChanged(oldUnit, newUnit)

    this.getOrAddNecromancerComponent()

    if (newUnit != null)
      switch (newUnit.getTypeId())
        case TlsUnitIds.Undead.necromancer
          newUnit.setAbilityLevel(TlsAbilityIds.necromancerRaiseDead, 1)
        case TlsUnitIds.Undead.greaterNecromancer
          newUnit.setAbilityLevel(TlsAbilityIds.necromancerRaiseDead, 2)

  // --------------------------------------------------------------------------
  function addSummonedUnitModifier(int unitTypeId, Action2<unit, real> modifier)
    m_summonedUnitModifiers.put(unitTypeId, modifier)

  // --------------------------------------------------------------------------
  function getModifierForSummonedUnit(int unitTypeId) returns Action2<unit, real>
    return m_summonedUnitModifiers.get(unitTypeId)

// ============================================================================
function onUnitSummoned()
  let summoner = GetSummoningUnit()
  let summoned = GetSummonedUnit()

  let necromancerMetadata = summoner.getMetadata() castTo Necromancer
  if (necromancerMetadata == null)
    return

  let summonedTypeId = summoned.getTypeId()

  let modifier = necromancerMetadata.getModifierForSummonedUnit(summoned.getTypeId())
  if (modifier == null)
    Log.error("No modifier for unit summoned by necromancer of type " + summonedTypeId.toRawCode())
    return

  modifier.call(summoned, 0.0)

// ============================================================================
init
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SUMMON, function onUnitSummoned)