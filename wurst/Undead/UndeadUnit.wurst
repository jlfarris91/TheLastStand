package UndeadUnit
import UnitMetadata
import UndeadUtility
import Orders
import HumanPlayerMetadata

// ============================================================================
public abstract class UndeadUnit extends UnitMetadata
  private player m_targetPlayer

  // --------------------------------------------------------------------------
  construct()
    super()
    m_targetPlayer = null

  // --------------------------------------------------------------------------
  function getTargetPlayer() returns player
    return m_targetPlayer

  // --------------------------------------------------------------------------
  function setTargetPlayer(player p) returns bool
    if (p == m_targetPlayer)
      return false
    m_targetPlayer = p
    targetClosestUnit()
    return true

  // --------------------------------------------------------------------------
  override function onUnitChanged(unit oldUnit, unit newUnit)
    super.onUnitChanged(oldUnit, newUnit)
    targetClosestUnit()

  // --------------------------------------------------------------------------
  private function targetClosestUnit()
    let u = getUnit()
    let targetPlayer = getTargetPlayer()
    if (targetPlayer != null)
      let target = getClosestUndeadTarget(targetPlayer, u.getPos())
      if (target != null)
        u.issueTargetOrderById(OrderIds.attack, target)
        Log.debug("[UndeadUnit.targetClosestUnit] Found target to attack: " + target.getName())
      else
        Log.debug("[UndeadUnit.targetClosestUnit] Could not find target unit, attack-moving to camp center")
        let campCenter = targetPlayer.getHumanMetadata().getCamp().getCenter()
        u.issuePointOrderById(OrderIds.attack, campCenter)
