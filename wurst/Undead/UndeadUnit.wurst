package UndeadUnit
import UnitMetadata
import UndeadUtility
import Orders

// ============================================================================
public abstract class UndeadUnit extends UnitMetadata
  private player m_targetPlayer

  // --------------------------------------------------------------------------
  construct()
    super()
    m_targetPlayer = null

  // --------------------------------------------------------------------------
  function getTargetPlayer() returns player
    return m_targetPlayer

  // --------------------------------------------------------------------------
  function setTargetPlayer(player p) returns bool
    if (p == m_targetPlayer)
      return false
    m_targetPlayer = p
    targetClosestUnit()
    return true

  // --------------------------------------------------------------------------
  override function onUnitChanged(unit oldUnit, unit newUnit)
    super.onUnitChanged(oldUnit, newUnit)
    targetClosestUnit()

  // --------------------------------------------------------------------------
  private function targetClosestUnit()
    let targetPlayer = getTargetPlayer()
    if (targetPlayer != null)
      let target = getClosestUndeadTarget(targetPlayer, this.getPos())
      if (target != null)
        getUnit().issuePointOrderById(OrderIds.attack, target.getPos())
    else
      BlzSetUnitRealField(getUnit(), UNIT_RF_ACQUISITION_RANGE, 99999.0)