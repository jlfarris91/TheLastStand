package UndeadTargetServiceDebugger
import Frame
import Host
import PlayerExtensions
import ProjectConstants
import DebuggerDialog
import UndeadTargetingComponent

// ============================================================================
class UndeadTargetServiceDebugger extends DebuggerRealtimeUpdateFrame

  // --------------------------------------------------------------------------
  construct()
    super(createFrame("TEXTAREA", "UTS", GAME_UI, "", 0))

  // --------------------------------------------------------------------------
  override function realtimeUpdate(real _)

    let frameHandle = getFrameHandle()

    let selectedUnit = g_HostPlayer.getFirstSelectedUnit()

    if (selectedUnit == null)
      BlzFrameSetText(frameHandle, "Select a unit")
      return

    let selectedPlayer = selectedUnit.getOwner()

    let provider = getUndeadTargetProviderForPlayer(selectedPlayer)
    if (provider == null)
      BlzFrameSetText(frameHandle, "No provider found for " + selectedPlayer.getName())
      return
      
    BlzFrameSetText(frameHandle, "===== Undead Target Service: {0} =====".format(provider.getId().toString()))

    var playersStr = ""
    for p in provider.getPlayers()
      playersStr += p.getName() + " "

    BlzFrameAddText(frameHandle, "Players: " + playersStr)

    BlzFrameAddText(frameHandle, "Prefer Organic Targets: " + provider.getPreferOrganicTargets().toString())

    let structures = provider.getStructureTargets()

    BlzFrameAddText(frameHandle, "Structures: " + structures.size().toString())
    
    for u in structures
    //{
      let attackPriStr = provider.getAttackPriority(u).toString()
      let attackerCountStr = provider.getAttackerCount(u).toString()
      BlzFrameAddText(frameHandle, "  " + u.getName() + " " + attackPriStr + " x" + attackerCountStr)
    //}

    let organic = provider.getOrganicTargets()

    BlzFrameAddText(frameHandle, "Organic: " + organic.size().toString())
    
    for u in organic
      BlzFrameAddText(frameHandle, "  " + u.getName() + (u.isAlive() ? "" : " (dead)"))

// ============================================================================
init

  if (DEV_ENVIRONMENT)
    DebuggerDialog.registerFrame("UTS", () -> new UndeadTargetServiceDebugger())