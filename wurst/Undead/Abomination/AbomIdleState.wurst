package AbomIdleState
import StateMachine
import Abomination
import Orders
import GroupUtils
import Zombie
import UndeadTargetingComponent
import GroupExtensions

public constant ABOM_IDLE_STATE_ID = "Idle"

constant real ABOM_IDLE_RADIUS = 128.0
constant real ABOM_IDLE_RADIUS_SQ = ABOM_IDLE_RADIUS*ABOM_IDLE_RADIUS
constant real ABOM_IDLE_TIME_TO_GRAB = 10.0
constant real ABOM_GRABBING_ZOMBIE_TIMEOUT = 5.0

// ==========================================================================
public class AbomIdleState extends BaseStateMachineState
  private Abomination m_abom
  private real m_idleTime
  private bool m_grabbingZombie
  private real m_grabbingZombieTimer

  // --------------------------------------------------------------------------
  construct(Abomination abom, IStateMachine machine)
    super(machine)
    m_abom = abom

  // --------------------------------------------------------------------------
  override function getName() returns string
    return ABOM_IDLE_STATE_ID

  // --------------------------------------------------------------------------
  override function enter()
    m_idleTime = 0.0
    m_grabbingZombie = false
    m_grabbingZombieTimer = ABOM_GRABBING_ZOMBIE_TIMEOUT

    attackPlayer()

  // --------------------------------------------------------------------------
  override function exit()
    m_idleTime = 0.0
    m_grabbingZombie = false
    m_grabbingZombieTimer = ABOM_GRABBING_ZOMBIE_TIMEOUT

  // --------------------------------------------------------------------------
  override function update(real dt)

    // Give up if the abom couldn't grab a zombie in the given time
    if (m_grabbingZombie)
    //{
      m_idleTime = 0.0
      m_grabbingZombieTimer -= dt
      if (m_grabbingZombieTimer <= 0)
        // Log.debug("[AbomIdleState] Gave up trying to grab zombie")
        m_grabbingZombie = false
    //}

    // Wait for the abom to be idle long enough before trying to grab another zombie
    else
    //{
      m_idleTime += dt
      if (m_idleTime > ABOM_IDLE_TIME_TO_GRAB)
      //{
        m_idleTime -= ABOM_IDLE_TIME_TO_GRAB
        m_grabbingZombie = tryGrabZombie()
        if (m_grabbingZombie)
          m_grabbingZombieTimer = ABOM_GRABBING_ZOMBIE_TIMEOUT
        else
          attackPlayer()
      //}
    //}

  // --------------------------------------------------------------------------
  private function attackPlayer()
    // Log.debug("[AbomIdleState] Attack Player")
    m_abom.getOrAddUndeadTargetingComponent()
    ..issueOrderTargetingPlayer()

  // --------------------------------------------------------------------------
  private function tryGrabZombie() returns bool
    let abomUnit = m_abom.getUnit()
    let abomPos = abomUnit.getPos()

    // === These need to be cleaned up
    let g = getGroup()
    let filter = Condition(function isFilterUnitAnAliveZombie)
    // ===

    g.enumUnitsInRange(abomUnit.getPos(), 512.0, filter)
    let target = g.getClosestUnit(abomPos)

    // === Cleanup
    DestroyCondition(filter)
    g.release()
    // ===

    if (target == null)
      // Log.debug("[AbomIdleState] Found no zombie nearby")
      return false

    // Log.debug("[AbomIdleState] Grab zombie: " + target.getName())
    if (not abomUnit.issueTargetOrderById(OrderIds.charm, target))
      Log.error("[AbomIdleState] Failed to issue grab order")
    return true

// ============================================================================
function isFilterUnitAnAliveZombie() returns bool
  let u = GetFilterUnit()
  return u.isZombie() and u.isAlive()