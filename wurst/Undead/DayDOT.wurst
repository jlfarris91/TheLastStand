package DayDOT
import Events
import GameConstants
import GroupUtils

boolexpr g_filter = Filter(function filterUnitTakesDamageDuringDay)
timer g_timer

// ============================================================================
function onDayStart()
  g_timer.startPeriodic(DAY_TIME_DOT_INTERVAL, function onPeriodicTimer)

// ============================================================================
function onDayEnd()
  g_timer.pause()

// ============================================================================
function damageAllUndead()
  let undeadUnits = getGroup()
  undeadUnits.enumUnitsOfPlayer(PLAYER_UNDEAD, g_filter)
  for u from undeadUnits
    u.subHP(u.getMaxHP() * DAY_TIME_DOT_PERCENT)
  undeadUnits.release()

// ============================================================================
function filterUnitTakesDamageDuringDay() returns bool
  let u = GetFilterUnit()
  return u.isAlive() and not u.isInvulnerable()

// ============================================================================
function onPeriodicTimer()
  damageAllUndead()

// ============================================================================
init
  g_timer = CreateTimer()
  g_timer.pause()

  GameEvents.dayStartEvent.add(() -> onDayStart())
  GameEvents.dayEndEvent.add(() -> onDayEnd())