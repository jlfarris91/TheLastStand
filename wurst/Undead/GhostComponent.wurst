package GhostComponent
import UnitComponent
import Time
import HashList
import AbilityObjEditing
import ObjectIdGenerator

constant int DOT_ABILITY_ID = compiletime(ABIL_ID_GEN.next())
HashList<unit> g_ghosts = new HashList<unit>()

// ============================================================================
public class GhostComponent extends UnitComponent

  // --------------------------------------------------------------------------
  construct (IUnitMetadata owner)
    super(owner)

  // --------------------------------------------------------------------------
  override function getTypeId() returns int
    return GhostComponent.typeId

  // --------------------------------------------------------------------------
  override function onEnabled()
    super.onEnabled()
    g_ghosts.add(getOwnerUnit())

  // --------------------------------------------------------------------------
  override function onDisabled()
    super.onDisabled()
    g_ghosts.remove(getOwnerUnit())

// ============================================================================
public function IUnitMetadata.getGhostComponent() returns GhostComponent
  return this.getComponent(typeInfo(GhostComponent.typeId)) castTo GhostComponent

// ============================================================================
public function IUnitMetadata.getOrAddGhostComponent() returns GhostComponent
  var component = this.getGhostComponent()
  if (component == null)
    component = this.addComponent(new GhostComponent(this)) castTo GhostComponent
  return component

// ============================================================================
init

  new AbilityDefinitionUnholyAuracreep(DOT_ABILITY_ID)
    ..setTargetsAllowed(1, "self")
    ..setLifeRegenerationIncrease(1, -0.1)
    ..setMovementSpeedIncrease(1, -0.6)

  registerDayEvent() () ->
    for ghost in g_ghosts
      ghost.addAbility(DOT_ABILITY_ID)