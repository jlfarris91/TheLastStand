package SummonerComponent
import UnitMetadata
import ErrorHandling
import ObjectIds
import UndeadTargetingComponent
import RegisterEvents
import Spawning

// ============================================================================
public class SummonerComponent extends UnitComponent
  private SpawnContext m_spawnContext
  private int array[3] m_summonerUnitTypes
  private int m_abilityId

  // --------------------------------------------------------------------------
  construct (IUnitMetadata owner)
    super(owner)
    m_spawnContext = null
    m_summonerUnitTypes[0] = 0
    m_summonerUnitTypes[1] = 0
    m_summonerUnitTypes[2] = 0
    m_abilityId = 0

  // --------------------------------------------------------------------------
  ondestroy

    if (m_spawnContext != null)
      destroy m_spawnContext
      m_spawnContext = null

  // --------------------------------------------------------------------------
  function getSpawnContext() returns SpawnContext
    return m_spawnContext

  // --------------------------------------------------------------------------
  function setSpawnedContext(SpawnContext contextToClone)
    if (m_spawnContext != null)
      destroy m_spawnContext
      m_spawnContext = null
    m_spawnContext = contextToClone.clone()

  // --------------------------------------------------------------------------
  function setSummonerUnitTypes(int tier1, int tier2, int tier3)
    m_summonerUnitTypes[0] = tier1
    m_summonerUnitTypes[1] = tier2
    m_summonerUnitTypes[2] = tier3

  // --------------------------------------------------------------------------
  function setAbilityId(int abilityId)
    m_abilityId = abilityId

  // --------------------------------------------------------------------------
  function modifySummonedUnit(unit summonedUnit)

    if (m_spawnContext == null)
      return
    
    let summonedMetadata = summonedUnit.getMetadata()
    if (summonedMetadata == null)
      return

    let definition = m_spawnContext.getSpawnDefinition()
    if (definition == null)
      error("No spawn definition exists for spawn context")
      return

    let summonedTypeId = summonedUnit.getTypeId()

    let modifier = definition.getUnitModifier(summonedTypeId)
    if (modifier == null)
      error("No modifier for unit summoned of type " + summonedTypeId.toRawCode())
      return

    modifier.call(summonedUnit, m_spawnContext)

    let admin = m_spawnContext.getAdmin()
    if (admin != null)
      admin.registerOwnedUnit(summonedUnit)

    let summonerUTC = getOwnerUnit().getUndeadTargetingComponent()
    if (summonerUTC == null)
      return

    let summonedUTC = summonedMetadata.getUndeadTargetingComponent()
    if (summonedUTC != null)
      summonedUTC.setTargetPlayer(summonerUTC.getTargetPlayer())

  // --------------------------------------------------------------------------
  override function onEnabled()
    super.onEnabled()

    if (m_abilityId != 0)
    //{
      let ownerUnit = getOwnerUnit()
      if (not ownerUnit.hasAbility(m_abilityId))
        ownerUnit.addAbility(m_abilityId)
      
      let unitTypeId = ownerUnit.getTypeId()
      if (unitTypeId == m_summonerUnitTypes[1])
        ownerUnit.setAbilityLevel(m_abilityId, 2)
      else if (unitTypeId == m_summonerUnitTypes[2])
        ownerUnit.setAbilityLevel(m_abilityId, 3)
      else
        ownerUnit.setAbilityLevel(m_abilityId, 1)
    //}

// ============================================================================
public function IUnitMetadata.getSummonerComponent() returns SummonerComponent
  return this.getComponent(SummonerComponent.typeId) castTo SummonerComponent

// ============================================================================
public function IUnitMetadata.getOrAddSummonerComponent() returns SummonerComponent
  var component = this.getSummonerComponent()
  if (component == null)
    component = this.addComponent(new SummonerComponent(this)) castTo SummonerComponent
  return component

// ============================================================================
public function unit.getSummonerComponent() returns SummonerComponent
  let metadata = this.getMetadata()
  return metadata != null ? metadata.getSummonerComponent() : null

// ============================================================================
public function unit.getOrAddSummonerComponent() returns SummonerComponent
  let metadata = this.getMetadata()
  return metadata != null ? metadata.getOrAddSummonerComponent() : null

// ============================================================================
function onUnitSummoned()
  let summoner = GetSummoningUnit()

  let metadata = summoner.getMetadata()
  if (metadata == null)
    return

  let comp = metadata.getSummonerComponent()
  if (comp == null)
    return

  comp.modifySummonedUnit(GetSummonedUnit())  

// ============================================================================
init
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SUMMON, function onUnitSummoned)