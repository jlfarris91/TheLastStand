package DebugCommands
import ChatCommands
import DisplayTextToPlayer
import Host
import ChatCommandHandler
import MemoryTrackingMultiboard
import ClosureTimers

constant string DEBUG_COMMAND_MEMORYTRACKER = "mem"

DebugChatCommandHandler g_debugChatCommandHandler
MemoryTrackingMultiboard g_memoryTrackingMultiboard

// ============================================================================
public class DebugChatCommandHandler extends ChatCommandHandler

  // --------------------------------------------------------------------------
  override function handleChatCommand(player p, string command) returns bool

    if (p.isHost())
      return super.handleChatCommand(p, command)

    return false

// ============================================================================
function showMemoryTrackerMultiboard()

  if (g_memoryTrackingMultiboard.isShowing())
    displayMessageToPlayer(g_HostPlayer, "Hiding memory tracking multiboard")
    g_memoryTrackingMultiboard.hide()
  else
    displayMessageToPlayer(g_HostPlayer, "Showing memory tracking multiboard")
    g_memoryTrackingMultiboard.updateMultiboardRows()
    g_memoryTrackingMultiboard.show()

// ============================================================================
init
  g_debugChatCommandHandler = new DebugChatCommandHandler()
  registerChatCommandHandler(g_debugChatCommandHandler, -1)

  g_debugChatCommandHandler.registerHandlerAction(DEBUG_COMMAND_MEMORYTRACKER, function showMemoryTrackerMultiboard)

  nullTimer() () -> 
    g_memoryTrackingMultiboard = new MemoryTrackingMultiboard()
    ..hide()