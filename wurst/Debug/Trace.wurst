package Trace
import HashMap

@configurable public constant bool g_enableTrace = false

public IterableMap<int, TraceItem> s_traceItems = new IterableMap<int, TraceItem>()

// ============================================================================
public class TraceItem
  int key
  string name
  int value
  int snapshot

// ============================================================================
public abstract class Trace
  
  // --------------------------------------------------------------------------
  static function getTraceItems() returns IterableMap<int, TraceItem>
    if (s_traceItems == null)
      s_traceItems = new IterableMap<int, TraceItem>()
    return s_traceItems

  // --------------------------------------------------------------------------
  static function snapshot()
    if (g_enableTrace == false)
      return

    for key in s_traceItems
      let traceItem = s_traceItems.get(key)
      traceItem.snapshot = traceItem.value

  // --------------------------------------------------------------------------
  static function trace(string name)
    if (g_enableTrace == false)
      return
    trace(name, 1)

  // --------------------------------------------------------------------------
  static function trace(int key, string name)
    if (g_enableTrace == false)
      return
    trace(key, name, 1)

  // --------------------------------------------------------------------------
  static function trace(string name, int value)
    if (g_enableTrace == false)
      return
    trace(name.getHash(), name, value)

  // --------------------------------------------------------------------------
  static function trace(int key, string name, int value)
    if (g_enableTrace == false)
      return
    traceSet(key, name, getValue(key) + value)
    
  // --------------------------------------------------------------------------
  static function traceSet(string name, int value)
    if (g_enableTrace == false)
      return
    traceSet(name.getHash(), name, value)

  // --------------------------------------------------------------------------
  static function traceSet(int key, string name, int value)
    if (g_enableTrace == false)
      return
    let traceItem = getOrCreateTrace(key)
    traceItem.name = name
    traceItem.value = value

  // --------------------------------------------------------------------------
  static function getValue(int key) returns int
    if (g_enableTrace == false)
      return 0
    let traceItems = getTraceItems()
    let traceItem = traceItems.get(key)
    return traceItem != null ? traceItem.value : 0
  
  // --------------------------------------------------------------------------
  private static function getOrCreateTrace(int key) returns TraceItem
    let traceItems = getTraceItems()
    var traceItem = traceItems.get(key)
    if (traceItem == null)
      traceItem = new TraceItem()
      traceItem.key = key
      traceItems.put(key, traceItem)
    return traceItem