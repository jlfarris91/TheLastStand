package WaveActivator
import Runnable
import GenericEvent

// ============================================================================
public interface IWaveActivator extends IRunnable
  function getActivatedEvent() returns GenericEvent<IWaveActivator>
  function getTimesActivated() returns int

// ============================================================================
public abstract class WaveActivatorBase extends Runnable implements IWaveActivator
  private int m_numTimesActivated
  private bool m_activateOnStart = true
  private GenericEvent<IWaveActivator> m_activated

  // --------------------------------------------------------------------------
  construct()
    m_activated = new GenericEvent<IWaveActivator>()

  // --------------------------------------------------------------------------
  ondestroy
    destroy m_activated

  // --------------------------------------------------------------------------
  override function getActivatedEvent() returns GenericEvent<IWaveActivator>
    return m_activated

  // --------------------------------------------------------------------------
  override function getTimesActivated() returns int
    return m_numTimesActivated

  // --------------------------------------------------------------------------
  override function onStarted()
    super.onStarted()
    if (m_activateOnStart)
      raiseActivatedEvent()

  // --------------------------------------------------------------------------
  override function onStopped()
    super.onStopped()
    m_numTimesActivated = 0

  // --------------------------------------------------------------------------
  function getActivateOnStart() returns bool
    return m_activateOnStart

  // --------------------------------------------------------------------------
  function setActivateOnStart(bool value)
    m_activateOnStart = value

  // --------------------------------------------------------------------------
  protected function raiseActivatedEvent()
    m_numTimesActivated++
    m_activated.call(this)