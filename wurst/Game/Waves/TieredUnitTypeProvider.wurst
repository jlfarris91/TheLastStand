package TieredUnitTypeProvider
import WaveSpawning
import Vector

constant int MAX_TIERS = 3
constant int INVALID_UNIT_TYPE = -1

// ============================================================================
public class TieredUnitTypeProvider implements ISpawnWaveUnitTypeProvider
  private int array[MAX_TIERS] m_unitTypes

  // --------------------------------------------------------------------------
  construct()
    for i = 0 to MAX_TIERS - 1
      m_unitTypes[i] = INVALID_UNIT_TYPE

  // --------------------------------------------------------------------------
  function setUnitType(int tier, int unitType)
    m_unitTypes[tier] = unitType

  // --------------------------------------------------------------------------
  override function getUnitType(SpawnWaveContext context) returns int
    let tier = getRandomTier(context)
    return m_unitTypes[tier]

  // --------------------------------------------------------------------------
  override function getUnitTypes(SpawnWaveContext context, int count, Vector<int> output) returns int
    for i = 0 to count - 1
      let tier = getRandomTier(context)
      output.add(m_unitTypes[tier])
    return count

  // --------------------------------------------------------------------------
  private function getRandomTier(SpawnWaveContext context) returns int
    var roll01 = GetRandomReal(0, 1)
    var tier = 0
    for i = 0 to MAX_TIERS - 1
      let tierChance = context.getTierChance01(i)
      if (roll01 < tierChance)
        tier = i
        break
      roll01 -= tierChance
    return tier