package RandomSpawnPointProvider
import Spawning
import ISpawnPointProvider

// ============================================================================
public class RandomSpawnPointProvider implements ISpawnPointProvider
  private ISpawnManager m_spawnPointManager
  private real m_rangeMin
  private real m_rangeMax

  // --------------------------------------------------------------------------
  construct(ISpawnManager spawnPointManager)
    m_spawnPointManager = spawnPointManager
    m_rangeMin = 0.0
    m_rangeMax = 0.0

  // --------------------------------------------------------------------------
  function setRange(real min, real max)
    setMinRange(min)
    setMaxRange(max)

  // --------------------------------------------------------------------------
  function getMinRange() returns real
    return m_rangeMin

  // --------------------------------------------------------------------------
  function setMinRange(real range)
    m_rangeMin = range

  // --------------------------------------------------------------------------
  function getMaxRange() returns real
    return m_rangeMax

  // --------------------------------------------------------------------------
  function setMaxRange(real range)
    m_rangeMax = range

  // --------------------------------------------------------------------------
  override function getSpawnPoint(vec2 center) returns vec2
    return m_spawnPointManager.getRandomSpawnPointInRange(center, m_rangeMin, m_rangeMax)

  // --------------------------------------------------------------------------
  override function getSpawnPoints(vec2 center, int count) returns SpawnPointCollection
    return m_spawnPointManager.getRandomSpawnPointsInRange(center, m_rangeMin, m_rangeMax, count)