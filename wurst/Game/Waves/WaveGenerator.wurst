package WaveGenerator
import IWaveGenerator
import WaveCollection
import Vector

// ============================================================================
public class WaveGenerator<TWave> implements IWaveGenerator<TWave>
  private Vector<IWaveGenerator<TWave>> m_waveGenerators

  // --------------------------------------------------------------------------
  construct()
    m_waveGenerators = new Vector<IWaveGenerator<TWave>>()

  // --------------------------------------------------------------------------
  ondestroy
    for waveGenerator in m_waveGenerators
      destroy waveGenerator
    destroy m_waveGenerators
    m_waveGenerators = null

  // --------------------------------------------------------------------------
  function addGenerator(IWaveGenerator<TWave> waveGenerator)
    m_waveGenerators.add(waveGenerator)

  // --------------------------------------------------------------------------
  function removeGenerator(IWaveGenerator<TWave> waveGenerator)
    m_waveGenerators.remove(waveGenerator)

  // --------------------------------------------------------------------------
  function clear()
    m_waveGenerators.clear()

  // --------------------------------------------------------------------------
  override function generateWavesForPlayer(player targetPlayer, WaveCollection<TWave> waves)
    for waveGenerator in m_waveGenerators
      waveGenerator.generateWavesForPlayer(targetPlayer, waves)