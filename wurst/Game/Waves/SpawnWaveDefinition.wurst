package SpawnWaveDefinition
import IProgress
import WaveActivator
import ISpawnPointProvider
import IUnitTypeProvider
import UnitModifier
import Functional
import Math
import HashMap
import LinkedList

// ============================================================================
public class SpawnWaveDefinition
  private string m_name
  private IProgress m_progress
  private IWaveActivator m_activator
  private ISpawnPointProvider m_spawnPointProvider
  private IUnitTypeProvider m_unitTypeProvider
  private FunctionalT<int> m_maxAliveCount
  private FunctionalT<int> m_maxSpawnCount
  private FunctionalT<int> m_spawnsPerActivation
  private FunctionalT<real> m_spawnGroupingFactor
  private IterableMap<int, AggregateUnitModifier> m_unitModifiers
  private LinkedList<string> m_tags
  private bool m_waitForFullSpawnGroup

  // --------------------------------------------------------------------------
  construct(string name)
    m_name = name
    m_unitModifiers = new IterableMap<int, AggregateUnitModifier>()
    m_tags = new LinkedList<string>()

  // --------------------------------------------------------------------------
  ondestroy
    if (m_progress != null)
      destroy m_progress
      m_progress = null

    if (m_activator != null)
      destroy m_activator
      m_activator = null

    if (m_spawnPointProvider != null)
      destroy m_spawnPointProvider
      m_spawnPointProvider = null

    if (m_unitTypeProvider != null)
      destroy m_unitTypeProvider
      m_unitTypeProvider = null

    if (m_maxAliveCount != null)
      destroy m_maxAliveCount
      m_maxAliveCount = null

    if (m_maxSpawnCount != null)
      destroy m_maxSpawnCount
      m_maxSpawnCount = null

    if (m_spawnsPerActivation != null)
      destroy m_spawnsPerActivation
      m_spawnsPerActivation = null

    if (m_spawnGroupingFactor != null)
      destroy m_spawnGroupingFactor
      m_spawnGroupingFactor = null

    for unitTypeId in m_unitModifiers
      destroy m_unitModifiers.get(unitTypeId)

    destroy m_unitModifiers
    m_unitModifiers = null

    destroy m_tags

  // --------------------------------------------------------------------------
  function getName() returns string
    return m_name

  // --------------------------------------------------------------------------
  function setProgress(IProgress progress)
    m_progress = progress

  // --------------------------------------------------------------------------
  function getProgress() returns IProgress
    return m_progress

  // --------------------------------------------------------------------------
  function setActivator(IWaveActivator activator)
    m_activator = activator

  // --------------------------------------------------------------------------
  function getActivator() returns IWaveActivator
    return m_activator

  // --------------------------------------------------------------------------
  function setSpawnPointProvider(ISpawnPointProvider spawnPointProvider)
    m_spawnPointProvider = spawnPointProvider

  // --------------------------------------------------------------------------
  function getSpawnPointProvider() returns ISpawnPointProvider
    return m_spawnPointProvider

  // --------------------------------------------------------------------------
  function setUnitTypeProvider(IUnitTypeProvider unitTypeProvider)
    m_unitTypeProvider = unitTypeProvider

  // --------------------------------------------------------------------------
  function getUnitTypeProvider() returns IUnitTypeProvider
    return m_unitTypeProvider

  // --------------------------------------------------------------------------
  function setMaxAliveCount(FunctionalT<int> value)
    m_maxAliveCount = value

  // --------------------------------------------------------------------------
  function getMaxAliveCount(real t) returns int
    if (m_maxAliveCount == null)
      return UNLIMITED
    return clamp(m_maxAliveCount.getValue(t), 0, UNLIMITED)

  // --------------------------------------------------------------------------
  function setMaxSpawnCount(FunctionalT<int> value)
    m_maxSpawnCount = value

  // --------------------------------------------------------------------------
  function getMaxSpawnCount(real t) returns int
    if (m_maxSpawnCount == null)
      return UNLIMITED
    return clamp(m_maxSpawnCount.getValue(t), 0, UNLIMITED)

  // --------------------------------------------------------------------------
  function getSpawnsPerActivation(real t) returns int
    if (m_spawnsPerActivation == null)
      return 1
    return clamp(m_spawnsPerActivation.getValue(t), 0, 1000)

  // --------------------------------------------------------------------------
  function setSpawnsPerActivation(FunctionalT<int> value)
    m_spawnsPerActivation = value

  // --------------------------------------------------------------------------
  function getSpawnGroupingFactor(real t) returns real
    if (m_spawnGroupingFactor == null)
      return 0.0
    return clamp01(m_spawnGroupingFactor.getValue(t))

  // --------------------------------------------------------------------------
  function setSpawnGroupingFactor(FunctionalT<real> value)
    m_spawnGroupingFactor = value

  // --------------------------------------------------------------------------
  function getCommonUnitModifier() returns AggregateUnitModifier
    return getUnitModifier(-999)

  // --------------------------------------------------------------------------
  function getUnitModifier(int unitTypeId) returns AggregateUnitModifier
    var unitModifier = m_unitModifiers.get(unitTypeId)
    if (unitModifier == null)
      unitModifier = new AggregateUnitModifier()
      m_unitModifiers.put(unitTypeId, unitModifier)
    return unitModifier

  // --------------------------------------------------------------------------
  function setTags(vararg string tags)
    m_tags.clear()
    for tag in tags
      m_tags.add(tag)

  // --------------------------------------------------------------------------
  function getTags() returns LinkedList<string>
    return m_tags

  // --------------------------------------------------------------------------
  function getWaitForFullSpawnGroup() returns bool
    return m_waitForFullSpawnGroup

  // --------------------------------------------------------------------------
  function setWaitForFullSpawnGroup(bool value)
    m_waitForFullSpawnGroup = value