package SpawnWaveDefinition
import IProgress
import WaveActivator
import IUnitTypeProvider
import Math
import HashMap
import SpawnManager
import Vector
import Func
import Events

// ============================================================================
public class SpawnWaveDefinition
  private string m_name
  private IProgress m_progress
  private WaveActivator m_activator
  private SpawnRange m_spawnRange
  private IUnitTypeProvider m_unitTypeProvider
  private Func1<real, int> m_maxSpawnCount
  private Func1<real, int> m_maxAliveCount
  private Func1<real, int> m_spawnsPerActivation
  private Func1<real, real> m_spawnGroupingFactor
  private Action2<unit, real> m_commonUnitModifier
  private IterableMap<int, Action2<unit, real>> m_unitModifiers
  private Vector<string> m_tags
  private bool m_waitForFullSpawnGroup = false
  private bool m_useUnitRecycler = false
  private int m_goldReward

  // --------------------------------------------------------------------------
  construct(string name)
    m_name = name
    m_tags = new Vector<string>()

  // --------------------------------------------------------------------------
  ondestroy
    if (m_progress != null)
      destroy m_progress
      m_progress = null

    if (m_activator != null)
      destroy m_activator
      m_activator = null

    if (m_unitTypeProvider != null)
      destroy m_unitTypeProvider
      m_unitTypeProvider = null

    if (m_maxAliveCount != null)
      destroy m_maxAliveCount
      m_maxAliveCount = null

    if (m_maxSpawnCount != null)
      destroy m_maxSpawnCount
      m_maxSpawnCount = null

    if (m_spawnsPerActivation != null)
      destroy m_spawnsPerActivation
      m_spawnsPerActivation = null

    if (m_spawnGroupingFactor != null)
      destroy m_spawnGroupingFactor
      m_spawnGroupingFactor = null

    if (m_commonUnitModifier != null)
      destroy m_commonUnitModifier
      m_commonUnitModifier = null

    if (m_unitModifiers != null)
      for unitTypeId in m_unitModifiers
        destroy m_unitModifiers.get(unitTypeId)
      destroy m_unitModifiers
      m_unitModifiers = null

    destroy m_tags

  // --------------------------------------------------------------------------
  function getName() returns string
    return m_name

  // --------------------------------------------------------------------------
  function setProgress(IProgress progress)
    m_progress = progress

  // --------------------------------------------------------------------------
  function getProgress() returns IProgress
    return m_progress

  // --------------------------------------------------------------------------
  function setActivator(WaveActivator activator)
    m_activator = activator

  // --------------------------------------------------------------------------
  function getActivator() returns WaveActivator
    return m_activator

  // --------------------------------------------------------------------------
  function setSpawnRange(SpawnRange spawnRange)
    m_spawnRange = spawnRange

  // --------------------------------------------------------------------------
  function getSpawnRange() returns SpawnRange
    return m_spawnRange

  // --------------------------------------------------------------------------
  function setUnitTypeProvider(IUnitTypeProvider unitTypeProvider)
    m_unitTypeProvider = unitTypeProvider

  // --------------------------------------------------------------------------
  function getUnitTypeProvider() returns IUnitTypeProvider
    return m_unitTypeProvider

  // --------------------------------------------------------------------------
  function setMaxAliveCount(Func1<real, int> value)
    m_maxAliveCount = value

  // --------------------------------------------------------------------------
  function getMaxAliveCount(real t) returns int
    if (m_maxAliveCount == null)
      return UNLIMITED
    return clamp(m_maxAliveCount.call(t), 0, UNLIMITED)

  // --------------------------------------------------------------------------
  function setMaxSpawnCount(Func1<real, int> value)
    m_maxSpawnCount = value

  // --------------------------------------------------------------------------
  function getMaxSpawnCount(real t) returns int
    if (m_maxSpawnCount == null)
      return UNLIMITED
    return clamp(m_maxSpawnCount.call(t), 0, UNLIMITED)

  // --------------------------------------------------------------------------
  function getSpawnsPerActivation(real t) returns int
    if (m_spawnsPerActivation == null)
      return 1
    return clamp(m_spawnsPerActivation.call(t), 0, 1000)

  // --------------------------------------------------------------------------
  function setSpawnsPerActivation(Func1<real, int> value)
    m_spawnsPerActivation = value

  // --------------------------------------------------------------------------
  function getSpawnGroupingFactor(real t) returns real
    if (m_spawnGroupingFactor == null)
      return 0.0
    return clamp01(m_spawnGroupingFactor.call(t))

  // --------------------------------------------------------------------------
  function setSpawnGroupingFactor(Func1<real, real> value)
    m_spawnGroupingFactor = value

  // --------------------------------------------------------------------------
  function setCommonUnitModifier(Action2<unit, real> action)
    m_commonUnitModifier = action

  // --------------------------------------------------------------------------
  function getCommonUnitModifier() returns Action2<unit, real>
    return m_commonUnitModifier

  // --------------------------------------------------------------------------
  function setUnitModifier(int unitTypeId, Action2<unit, real> action)
    if (m_unitModifiers == null)
      m_unitModifiers = new IterableMap<int, Action2<unit, real>>()
    m_unitModifiers.put(unitTypeId, action)

  // --------------------------------------------------------------------------
  function getUnitModifier(int unitTypeId) returns Action2<unit, real>
    if (m_unitModifiers == null)
      return null
    return m_unitModifiers.get(unitTypeId)

  // --------------------------------------------------------------------------
  function setTags(vararg string tags)
    m_tags.clear()
    for tag in tags
      m_tags.add(tag)

  // --------------------------------------------------------------------------
  function getTags() returns Vector<string>
    return m_tags

  // --------------------------------------------------------------------------
  function getWaitForFullSpawnGroup() returns bool
    return m_waitForFullSpawnGroup

  // --------------------------------------------------------------------------
  function setWaitForFullSpawnGroup(bool value)
    m_waitForFullSpawnGroup = value

  // --------------------------------------------------------------------------
  function getUseUnitRecycler() returns bool
    return m_useUnitRecycler

  // --------------------------------------------------------------------------
  function setUseUnitRecycler(bool value)
    m_useUnitRecycler = value

  // --------------------------------------------------------------------------
  function getGoldReward() returns int
    return m_goldReward

  // --------------------------------------------------------------------------
  function setGoldReward(int value)
    m_goldReward = value