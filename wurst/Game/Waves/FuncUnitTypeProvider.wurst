package FuncUnitTypeProvider
import ISpawnWave
import Vector
import Action

// ============================================================================
public class FuncUnitTypeProvider implements ISpawnWaveUnitTypeProvider
  private Action2<ISpawnWaveContext, Vector<int>> m_func

  // --------------------------------------------------------------------------
  construct(Action2<ISpawnWaveContext, Vector<int>> func)
    m_func = func.acquire()

  // --------------------------------------------------------------------------
  ondestroy
    m_func.release()
    m_func = null

  // --------------------------------------------------------------------------
  override function getUnitTypes(ISpawnWaveContext context, int count) returns Vector<int>
    let funcResult = new Vector<int>()
    m_func.call(context, funcResult)
    let result = funcResult.take(count)
    destroy funcResult
    return result