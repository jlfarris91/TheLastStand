package MovementSpeedModifier
import UnitModifier
import Functional

// ============================================================================
public class MovementSpeedModifier implements IFunctionalUnitModifier
  private FunctionalT<real> m_speed

  // --------------------------------------------------------------------------
  construct()
    skip

  // --------------------------------------------------------------------------
  construct(real speed)
    m_speed = FunctionalT.fromValue(speed)

  // --------------------------------------------------------------------------
  construct(FunctionalT<real> speed)
    m_speed = speed

  // --------------------------------------------------------------------------
  ondestroy
    if (m_speed != null)
      destroy m_speed
      m_speed = null

  // --------------------------------------------------------------------------
  function getMovementSpeed() returns FunctionalT<real>
    return m_speed

  // --------------------------------------------------------------------------
  function setMovementSpeed(FunctionalT<real> func)
    m_speed = func

  // --------------------------------------------------------------------------
  override function apply(unit u, real t)
    u.setMoveSpeed(m_speed.getValue(t))