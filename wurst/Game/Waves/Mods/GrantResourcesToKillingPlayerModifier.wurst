package GrantResourcesToKillingPlayerModifier
import UnitModifier
import UnitMetadata
import GrantResourceToKillingPlayerComponent
import Range
import Functional

// ============================================================================
public class GrantGoldToKillingPlayerModifier implements IFunctionalUnitModifier 
  private FunctionalT<real> m_chance
  private FunctionalRangeIntT m_amountRange

  // --------------------------------------------------------------------------
  construct()
    skip

  // --------------------------------------------------------------------------
  construct(FunctionalT<real> chance, FunctionalRangeIntT amountRange)
    m_chance = chance
    m_amountRange = amountRange

  // --------------------------------------------------------------------------
  ondestroy
    if (m_chance != null)
      destroy m_chance
      m_chance = null

    if (m_amountRange != null)
      destroy m_amountRange
      m_amountRange = null

  // --------------------------------------------------------------------------
  function getChance() returns FunctionalT<real>
    return m_chance

  // --------------------------------------------------------------------------
  function setChance(FunctionalT<real> func)
    m_chance = func

  // --------------------------------------------------------------------------
  function getAmountRange() returns FunctionalRangeIntT
    return m_amountRange

  // --------------------------------------------------------------------------
  function setAmountRange(FunctionalRangeIntT func)
    m_amountRange = func

  // --------------------------------------------------------------------------
  override function apply(unit u, real t)
    let unitMetadata = u.getMetadata()
    if (unitMetadata == null)
      return

    let comp = unitMetadata.getOrAddGrantResourceToKillingPlayerComponent()
    
    if (m_amountRange != null and m_chance != null)
      comp.setGoldChance(m_chance.getValue(t))
      comp.setGoldAmountRange(m_amountRange.getValue(t))

// ============================================================================
public class GrantMatsToKillingPlayerModifier implements IFunctionalUnitModifier 
  private FunctionalT<real> m_chance
  private FunctionalRangeIntT m_amountRange

  // --------------------------------------------------------------------------
  construct()
    skip

  // --------------------------------------------------------------------------
  construct(real chance, rangeInt amountRange)
    m_chance = FunctionalT.fromValue(chance)
    m_amountRange = FunctionalRangeIntT.fromValue(amountRange)

  // --------------------------------------------------------------------------
  construct(FunctionalT<real> chance, FunctionalRangeIntT amountRange)
    m_chance = chance
    m_amountRange = amountRange

  // --------------------------------------------------------------------------
  ondestroy
    if (m_chance != null)
      destroy m_chance
      m_chance = null

    if (m_amountRange != null)
      destroy m_amountRange
      m_amountRange = null

  // --------------------------------------------------------------------------
  function getChance() returns FunctionalT<real>
    return m_chance

  // --------------------------------------------------------------------------
  function setChance(FunctionalT<real> func)
    m_chance = func

  // --------------------------------------------------------------------------
  function getAmountRange() returns FunctionalRangeIntT
    return m_amountRange

  // --------------------------------------------------------------------------
  function setAmountRange(FunctionalRangeIntT func)
    m_amountRange = func

  // --------------------------------------------------------------------------
  override function apply(unit u, real t)
    let unitMetadata = u.getMetadata()
    if (unitMetadata == null)
      return

    let comp = unitMetadata.getOrAddGrantResourceToKillingPlayerComponent()
    
    if (m_amountRange != null and m_chance != null)
      comp.setMaterialsChance(m_chance.getValue(t))
      comp.setMaterialsAmountRange(m_amountRange.getValue(t))