package SingleUnitTypeProvider
import IUnitTypeProvider
import Vector

// ============================================================================
public class SingleUnitTypeProvider implements IUnitTypeProvider
  private constant int INVALID_UNIT_TYPE = -1
  private int _unitType
  
  // --------------------------------------------------------------------------
  construct(int unitTypeId)
    _unitType = unitTypeId

  // --------------------------------------------------------------------------
  ondestroy
    _unitType = INVALID_UNIT_TYPE

  // --------------------------------------------------------------------------
  function setUnitType(int unitType)
    _unitType = unitType

  // --------------------------------------------------------------------------
  function getUnitType() returns int
    return _unitType

  // --------------------------------------------------------------------------
  override function getUnitTypes(int count) returns Vector<int>
    let output = new Vector<int>()
    for i = 0 to count - 1
      output.add(_unitType)
    return output