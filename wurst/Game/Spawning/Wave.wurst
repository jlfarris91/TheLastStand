// package Wave
// import LinkedList
// import ClosureTimers
// import WeightedSet
// import ErrorHandling
// import SpawnPoint
// import SpawnPointList
// import GameConstants

// // ============================================================================
// public interface IWaveSpawnerDefinition

// // ============================================================================
// public interface IWaveSpawner
//   function getTargetPlayer() returns player
//   function getDefinition() returns IWaveSpawnerDefinition
//   function start()
//   function stop()
//   function pause()
//   function resume()

// // ============================================================================
// public interface IWaveDefinition
//   function getSpawnDefinitions() returns LinkedList<IWaveSpawnerDefinition>
//   function getSpeed() returns real
//   function setSpeed(real speed)
  
// // ============================================================================
// public interface IWave
//   function getDefinition() returns IWaveDefinition
//   function start()
//   function stop()
//   function pause()
//   function resume()
//   function cleanup()

// // ============================================================================
// public class WaveDefinition implements IWaveDefinition
//   private LinkedList<IWaveSpawnerDefinition> _spawns
//   private real _speed
  
//   // --------------------------------------------------------------------------
//   construct()
//     _spawns = new LinkedList<IWaveSpawnerDefinition>()
//     _speed = GAME_SPEED_NIGHT

//   // --------------------------------------------------------------------------
//   ondestroy
//     for spawnDef in _spawns
//       destroy spawnDef
//     destroy _spawns

//   // --------------------------------------------------------------------------
//   override function getSpawnDefinitions() returns LinkedList<IWaveSpawnerDefinition>
//     return _spawns

//   // --------------------------------------------------------------------------
//   override function getSpeed() returns real
//     return _speed

//   // --------------------------------------------------------------------------
//   override function setSpeed(real speed)
//     _speed = speed

// // ============================================================================
// public abstract class WaveBase implements IWave
//   private IWaveDefinition _definition

//   // --------------------------------------------------------------------------
//   construct(IWaveDefinition definition)
//     _definition = definition

//   // --------------------------------------------------------------------------
//   override function getDefinition() returns IWaveDefinition
//     return _definition
  
//   // --------------------------------------------------------------------------
//   abstract override function start()
//   abstract override function stop()
//   abstract override function pause()
//   abstract override function resume()
//   abstract override function cleanup()

// // ============================================================================
// public abstract class WaveSpawnerDefinition implements IWaveSpawnerDefinition

// // ============================================================================
// public abstract class WaveSpawner implements IWaveSpawner
//   private IWaveSpawnerDefinition _definition
//   private player _targetPlayer

//   // --------------------------------------------------------------------------
//   construct(IWaveSpawnerDefinition definition, player spawnFor)
//     _definition = definition
//     _targetPlayer = spawnFor

//   // --------------------------------------------------------------------------
//   override function getTargetPlayer() returns player
//     return _targetPlayer  
  
//   // --------------------------------------------------------------------------
//   override function getDefinition() returns IWaveSpawnerDefinition
//     return _definition

//   // --------------------------------------------------------------------------
//   override function start()

//   // --------------------------------------------------------------------------
//   override function stop()

//   // --------------------------------------------------------------------------
//   override function pause()

//   // --------------------------------------------------------------------------
//   override function resume()

// // ============================================================================
// public interface IUnitTypeProvider
//   function getUnitType() returns int
//   function getUnitTypes(int count) returns LinkedList<int>

// // ============================================================================
// public class RandomUnitTypeProvider implements IUnitTypeProvider
//   private WeightedSet<int> _unitTypeIds

//   // --------------------------------------------------------------------------
//   construct()
//     _unitTypeIds = new WeightedSet<int>()

//   // --------------------------------------------------------------------------
//   ondestroy
//     destroy _unitTypeIds
//     _unitTypeIds = null

//   // --------------------------------------------------------------------------
//   override function getUnitType() returns int
//     return _unitTypeIds.getRandom()

//   // --------------------------------------------------------------------------
//   override function getUnitTypes(int count) returns LinkedList<int>
//     return _unitTypeIds.getRandom(count)

// // ============================================================================
// public class SingleUnitTypeProvider implements IUnitTypeProvider
//   private constant int INVALID_UNIT_TYPE = -1
//   private int _unitType
  
//   // --------------------------------------------------------------------------
//   construct()
//     _unitType = INVALID_UNIT_TYPE

//   // --------------------------------------------------------------------------
//   ondestroy
//     _unitType = INVALID_UNIT_TYPE

//   // --------------------------------------------------------------------------
//   function setUnitType(int unitType)
//     _unitType = unitType

//   // --------------------------------------------------------------------------
//   override function getUnitType() returns int
//     if (_unitType == -1)
//       error("[SingleUnitTypeProvider] Unit type was never set!")
//     return _unitType

//   // --------------------------------------------------------------------------
//   override function getUnitTypes(int count) returns LinkedList<int>
//     let output = new LinkedList<int>()
//     for i = 0 to count - 1
//       output.add(_unitType)
//     return output

// // ============================================================================
// public interface ISpawnPointProvider
//   function getSpawnPoint(vec2 center) returns ISpawnPoint
//   function getSpawnPoints(vec2 center, int count) returns SpawnPointList

// // ============================================================================
// public class PeriodicUnitSpawnerDefinition extends WaveSpawnerDefinition
//   private real _interval
//   private IUnitTypeProvider _unitTypeProvider
//   private ISpawnPointProvider _spawnPointProvider
//   private int _maxSpawnCount

//   // --------------------------------------------------------------------------
//   construct(IUnitTypeProvider unitTypeProvider, ISpawnPointProvider spawnPointProvider)
//     _unitTypeProvider = unitTypeProvider
//     _spawnPointProvider = spawnPointProvider

//   // --------------------------------------------------------------------------
//   function getInterval() returns real
//     return _interval

//   // --------------------------------------------------------------------------
//   function setInterval(real interval)
//     _interval = interval

//   // --------------------------------------------------------------------------
//   function getUnitTypeProvider() returns IUnitTypeProvider
//     return _unitTypeProvider

//   // --------------------------------------------------------------------------
//   function setUnitTypeProvider(IUnitTypeProvider unitTypeProvider)
//     _unitTypeProvider = unitTypeProvider

//   // --------------------------------------------------------------------------
//   function getSpawnPointProvider() returns ISpawnPointProvider
//     return _spawnPointProvider

//   // --------------------------------------------------------------------------
//   function setSpawnLocationProvider(ISpawnPointProvider spawnLocationProvider)
//     _spawnPointProvider = spawnLocationProvider

//   // --------------------------------------------------------------------------
//   function getMaxSpawnCount() returns int
//     return _maxSpawnCount

//   // --------------------------------------------------------------------------
//   function setMaxSpawnCount(int count)
//     _maxSpawnCount = count

// // ============================================================================
// public class PeriodicUnitSpawner extends WaveSpawner
//   private PeriodicUnitSpawnerDefinition _definition
//   private CallbackPeriodic _timerCallback

//   // --------------------------------------------------------------------------
//   construct(PeriodicUnitSpawnerDefinition definition, player target)
//     super(definition, target)

//   // --------------------------------------------------------------------------
//   override function start()
    
//     if (_timerCallback != null)
//       error("Cannot call start() on a WaveSpawner that is already spawning.")

//     startSpawning()    

//   // --------------------------------------------------------------------------
//   override function stop()

//     if (_timerCallback == null)
//       error("Cannot call stop() on a WaveSpawner that is not currently spawning. Call start() first.")

//     stopSpawning()

//   // --------------------------------------------------------------------------
//   protected function spawn()
//     let unitTypeProvider = _definition.getUnitTypeProvider()
//     let spawnPointProvider = _definition.getSpawnPointProvider()

//     let unitType = unitTypeProvider.getUnitType()
//     let spawnPoint = spawnPointProvider.getSpawnPoint()
//     let spawnPos = spawnPoint.getPos()

//     let spawnedUnit = CreateUnit(PLAYER_UNDEAD, unitType, spawnPos.x, spawnPos.y, GetRandomDirectionDeg())



//   // --------------------------------------------------------------------------
//   private function startSpawning()
//     _timerCallback = doPeriodically(_definition.getInterval()) (CallbackPeriodic cb) ->
//       spawn()

//   // --------------------------------------------------------------------------
//   private function stopSpawning()
//     if (_timerCallback != null)
//       destroy _timerCallback
      
//   // private function getTargetCenter() returns vec2
//   //   let playerMetadata = getTargetPlayer().getHumanMetadataRequired()
//   //   var center = playerMetadata.getCamp().getCenter()
//   //   return clampToWorldBounds(center, _definition)

// public 