// package Wave
// import LinkedList
// import ClosureTimers
// import WeightedSet
// import ErrorHandling

// // ============================================================================
// public interface IWaveSpawnerDefinition
//   function createWaveSpawner(player spawnForPlayer) returns IWaveSpawner

// // ============================================================================
// public interface IWaveSpawner
//   function getTargetPlayer() returns player
//   function getDefinition() returns IWaveSpawnerDefinition
//   function start()
//   function stop()
//   function pause()
//   function resume()

// // ============================================================================
// public interface IWaveDefinition
//   function getSpawnDefinitions() returns LinkedList<IWaveSpawnerDefinition>
//   function createWave() returns IWave
  
// // ============================================================================
// public interface IWave
//   function getDefinition() returns IWaveDefinition
//   function start()
//   function stop()
//   function pause()
//   function resume()
//   function cleanup()

// // ============================================================================
// public abstract class WaveDefinition implements IWaveDefinition
//   private LinkedList<IWaveSpawnerDefinition> _spawns
  
//   // --------------------------------------------------------------------------
//   construct()
//     _spawns = new LinkedList<IWaveSpawnerDefinition>()

//   // --------------------------------------------------------------------------
//   ondestroy
//     for spawnDef in _spawns
//       destroy spawnDef
//     destroy _spawns

//   // --------------------------------------------------------------------------
//   override function getSpawnDefinitions() returns LinkedList<IWaveSpawnerDefinition>
//     return _spawns

//   // --------------------------------------------------------------------------
//   override abstract function createWave() returns IWave

// // ============================================================================
// public abstract class WaveBase implements IWave
//   private IWaveDefinition _definition

//   // --------------------------------------------------------------------------
//   construct(IWaveDefinition definition)
//     _definition = definition

//   // --------------------------------------------------------------------------
//   override function getDefinition() returns IWaveDefinition
//     return _definition  
  
//   // --------------------------------------------------------------------------
//   abstract override function start()
//   abstract override function stop()
//   abstract override function pause()
//   abstract override function resume()
//   abstract override function cleanup()

// // ============================================================================
// public abstract class WaveSpawnerDefinition implements IWaveSpawnerDefinition

//   // --------------------------------------------------------------------------
//   override abstract function createWaveSpawner(player p) returns IWaveSpawner

// // ============================================================================
// public abstract class WaveSpawner implements IWaveSpawner
//   private IWaveSpawnerDefinition _definition
//   private player _targetPlayer

//   // --------------------------------------------------------------------------
//   construct(IWaveSpawnerDefinition definition, player spawnFor)
//     _definition = definition
//     _targetPlayer = spawnFor

//   // --------------------------------------------------------------------------
//   override function getTargetPlayer() returns player
//     return _targetPlayer  
  
//   // --------------------------------------------------------------------------
//   override function getDefinition() returns IWaveSpawnerDefinition
//     return _definition

//   // --------------------------------------------------------------------------
//   override function start()

//   // --------------------------------------------------------------------------
//   override function stop()

//   // --------------------------------------------------------------------------
//   override function pause()

//   // --------------------------------------------------------------------------
//   override function resume()

// // ============================================================================
// public interface IUnitTypeProvider
//   function getUnitType() returns int

// // ============================================================================
// public class RandomUnitTypeProvider implements IUnitTypeProvider
//   private WeightedSet<int> _unitTypeIds

//   // --------------------------------------------------------------------------
//   construct()
//     _unitTypeIds = new WeightedSet<int>()

//   // --------------------------------------------------------------------------
//   ondestroy
//     destroy _unitTypeIds
//     _unitTypeIds = null

//   // --------------------------------------------------------------------------
//   override function getUnitType() returns int
//     return _unitTypeIds.getRandom()

// // ============================================================================
// public class SingleUnitTypeProvider implements IUnitTypeProvider
//   private constant int INVALID_UNIT_TYPE = -1
//   private int _unitType
  
//   // --------------------------------------------------------------------------
//   construct()
//     _unitType = INVALID_UNIT_TYPE

//   // --------------------------------------------------------------------------
//   ondestroy
//     _unitType = INVALID_UNIT_TYPE

//   // --------------------------------------------------------------------------
//   function setUnitType(int unitType)
//     _unitType = unitType

//   // --------------------------------------------------------------------------
//   override function getUnitType() returns int
//     if (_unitType == -1)
//       error("[SingleUnitTypeProvider] Unit type was never set!")
//     return _unitType

// // ============================================================================
// public interface ISpawnLocationProvider
//   function getSpawnPoint() returns vec2

// // ============================================================================
// public class PeriodicUnitSpawnerDefinition extends WaveSpawnerDefinition
//   private real _interval
//   private IUnitTypeProvider _unitTypeProvider
//   private ISpawnLocationProvider _spawnLocationProvider

//   // --------------------------------------------------------------------------
//   construct()
//     skip

//   // --------------------------------------------------------------------------
//   function getInterval() returns real
//     return _interval

//   // --------------------------------------------------------------------------
//   function setInterval(real interval)
//     _interval = interval

//   // --------------------------------------------------------------------------
//   function getUnitTypeProvider() returns IUnitTypeProvider
//     return _unitTypeProvider

//   // --------------------------------------------------------------------------
//   function setUnitTypeProvider(IUnitTypeProvider unitTypeProvider)
//     _unitTypeProvider = unitTypeProvider

//   // --------------------------------------------------------------------------
//   function getSpawnPointProvider() returns ISpawnLocationProvider
//     return _spawnLocationProvider

//   // --------------------------------------------------------------------------
//   function setSpawnLocationProvider(ISpawnLocationProvider spawnLocationProvider)
//     _spawnLocationProvider = spawnLocationProvider

//   // --------------------------------------------------------------------------
//   override function createWaveSpawner(player spawnForPlayer) returns IWaveSpawner
//     return new PeriodicUnitSpawner(this, spawnForPlayer)

// // ============================================================================
// public class PeriodicUnitSpawner extends WaveSpawner
//   private PeriodicUnitSpawnerDefinition _definition
//   private CallbackPeriodic _timerCallback

//   // --------------------------------------------------------------------------
//   construct(PeriodicUnitSpawnerDefinition definition, player p)
//     super(definition, p)

//   // --------------------------------------------------------------------------
//   override function start()
//     stopSpawning()
//     startSpawning()    

//   // --------------------------------------------------------------------------
//   override function stop()
//     stopSpawning()

//   // --------------------------------------------------------------------------
//   protected function spawn() returns unit
//     let unitTypeProvider = _definition.getUnitTypeProvider()
//     let spawnPointProvider = _definition.getSpawnPointProvider()

//     let unitType = unitTypeProvider.getUnitType()
//     let spawnPos = spawnPointProvider.getSpawnPoint()

//     createUnitTLS()

//   // --------------------------------------------------------------------------
//   private function startSpawning()
//     _timerCallback = doPeriodically(_definition.getInterval()) (CallbackPeriodic cb) ->
//       spawn()

//   // --------------------------------------------------------------------------
//   private function stopSpawning()
//     if (_timerCallback != null)
//       destroy _timerCallback

// // ============================================================================
// public class AttackCampWave extends WaveBase
//   private player _player

//   // --------------------------------------------------------------------------
//   construct(IWaveDefinition definition, player targetPlayer)
//     super(definition)


