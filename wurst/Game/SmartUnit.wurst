package SmartUnit
import initlater LinkedList
import initlater IUnit
import Composition

// ============================================================================
public class SmartUnit implements IUnit

  protected LinkedList<IComponent> _components
  protected unit _unit

  // --------------------------------------------------------------------------
  construct(unit u)
    this._unit = u

  // --------------------------------------------------------------------------
  ondestroy
    RemoveUnit(this._unit)
    this._unit = null

    for component in _components
      destroy component
    destroy _components
    _components = null

  // --------------------------------------------------------------------------
  @inline
  override function getUnit() returns unit
    return this._unit

  // --------------------------------------------------------------------------
  @inline
  override function addComponent(IComponent component)
    if (_components == null)
      _components = new LinkedList<IComponent>()
    _components.add(component)

  // --------------------------------------------------------------------------
  @inline
  override function getComponent(int componentTypeId) returns IComponent
    if (_components != null)
      for component in _components
        if (component.typeId == componentTypeId)
          return component
    return null