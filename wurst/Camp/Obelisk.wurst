package Obelisk
import TlsBuildingDefinition
import BuildingUndeadTarget
import TlsUpgradeIds
import StringBuilder
import ColorUtility
import BuildItems
import TlsItemDefinition
import ItemBuildUnitDefinition
import Icons
import RegisterEvents
import Preload
import UnitIndexer
import GroupUtils
import DisplayTextToPlayer
import ItemType
import ChannelAbilityPreset

public TlsBuildingAndHeroDefinition g_obelisk1Definition
public TlsBuildingAndHeroDefinition g_obelisk2Definition
public TlsBuildingAndHeroDefinition g_obelisk3Definition
public TlsBuildingAndHeroDefinition g_obelisk4Definition
public TlsItemDefinition g_obeliskItemDefinition

// ============================================================================
function createBaseObeliskDefinition(int newId) returns TlsBuildingAndHeroDefinition
  return new TlsBuildingAndHeroDefinition(newId, UnitIds.townhall)
    ..makeBuildingUndeadTarget()
    ..setSelectionScale(5.0)
    ..setGroundTexture("HMED")
    ..setArmorType(ArmorType.Fortified)
    ..setCollisionSize(128.0)
    ..setShadowTextureBuilding("")
    ..setPathingMap("PathTextures\\4x4Default.tga")
    ..setPlacementRequires("unbuildable,unwalkable")
    ..setUnitSoundSet("ArcaneTower")
    ..setFoodProduced(0)
    ..setFoodCost(1)
    ..setRepairTime(10)
    ..setRepairGoldCost(0)
    ..setRepairLumberCost(0)
    ..setSightRadiusDay(1024)
    ..setSightRadiusNight(1024)
    ..setButtonPositionX(0)
    ..setButtonPositionY(0)
    ..setGoldCost(0)
    ..setLumberCost(0)
    ..setResearchesAvailable("")
    ..setBuildTime(30)
    ..setHideMinimapDisplay(true)
    ..setHitPointsMaximumBase(500)
    ..setArmorType(ArmorType.Fortified)
    ..setDefenseBase(0)
    ..setUnitsTrained("")
    ..setUpgradesTo("")
    ..setUnitsTrained("")
    ..setResearchesAvailable("")
    ..setUnitsTrained("")
    ..setNormalAbilities(commaList(AbilityIds.blightDispelLarge))
    ..setUpgradesUsed(commaList(TlsUpgradeIds.campDefense))
    ..setCommonBuildingProperties()

// ============================================================================
function onUnitTrained()
  let trainedUnit = GetTrainedUnit()
  let trainingUnit = GetTriggerUnit()
  let trainedUnitId = trainedUnit.getTypeId()

  // The player is moving the Obelisk so remove it
  if (trainedUnitId == TlsUnitIds.BuildItemUnits.obelisk and trainingUnit.isObelisk())
    trainingUnit.remove()

// ============================================================================
function onUnitIndexedDeindexed()

  if (Preload.isPreloading())
    return

  let _unit = getIndexingUnit()
  if (_unit.isObelisk())
    destroyObeliskIfPlayerAlreadyHasOne(_unit)

// ============================================================================
function isEnumUnitObelisk() returns bool
  return GetEnumUnit().isObelisk()

// ============================================================================
function countNumberOfObelisks(player _player) returns int
  var count = 0
  let temp = getGroup()
  temp.enumUnitsOfPlayer(_player, null)
  for _unit in temp
    if (_unit.isObelisk() and _unit.isAlive())
      count++
  temp.release()
  return count

// ============================================================================
function destroyObeliskIfPlayerAlreadyHasOne(unit _unit) returns bool
  if (not _unit.isObelisk())
    return false

  // This is the one and only alive obelisk unit
  if (countNumberOfObelisks(_unit.getOwner()) <= 1)
    return false

  // This unit shouldn't have been created
  _unit.remove()
  
  // Warn the player and create an item on the ground
  displayMessageToPlayer(_unit.getOwner(), "You can only build one Obelisk".colorize(Colors.red))

  // Convert the unit to it's item form
  spawnObelisk(_unit.getTypeId(), _unit.getPos())

  return true

// ============================================================================
function spawnObelisk(int _unitTypeId, vec2 pos)
  ItemType.createItem(TlsItemIds.obelisk, pos)

bool g_hasWisp = false

// ============================================================================
function onConstructCanceled()
  let structure = GetTriggerUnit()
  if (not structure.isObelisk())
    return

  g_hasWisp = false

  let owningPlayer = structure.getOwner()
  let temp = getGroup()
  temp.enumUnitsOfType(TlsUnitIds.wisp, null)
  for u in temp
    if (u.getOwner() == owningPlayer)
      g_hasWisp = true
  temp.release()

  if (not g_hasWisp)
    spawnObelisk(structure.getTypeId(), structure.getPos())

  // remove so it can't be revived since it's a hero
  structure.remove()

// ============================================================================
function onSpellCast()
  let castingUnit = GetSpellAbilityUnit()
  if (castingUnit.getTypeId() != TlsUnitIds.wisp)
    return
  if (GetSpellAbilityId() == TlsAbilityIds.buildObelisk)
    castingUnit.removeAbility(TlsAbilityIds.buildObelisk)

// ============================================================================
@compiletime function createDefinitions()

  g_obelisk1Definition = createBaseObeliskDefinition(TlsUnitIds.obelisk1)
    ..setName("Magical Obelisk")
    ..setTooltipBasic("Build Magical Obelisk")
    ..setIconGameInterface("ReplaceableTextures\\CommandButtons\\BTNPowerGenerator.blp")
    ..setModelFile("Doodads\\Cityscape\\Props\\CrystalShield\\CrystalShield")
    ..setScalingValue(0.75)
    ..setFoodProduced(3)
    ..setUnitsTrained(commaList(TlsUnitIds.BuildItemUnits.obelisk))
    ..setHitPointsMaximumBase(1000)
    ..setUpgradesTo(commaList(TlsUnitIds.obelisk2))

  let sb = new StringBuilder()
  sb.appendLine("A crystal eminating pure light held in place by a structure reinforced with magic. You are told its power increases with each new day and that soon it will have the strength to stop Archimonde and his undead armies.")
  sb.appendLine()
  sb.appendLine("Your task is to build this Magical Crystal and defend it until it reaches its maximum power.".colorize(Colors.gold))
  sb.appendLine()
  sb.appendLine("Required to build any structure. Only one can be built at a time.".colorize(Colors.red))
  sb.appendLine()
  g_obelisk1Definition.setTooltipExtended(sb.toStringAndDestroy())

  g_obelisk2Definition = createBaseObeliskDefinition(TlsUnitIds.obelisk2)
    ..setName("Magical Obelisk II")
    ..setTooltipBasic("Magical Obelisk II")
    ..setIconGameInterface("ReplaceableTextures\\CommandButtons\\BTNPowerGenerator.blp")
    ..setModelFile("buildings\\other\\TowerDefenseTower\\TowerDefenseTower")
    ..setRequiredAnimationNames("first")
    ..setScalingValue(1.0)
    ..setScalingValue(1.0)
    ..setFoodProduced(5)
    ..setManaMaximum(100)
    ..setManaInitialAmount(0)
    ..setManaRegeneration(0.6)
    ..setHitPointsMaximumBase(2500)
    ..setUpgradesTo(commaList(TlsUnitIds.obelisk3))
    ..setRequirements(commaList(TlsUpgradeIds.bossesKilled))
    ..setRequirementsLevels("1")

  g_obelisk3Definition = createBaseObeliskDefinition(TlsUnitIds.obelisk3)
    ..setName("Magical Obelisk III")
    ..setTooltipBasic("Magical Obelisk III")
    ..setIconGameInterface("ReplaceableTextures\\CommandButtons\\BTNPowerGenerator.blp")
    ..setModelFile("buildings\\other\\ElvenGuardMagicTower\\ElvenGuardMagicTower")
    ..setScalingValue(1.0)
    ..setHitPointsMaximumBase(5000)
    ..setFoodProduced(7)
    ..setManaMaximum(100)
    ..setManaInitialAmount(0)
    ..setManaRegeneration(0.6)
    ..setRequirements(commaList(TlsUpgradeIds.bossesKilled))
    ..setRequirementsLevels("2")

  g_obelisk4Definition = createBaseObeliskDefinition(TlsUnitIds.obelisk4)
    ..setName("Magical Obelisk IV")
    ..setTooltipBasic("Magical Obelisk IV")
    ..setIconGameInterface("ReplaceableTextures\\CommandButtons\\BTNPowerGenerator.blp")
    ..setModelFile("buildings\\other\\ElvenGuardMagicTower\\ElvenGuardMagicTower")
    ..setScalingValue(1.5)
    ..setHitPointsMaximumBase(10000)
    ..setFoodProduced(9)
    ..setManaMaximum(100)
    ..setManaInitialAmount(0)
    ..setManaRegeneration(0.6)
    ..setRequirements(commaList(TlsUpgradeIds.bossesKilled))
    ..setRequirementsLevels("3")

  g_obeliskItemDefinition = new TlsItemDefinition(TlsItemIds.obelisk, 'tbsm')
  ..setName(g_obelisk1Definition.getName())
  ..setDescription("Constructs a {0} at a chosen location.".format(g_obelisk1Definition.getName()))
  ..setTooltipBasic("Assemble {0}".format(g_obelisk1Definition.getName()))
  ..setTooltipExtended("Constructs a {0} at a chosen location.|n|n{1}".format(g_obelisk1Definition.getName(), g_obelisk1Definition.getTooltipExtended()))
  ..setAbilities(commaList(TlsAbilityIds.buildObelisk))
  ..setInterfaceIcon("ReplaceableTextures\\CommandButtons\\BTNPowerGenerator.blp")
  ..setGoldCost(0)
  ..setLumberCost(0)
  ..setCanBeDropped(true)
  ..setDroppedWhenCarrierDies(false)
  ..setCanBeSoldByMerchants(false)
  ..setCanBeSoldToMerchants(false)
  ..setNumberofCharges(1)
  ..build()

  new ItemBuildUnitDefinition(TlsUnitIds.BuildItemUnits.obelisk)
  ..setName("Disassemble Magical Obelisk")
  ..setTooltipBasic("Disassemble Magical Obelisk")
  ..setTooltipExtended("Disassemble the Magical Obelisk in order to move it to a new location.|n|n{0}".format("The Magical Obelisk's power level will be reset".colorize(Colors.red)))
  ..setDescription(g_obeliskItemDefinition.getDescription())
  ..setGoldCost(0)
  ..setLumberCost(0)
  ..setIconGameInterface(Icons.bTNPillage)
  ..setBuildTime(30)
  ..setButtonPositionX(3)
  ..setButtonPositionY(2)
  ..setRequirements("")
  ..setGoldCost(1)

  new AbilityDefinitionBuildTinyScoutTower(TlsAbilityIds.buildObelisk)
    ..setDurationNormal(1, 30.0)
    ..setUnitCreatedperplayerrace(1, commaList(TlsUnitIds.obelisk1))
    ..setIconNormal("ReplaceableTextures\\CommandButtons\\BTNPowerGenerator.blp")
    ..setButtonPositionNormalX(0)
    ..setButtonPositionNormalY(2)
    ..setTooltipNormal(1, "Build Magical Obelisk")
    ..setTooltipNormalExtended(1, g_obelisk1Definition.getTooltipExtended())

  new AbilityDefinitionFarseerChainLightning(TlsAbilityIds.obeliskLightning)
    ..presetManaCost(lvl -> 100)
    ..presetCooldown(lvl -> 60.0)

// ============================================================================
init
  if (g_obelisk1Definition == null)
    createDefinitions()

  BuildItems.register(TlsItemIds.obelisk, TlsUnitIds.BuildItemUnits.obelisk)

  onUnitIndex(function onUnitIndexedDeindexed)
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_TRAIN_FINISH, function onUnitTrained)
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_CONSTRUCT_CANCEL, function onConstructCanceled)
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_CAST, function onSpellCast)