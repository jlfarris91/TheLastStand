package CampBuilding
import Camp
import Composition
import Type
import BuildingMetadata
import ErrorIf

// ============================================================================
public interface ICampBuilding extends ICampUnitMetadata

// ============================================================================
public class CampBuilding extends BuildingMetadata implements ICampBuilding
  protected ICamp _camp

  // --------------------------------------------------------------------------
  construct(ICamp camp)
    ErrorIf.argumentIsNull(camp, "camp")
    this._camp = camp

  // --------------------------------------------------------------------------
  ondestroy
    if (this._camp != null)
      this._camp.removeUnit(this)
      this._camp = null

  // --------------------------------------------------------------------------
  @inline
  override function getCamp() returns ICamp
    return this._camp
    
  // --------------------------------------------------------------------------
  @inline
  override function getUnit() returns unit
    return super.getUnit()
    
  // --------------------------------------------------------------------------
  @inline
  override function setUnit(unit u)
    super.setUnit(u)
    
  // --------------------------------------------------------------------------
  @inline
  override function addComponent(IComponent component) returns IComponent
    return super.addComponent(component)
    
  // --------------------------------------------------------------------------
  @inline
  override function removeComponent(IComponent component) returns bool
    return super.removeComponent(component)

  // --------------------------------------------------------------------------
  @inline
  override function getComponent(Type componentType) returns IComponent
    return super.getComponent(componentType)