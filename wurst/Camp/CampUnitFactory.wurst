package CampUnitFactory
import TlsUnitIds
import UnitMetadata
import HumanPlayerMetadata
import Unit_Gate

import initlater CampBase
import initlater Gate
import initlater AidStation
import initlater Armory
import initlater Chest
import initlater Spikes
import initlater Workshop
import initlater Camp
import initlater Hero
import initlater SurvivorUnit
import initlater Tent

// ============================================================================
public class CampUnitFactory implements IUnitMetadataFactory

  // --------------------------------------------------------------------------
  override function createUnit(unit u) returns IUnitMetadata

    let playerMetadata = u.getOwnerHumanMetadata()
    if (playerMetadata == null)
      return null

    let camp = playerMetadata.getCamp()
    if (camp == null)
      return null

    return createMetadataForUnit(u, camp)

  // --------------------------------------------------------------------------
  private function createMetadataForUnit(unit u, ICamp camp) returns CampUnit
    let unitTypeId = u.getTypeId()

    switch (unitTypeId)

      case TlsUnitIds.campTent | TlsUnitIds.campHouse | TlsUnitIds.campHall
        return new CampBase(camp)

      case TlsUnitIds.aidStation
        return new AidStation(camp)

      case TlsUnitIds.chest
        return new Chest(camp)

      case TlsUnitIds.armory
        return new Armory(camp)

      case TlsUnitIds.spikes
        return new Spikes(camp)

      case TlsUnitIds.workshop
        return new Workshop(camp)

      case TlsUnitIds.tent
        return new Tent(camp)

    if (u.isSurvivor())
      return new Survivor(camp)

    if (u.isGate())
      return new Gate(camp)

    if (unitTypeId == TlsUnitIds.hero)
      return new Hero(camp)

    return new CampUnit(camp)