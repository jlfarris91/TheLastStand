package CampUnitFactory
import TlsUnitIds
import UnitMetadata
import initlater Gate
import initlater Wall
import initlater AidStation
import initlater GunLab
import initlater Chest
import initlater Spikes
import initlater Workshop
import initlater Camp
import initlater Hero
import SkillsComponent
import Skills
import HumanPlayerMetadata

// ============================================================================
public class CampUnitFactory implements IUnitMetadataFactory

  // --------------------------------------------------------------------------
  override function createUnit(unit u) returns IUnitMetadata
    let playerMetadata = u.getOwnerHumanMetadata()
    if (playerMetadata == null)
      return null

    let camp = playerMetadata.getCamp()
    if (camp == null)
      return null

    let unitId = u.getTypeId()
    ICampUnitMetadata metadata = null

    switch (unitId)
      case TlsUnitIds.aidStation
        metadata = new AidStation(camp, u)
      case TlsUnitIds.chest
        metadata = new Chest(camp, u)
      case TlsUnitIds.gunlab
        metadata = new GunLab(camp, u)
      case TlsUnitIds.spikes
        metadata = new Spikes(camp, u)
      case TlsUnitIds.workshop
        metadata = new Workshop(camp, u)
      case TlsUnitIds.survivor
        metadata = new Survivor(camp, u)
      case TlsUnitIds.survivorBuilder
        metadata = new Survivor(camp, u)
      case TlsUnitIds.survivorMarksman
        metadata = new Survivor(camp, u)
      case TlsUnitIds.survivorMedic
        metadata = new Survivor(camp, u)

    if (unitId == TlsUnitIds.gateHorizontalBuild or
        unitId == TlsUnitIds.gateHorizontalOpen or
        unitId == TlsUnitIds.gateHorizontalClosed or
        unitId == TlsUnitIds.gateDiagonalOpen or
        unitId == TlsUnitIds.gateDiagonalClosed)
      print("Creating Gate")
      metadata = new Gate(camp, u)

    if (unitId == TlsUnitIds.wallCorner or
        unitId == TlsUnitIds.wallHorizontal)
      print("Creating Wall")
      metadata = new Wall(camp, u)

    if (unitId == TlsUnitIds.hero)
      print("Creating Hero")
      metadata = createHero(camp, u)

    if (metadata != null)
      camp.addUnit(metadata)

    return metadata

  // --------------------------------------------------------------------------
  private function createHero(ICamp camp, unit u) returns ICampUnitMetadata
    var hero = new Hero(camp, u)

    var skillsComponent = new SkillsComponent(hero)
    
    skillsComponent.addSkill(Skills.sprint.createInstance(hero))

    hero.addComponent(skillsComponent)

    u.getOwnerHumanMetadata().setHero(hero)

    return hero