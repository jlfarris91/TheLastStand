package CampUnitFactory
import initlater ICampUnitFactory
import initlater ICampUnit
import Gate
import ICamp
import Survivor
import TlsUnitIds
import Wall
import AidStation
import GunLab
import Chest
import Spikes
import Workshop

public class CampUnitFactory implements ICampUnitFactory
  override function createCampUnit(ICamp camp, unit u) returns ICampUnit
    let unitId = u.getTypeId()

    switch (unitId)
      case TlsUnitIds.aidStation
        return new AidStation(camp, u)
      case TlsUnitIds.chest
        return new Chest(camp, u)
      case TlsUnitIds.gunlab
        return new GunLab(camp, u)
      case TlsUnitIds.spikes
        return new Spikes(camp, u)
      case TlsUnitIds.workshop
        return new Workshop(camp, u)
      case TlsUnitIds.survivor
        return new Survivor(camp, u)
      case TlsUnitIds.survivorBuilder
        return new Survivor(camp, u)
      case TlsUnitIds.survivorMarksman
        return new Survivor(camp, u)
      case TlsUnitIds.survivorMedic
        return new Survivor(camp, u)

    if (unitId == TlsUnitIds.gateHorizontalBuild or
        unitId == TlsUnitIds.gateHorizontalOpen or
        unitId == TlsUnitIds.gateHorizontalClosed or
        unitId == TlsUnitIds.gateDiagonalOpen or
        unitId == TlsUnitIds.gateDiagonalClosed)
      print("Creating Gate")
      return new Gate(camp, u)

    if (unitId == TlsUnitIds.wallCorner or
        unitId == TlsUnitIds.wallHorizontal)
      print("Creating Wall")
      return new Wall(camp, u)

    return null

