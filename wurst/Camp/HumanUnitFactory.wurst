package HumanUnitFactory
import TlsUnitIds
import UnitMetadata
import Crafting
import ItemRecipes

import HumanPlayerComponent
import GateComponent
import ChestComponent
import SpikesComponent
import CampCenterComponent
import CampFireComponent
import PersistActiveAbilityComponent
import AltarComponent
import SurvivorComponent
import ManualGeneratorComponent
import SolarGeneratorComponent
import BatteryComponent
import EnableAttackWhenPoweredComponent
import LooterComponent
import BuildingUndeadTarget
import BuildingUndeadTargetComponent
import WorkstationComponent
import HeroComponent
import ScoutTowerComponent
import TunnelEntranceComponent
import ShelterComponent
import UnitPropertiesComponent

import Unit_GateCommon
import Unit_Walls
import Unit_LumberMill
import Unit_GuardTower
import Unit_CannonTower

import HeroAbility_Sprint
import HeroAbility_Blundershot
import HeroAbility_SmokeGrenade
import HeroAbility_Procurist
import HeroAbility_Cleave
import HeroAbility_Taunt
// import HeroAbility_DevotionAura
import HeroAbility_HolyLight
import HeroAbility_ImmediateRepair
import HeroAbility_Shockwave
import HeroAbility_StructureArmorAura
import HeroAbility_OperatorBoost
import HeroAbility_RocketBarrage
import HeroExperienceComponent
import HeroAbility_Lineshot
import HeroAbility_Outdoorsman
import HeroAbility_BearTrap

// ============================================================================
public class HumanUnitMetadataFactory implements IUnitMetadataFactory
  
  // --------------------------------------------------------------------------
  override function createMetadata(unit u) returns UnitMetadata

    if (u.isTlsHero())
      let ownerComp = u.getOwner().getHumanPlayerComponentRequired()
      let heroMetadata = ownerComp.getHeroMetadata()
      heroMetadata.attach(u)
      return heroMetadata

    return null

// ============================================================================
public class HumanUnitComponentGenerator implements IUnitComponentGenerator

  // --------------------------------------------------------------------------
  override function generateComponents(IUnitMetadata metadata) returns bool
    let u = metadata.getUnit()
    let unitTypeId = u.getTypeId()

    if (u.isBuildingUndeadTarget())
      metadata.getOrAddBuildingUndeadTargetComponent()

    if (u.isObelisk())
      metadata.getOrAddCampCenterComponent()
      metadata.getBuildingUndeadTargetComponent().setAffectUTCTargetOrganic(true)
      return true

    switch (unitTypeId)
    //{
      case TlsUnitIds.chest
        metadata.getOrAddChestComponent()
        return true

      case TlsUnitIds.altar
        metadata.getOrAddAltarComponent()
        return true

      case TlsUnitIds.manualGenerator
        metadata.getOrAddWorkstationComponent()
        metadata.getOrAddManualGeneratorComponent()
        return true

      case TlsUnitIds.solarGenerator
        metadata.getOrAddSolarGeneratorComponent()
        return true

      case TlsUnitIds.battery
        metadata.getOrAddBatteryComponent()
        return true

      case TlsUnitIds.turretPhysical | TlsUnitIds.turretElemental
        metadata.getOrAddEnableAttackWhenPoweredComponent()
        return true

      case TlsUnitIds.scoutTower
        metadata.getOrAddScoutTowerComponent()
        return true

      case TlsUnitIds.guardTowers[0] | TlsUnitIds.guardTowers[1] | TlsUnitIds.guardTowers[2]
        metadata.getOrAddGuardTowerComponent()
        return true

      case TlsUnitIds.cannonTowers[0] | TlsUnitIds.cannonTowers[1] | TlsUnitIds.cannonTowers[2]
        metadata.getOrAddCannonTowerComponent()
        return true

      case TlsUnitIds.lumberMill
        metadata.getOrAddLumberMillComponent()
        return true

      case TlsUnitIds.tunnelEntrance
        metadata.getOrAddTunnelEntranceComponent()
        return true

      case TlsUnitIds.forge
        metadata.getOrAddCraftingComponent()..setRecipeBook(g_forgeRecipeBook)
        return true
    //}

    if (u.isSpikes())
      metadata.getOrAddSpikesComponent()
      return true

    if (u.isSurvivor())
      metadata.getOrAddSurvivorComponent()
      metadata.getOrAddUnitPropertiesComponent()
      return true

    if (u.isWoodFence() or u.isGate())
      metadata.getOrAddGateComponent()
      return true

    if (u.isCampFire())
      metadata.getOrAddCraftingComponent()..setRecipeBook(g_campFireRecipeBook)
      metadata.getOrAddCampFireComponent()
      metadata.getOrAddPersistActiveAbilityComponent()
      return true

    if (u.isShelter())
      metadata.getOrAddShelterComponent()
      return true

    if (u.isTlsHero())
    //{
      metadata.getOrAddHeroComponent()
      metadata.getOrAddHeroExperienceComponent()
      metadata.getOrAddLooterComponent()

      // Ranger
      if (u.getTypeId() == TlsUnitIds.heroRanger)
        metadata.getOrAddProcuristComponent()
        metadata.getOrAddSprintComponent()
        metadata.getOrAddSmokeGrenadeComponent()
        metadata.getOrAddLineshotComponent()
      
      if (u.getTypeId() == TlsUnitIds.heroMountaineer)
        metadata.getOrAddOutdoorsmanComponent()
        metadata.getOrAddBearTrapComponent()
        metadata.getOrAddBlundershotComponent()

      // Swordsman
      if (u.getTypeId() == TlsUnitIds.heroSwordsman)
        metadata.getOrAddCleaveComponent()
        metadata.getOrAddTauntComponent()
        // metadata.getOrAddDevotionAuraComponent()
        metadata.getOrAddHolyLightComponent()
        metadata.getOrAddShockwaveComponent()

      // Tinkerer
      if (u.getTypeId() == TlsUnitIds.heroTinker)
        metadata.getOrAddStructureArmorAuraComponent()
        metadata.getOrAddInstantRepairComponent()
        metadata.getOrAddOperatorBoostComponent()
        metadata.getOrAddRocketBarrageComponent()

      return true
    //}

    return false