package HumanUnitFactory
import TlsUnitIds
import UnitMetadata
import Unit_GateCommon

import initlater GateComponent
import initlater ChestComponent
import initlater Hero
import initlater SurvivorUnit
import Unit_WoodFence

import SpikesComponent
import TentComponent
import RangedTargetComponent
import CampCenterComponent
import XpReceiverComponent

// ============================================================================
public class HumanUnitFactory implements IUnitMetadataFactory

  // --------------------------------------------------------------------------
  override function createUnit(unit u) returns IUnitMetadata
    let unitTypeId = u.getTypeId()

    if (u.isCampHeadquarters())
      let metadata = new UnitMetadata()
      metadata.addComponent(new CampCenterComponent(metadata))
      return metadata

    switch (unitTypeId)

      case TlsUnitIds.chest
        let metadata = new UnitMetadata()
        metadata.addComponent(new ChestComponent(metadata))
        return metadata

      case TlsUnitIds.shelter1
        let metadata = new UnitMetadata()
        metadata.addComponent(new TentComponent(metadata))
        return metadata

      case TlsUnitIds.rangedTarget
        let metadata = new UnitMetadata()
        metadata.addComponent(new RangedTargetComponent(metadata))
        return metadata

    if (u.isSpikes())
      let metadata = new UnitMetadata()
      metadata.addComponent(new SpikesComponent(metadata))
      metadata.addComponent(new XpReceiverComponent(metadata)..setGiveXpAreaPercent01(1.0))
      return metadata

    if (u.isSurvivor())
      return new Survivor()

    if (u.isWoodFence() or u.isGate())
      let metadata = new UnitMetadata()
      metadata.addComponent(new GateComponent(metadata))
      return metadata

    if (unitTypeId == TlsUnitIds.hero)
      return new Hero()

    return null