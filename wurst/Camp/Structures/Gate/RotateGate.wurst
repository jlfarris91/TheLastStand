package RotateGate
import RegisterEvents
import Unit_Gate
import Ability_RotateGate

function onRotateGateCast()
  var caster = GetSpellAbilityUnit()
  let casterId = caster.getTypeId()
  let owner = caster.getOwner()
  let pos = caster.getPos()
  var angle = I2R(caster.getUserData())

  caster.remove()

  unit replaced

  if (casterId == UNIT_ID_GATE_HORIZONTAL_CLOSED)
    replaced = CreateUnit(owner, UNIT_ID_GATE_DIAGONAL_CLOSED, pos.x, pos.y, angle)
  else
    angle -= 90.0
    replaced = CreateUnit(owner, UNIT_ID_GATE_HORIZONTAL_CLOSED, pos.x, pos.y, angle)
  
  replaced.setUserData(R2I(angle))
  replaced.setLife(caster.getLife())

  replaced.setPathing(false)
  replaced.setPos(pos)
  replaced.setPathing(true)
  
  owner.select(replaced)

init
  registerSpellEffectEvent(ABILITY_ID_ROTATEGATE, function onRotateGateCast)