package Chest
import RegisterEvents
import initlater CampUnit
import initlater ICamp
import initlater CampManager

public class Chest extends CampUnit
  private bool _isOpen

  construct (ICamp camp, unit u)
    super(camp, u)      
    
  function isOpen() returns bool
    return this._isOpen

  function isClosed() returns bool
    return not this._isOpen

  function openChest()
    if (this.isClosed())
      this._unit.queueAnimation("death alternate")
      this._isOpen = true

  function closeChest()
    if (this.isOpen())
      this._unit.queueAnimation("birth")
      this._isOpen = false

function onChestSelected()
  let selectedUnit = GetTriggerUnit()
  let camp = selectedUnit.getCamp()
  if (camp == null)
    return
  let chest = camp.getUnit(selectedUnit) castTo Chest
  if (chest != null)
    chest.openChest()

function onChestDeselected()
  let deselectedUnit = GetTriggerUnit()
  let camp = deselectedUnit.getCamp()
  if (camp == null)
    return
  let chest = camp.getUnit(deselectedUnit) castTo Chest
  if (chest != null)
    chest.closeChest()

init
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SELECTED, function onChestSelected)
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_DESELECTED, function onChestDeselected)
  