package SurvivorUnit
import Camp
import SurvivorJobComponent
import SkillsComponent
import SurvivorMarksmanSkill
import Skills
import ObjectIds
import ErrorHandling
import TlsUnitIds
import SurvivorMedicSkill
import SurvivorSpearmanSkill
import SurvivorMilitiaSkill
//import CampIncomeProviderComponent
import SurvivorJobSkill
import SurvivorBuilderSkill
import TlsItemIds
import GameConstants

// ============================================================================
public class Survivor extends CampUnit
  private SkillsComponent m_skillsComponent
  //private CampIncomeProviderComponent m_campIncomeProvider

  private SurvivorMarksmanSkill m_marksmanSkill
  private SurvivorSpearmanSkill m_spearmanSkill
  private SurvivorMilitiaSkill m_militiaSkill
  private SurvivorMedicSkill m_medicSkill
  private SurvivorBuilderSkill m_builderSkill
  
  private SurvivorJobSkill m_activeJobSkill

  // --------------------------------------------------------------------------
  construct(ICamp camp)
    super(camp)

    addComponent(new SurvivorJobComponent(this))

    m_skillsComponent = new SkillsComponent(this)

    m_marksmanSkill = m_skillsComponent.getOrAddSurvivorMarksmanSkill()..setIsEnabled(false)
    m_spearmanSkill = m_skillsComponent.getOrAddSurvivorSpearmanSkill()..setIsEnabled(false)
    m_militiaSkill = m_skillsComponent.getOrAddSurvivorMilitiaSkill()..setIsEnabled(false)
    m_medicSkill = m_skillsComponent.getOrAddSurvivorMedicSkill()..setIsEnabled(false)
    m_builderSkill = m_skillsComponent.getOrAddSurvivorBuilderSkill()..setIsEnabled(false)

    addComponent(m_skillsComponent)

    // m_campIncomeProvider = this.getOrAddCampIncomeProviderComponent()
    // ..setIncomeBase(0)
    // ..setIncomeNumberOfDice(1)
    // ..setIncomeNumberOfSidesPerDie(3)
    // ..setDuration(rangeReal(15.0, 30.0))

  // --------------------------------------------------------------------------
  protected override function onUnitChanged(unit oldUnit, unit newUnit)
    super.onUnitChanged(oldUnit, newUnit)

    disableAllSkills()
    
    //m_campIncomeProvider.setIncomeBase(0)

    if (newUnit == null)
      return

    let newUnitId = newUnit.getTypeId()

    switch (newUnitId)
      case TlsUnitIds.survivorMale
        m_activeJobSkill = m_builderSkill
        onLostJob()
      case TlsUnitIds.survivorMarksman | TlsUnitIds.survivorMarksmanTower
        m_activeJobSkill = m_marksmanSkill
        onChangeToMarksman()
      case TlsUnitIds.survivorMedic
        m_activeJobSkill = m_medicSkill
        onChangeToMedic()
      case TlsUnitIds.survivorBuilder
        m_activeJobSkill = m_builderSkill
        onChangeToBuilder()
      case TlsUnitIds.survivorSpearman
        m_activeJobSkill = m_spearmanSkill
        onChangeToSpearman()
      case TlsUnitIds.survivorMilitia
        m_activeJobSkill = m_militiaSkill
        onChangeToMilitia()
      default
        error("Invalid unit type: " + newUnitId.toRawCode())
        return

    if (m_activeJobSkill != null)
      m_activeJobSkill.setIsEnabled(true)
      //m_campIncomeProvider.setIncomeBase(m_activeJobSkill.getLevel())

  // --------------------------------------------------------------------------
  private function disableAllSkills()
    m_marksmanSkill.setIsEnabled(false)
    m_medicSkill.setIsEnabled(false)
    m_spearmanSkill.setIsEnabled(false)
    m_militiaSkill.setIsEnabled(false)
    m_builderSkill.setIsEnabled(false)

  // --------------------------------------------------------------------------
  private function onLostJob()
    Log.debug("Survivor lost job")

  // --------------------------------------------------------------------------
  private function onChangeToMarksman()
    Log.debug("Changed to Marksman job")

  // --------------------------------------------------------------------------
  private function onChangeToMedic()
    Log.debug("Changed to Medic job")
    skip

  // --------------------------------------------------------------------------
  private function onChangeToBuilder()
    Log.debug("Changed to Builder job")
    skip

  // --------------------------------------------------------------------------
  private function onChangeToSpearman()
    Log.debug("Changed to Spearman job")
    skip

  // --------------------------------------------------------------------------
  private function onChangeToMilitia()
    Log.debug("Changed to Militia job")
    skip

// ============================================================================
public function unit.isSurvivor() returns bool
  return this.isRescuedSurvivor() or this.isUnrescuedSurvivor()

// ============================================================================
public function unit.isRescuedSurvivor() returns bool
  let targetTypeId = this.getTypeId()
  return  targetTypeId == TlsUnitIds.survivorMale or
          targetTypeId == TlsUnitIds.survivorBuilder or
          targetTypeId == TlsUnitIds.survivorMarksman or
          targetTypeId == TlsUnitIds.survivorMedic or
          targetTypeId == TlsUnitIds.survivorMilitia or
          targetTypeId == TlsUnitIds.survivorSpearman

// ============================================================================
public function unit.isUnrescuedSurvivor() returns bool
  return this.getOwner() == PLAYER_VILLAGERS

// ============================================================================
public function unit.isRescuableSurvivor() returns bool
  return this.isSurvivor() and this.isUnrescuedSurvivor()

// ============================================================================
public function getUnitTypeForJobItemType(int itemType) returns int
  switch (itemType)
    case TlsItemIds.rustySword
      return TlsUnitIds.survivorMilitia
    case TlsItemIds.basicTools
      return TlsUnitIds.survivorBuilder
    case TlsItemIds.spears
      return TlsUnitIds.survivorSpearman
    case TlsItemIds.medicalKit
      return TlsUnitIds.survivorMedic
    case TlsItemIds.huntingRifle
      return TlsUnitIds.survivorMarksman
    default
      return -1

// ============================================================================
public function getJobItemTypeForUnitType(int unitType) returns int
  switch (unitType)
    case TlsUnitIds.survivorMilitia
      return TlsItemIds.rustySword
    case TlsUnitIds.survivorBuilder
      return TlsItemIds.basicTools
    case TlsUnitIds.survivorSpearman
      return TlsItemIds.spears
    case TlsUnitIds.survivorMedic
      return TlsItemIds.medicalKit
    case TlsUnitIds.survivorMarksman
      return TlsItemIds.huntingRifle
    default
      return -1