package Wisp
import RegisterEvents
import TlsUnitDefinition
import ChannelAbilityPreset
import HumanPlayerComponent
import HumanPlayers
import TlsUpgradeIds
import Hero_Mountaineer
import Hero_Tinkerer
import Hero_Captain
import Hero_Scout
import GameInstance
import StringBuilder
import ColorUtility
import Icons
import TlsUpgradeDefinition

// ============================================================================
@compiletime function createObjectDefinitions()

  new TlsUnitDefinition(TlsUnitIds.wisp, UnitIds.wisp)
    ..setName("Wisp")
    ..setNormalAbilities(commaList(AbilityIds.invulnerable, TlsAbilityIds.selectHero))
    ..setCollisionSize(0)
    ..setStructuresBuilt("")
    ..setUpgradesUsed("")
    ..setUnitClassification("")
    ..setSpeedBase(350)
    ..setFoodCost(0)

  var sb = new StringBuilder()
  sb.appendLine("[Ranger]".gold())
  sb.appendLine()
  sb.appendLine("A ranged hero with high mobility and looting skills. Capable of crowd control and high single-target damage.")
  sb.appendLine()
  sb.appendLine("[Q] Procurist".gold())
  sb.appendLine("A passive that makes looting more efficient")
  sb.appendLine()
  sb.appendLine("[W] Sprint".gold())
  sb.appendLine("Increases movement speed at the cost of mana")
  sb.appendLine()
  sb.appendLine("[E] Smoke Grenade".gold())
  sb.appendLine("Causes enemies to miss in an area")
  sb.appendLine()
  sb.appendLine("[R] Focused Shot".gold())
  sb.appendLine("Deals high damage to an enemy")

  new ChannelAbilityPreset(TlsAbilityIds.selectHero_scout, 1, true)
    ..setIconNormal(g_heroScoutDefinition.getIconGameInterface())
    ..setButtonPositionNormalX(0)
    ..setButtonPositionNormalY(0)
    ..setTooltipNormal(1, "Choose Scout")
    ..setTooltipNormalExtended(1, sb.toStringAndDestroy())

  sb = new StringBuilder()
  sb.appendLine("[Ranger]".gold())
  sb.appendLine()
  sb.appendLine("A short-ranged hero that excels at supporting a camp through cooking.")
  sb.appendLine()
  sb.appendLine("[Q] Survivalist".gold())
  sb.appendLine("A passive that increases the effects of cooking")
  sb.appendLine()
  sb.appendLine("[W] Dash".gold())
  sb.appendLine("Dash a short distance and deal AOE damage")
  sb.appendLine()
  sb.appendLine("[E] Bear Trap".gold())
  sb.appendLine("Place a trap that will damage and stun enemies")
  sb.appendLine()
  sb.appendLine("[R] Blundershot".gold())
  sb.appendLine("Deal AOE damage in a direction")

  new ChannelAbilityPreset(TlsAbilityIds.selectHero_mountaineer, 1, true)
    ..setIconNormal(g_heroMountaineerDefinition.getIconGameInterface())
    ..setButtonPositionNormalX(0)
    ..setButtonPositionNormalY(1)
    ..setTooltipNormal(1, "Choose Mountaineer")
    ..setTooltipNormalExtended(1, sb.toStringAndDestroy())
    ..setRequirements(commaList(TlsUpgradeIds.progressionMountaineer, TlsUpgradeIds.comingSoon))

  new TlsUpgradeDefinition(TlsUpgradeIds.progressionMountaineer, 1)
    ..setName(1, "Beat the game on Hard or higher using the Scout")

  sb = new StringBuilder()
  sb.appendLine("[Ranger]".gold())
  sb.appendLine()
  sb.appendLine("Hero coming soon")

  new ChannelAbilityPreset(TlsAbilityIds.selectHero_ranger3, 1, true)
    ..setIconNormal(Icons.bTNEngineeringUpgrade)
    ..setButtonPositionNormalX(0)
    ..setButtonPositionNormalY(2)
    ..setTooltipNormal(1, "Choose ???")
    ..setTooltipNormalExtended(1, sb.toStringAndDestroy())
    ..setRequirements(commaList(TlsUpgradeIds.progressionRanger3, TlsUpgradeIds.comingSoon))

  new TlsUpgradeDefinition(TlsUpgradeIds.progressionRanger3, 1)
    ..setName(1, "Beat the game on Insane or higher using the Scout or the Mountaineer")

  sb = new StringBuilder()
  sb.appendLine("[Fighter]".gold())
  sb.appendLine()
  sb.appendLine("A melee hero that primarily deals damage and supports soldiers. Excels at killing both zombies and elites.")
  sb.appendLine()
  sb.appendLine("[Q] Cleaving Slash".gold())
  sb.appendLine("A passive that causes attacks to deal damage to nearby enemies")
  sb.appendLine()
  sb.appendLine("[W] Taunt".gold())
  sb.appendLine("Nearby enemies are forced to target the Captain")
  sb.appendLine()
  sb.appendLine("[E] Blink".gold())
  sb.appendLine("Teleport to an ally to heal them or to an enemy to damage them")
  sb.appendLine()
  sb.appendLine("[R] Throw Spear".gold())
  sb.appendLine("Stuns and deals damage to an enemy")

  new ChannelAbilityPreset(TlsAbilityIds.selectHero_soldier, 1, true)
    ..setIconNormal(g_heroCaptainDefinition.getIconGameInterface())
    ..setButtonPositionNormalX(1)
    ..setButtonPositionNormalY(0)
    ..setTooltipNormal(1, "Choose Captain")
    ..setTooltipNormalExtended(1, sb.toStringAndDestroy())

  sb = new StringBuilder()
  sb.appendLine("[Fighter]".gold())
  sb.appendLine()
  sb.appendLine("A melee hero that places Banners to support allied soldiers or deal damage to enemies. Banners are placeable units that can change the tide of battle.")
  sb.appendLine()
  sb.appendLine("[Q] TBD".gold())
  sb.appendLine("TBD")
  sb.appendLine()
  sb.appendLine("[W] Banner Sigil".gold())
  sb.appendLine("Changes the Sigil of the next placed Banner")
  sb.appendLine()
  sb.appendLine("[E] Place Banner".gold())
  sb.appendLine("Places a Banner with the active Sigil at a target location")
  sb.appendLine()
  sb.appendLine("[R] Detonate".gold())
  sb.appendLine("Deal AOE damage to enemies near all Banners")

  new ChannelAbilityPreset(TlsAbilityIds.selectHero_bannerLord, 1, true)
    ..setIconNormal(Icons.bTNGarithos)
    ..setButtonPositionNormalX(1)
    ..setButtonPositionNormalY(1)
    ..setTooltipNormal(1, "Choose Bannerlord")
    ..setTooltipNormalExtended(1, sb.toStringAndDestroy())
    ..setRequirements(commaList(TlsUpgradeIds.progressionBannerlord, TlsUpgradeIds.comingSoon))

  new TlsUpgradeDefinition(TlsUpgradeIds.progressionBannerlord, 1)
    ..setName(1, "Beat the game on Hard or higher using the Captain")

  sb = new StringBuilder()
  sb.appendLine("[Fighter]".gold())
  sb.appendLine()
  sb.appendLine("Hero coming soon")

  new ChannelAbilityPreset(TlsAbilityIds.selectHero_fighter3, 1, true)
    ..setIconNormal(Icons.bTNEngineeringUpgrade)
    ..setButtonPositionNormalX(1)
    ..setButtonPositionNormalY(2)
    ..setTooltipNormal(1, "Choose ???")
    ..setTooltipNormalExtended(1, sb.toStringAndDestroy())
    ..setRequirements(commaList(TlsUpgradeIds.progressionFighter3, TlsUpgradeIds.comingSoon))

  new TlsUpgradeDefinition(TlsUpgradeIds.progressionFighter3, 1)
    ..setName(1, "Beat the game on Insane using the Captain or the Bannerlord")

  sb = new StringBuilder()
  sb.appendLine("[Engineer]".gold())
  sb.appendLine()
  sb.appendLine("A hero that excels at repairing and bolstering camp defenses. His only means of dealing damage is with the |cffffcc00Rocket Barrage|r ability.")
  sb.appendLine()
  sb.appendLine("Does not auto attack!".red())
  sb.appendLine()
  sb.appendLine("[Q] Stronghold Aura".gold())
  sb.appendLine("An aura that increases the armor of nearby structures")
  sb.appendLine()
  sb.appendLine("[W] Ranged Repair".gold())
  sb.appendLine("Repairs a target structure from a distance faster than a regular Survivor")
  sb.appendLine()
  sb.appendLine("[E] Overseer".gold())
  sb.appendLine("Temporarily increases the Operator level of a target Workstation")
  sb.appendLine()
  sb.appendLine("[R] Rocket Barrage".gold())
  sb.appendLine("Fires 3 rockets at random nearby enemies dealing splash damage and stunning them for a short time")

  new ChannelAbilityPreset(TlsAbilityIds.selectHero_tinkerer, 1, true)
    ..setIconNormal(g_heroTinkererDefinition.getIconGameInterface())
    ..setButtonPositionNormalX(2)
    ..setButtonPositionNormalY(0)
    ..setTooltipNormal(1, "Choose Tinkerer")
    ..setTooltipNormalExtended(1, sb.toStringAndDestroy())

  sb = new StringBuilder()
  sb.appendLine("[Engineer]".gold())
  sb.appendLine()
  sb.appendLine("A melee hero that places turrets and powers nearby powered buildings.")
  sb.appendLine()
  sb.appendLine("[Q] Pocket Generator".gold())
  sb.appendLine("A passive that provides power to nearby powered buildings")
  sb.appendLine()
  sb.appendLine("[W] Instant Repair".gold())
  sb.appendLine("Repair a target structure to full health or complete a construction in progress")
  sb.appendLine()
  sb.appendLine("[E] Overclock".gold())
  sb.appendLine("Increases the damage output of all active turrets")
  sb.appendLine()
  sb.appendLine("[R] Place Turret".gold())
  sb.appendLine("Place a powered turret a target location")

  new ChannelAbilityPreset(TlsAbilityIds.selectHero_inventor, 1, true)
    ..setIconNormal(Icons.bTNBloodElfPeasant)
    ..setButtonPositionNormalX(2)
    ..setButtonPositionNormalY(1)
    ..setTooltipNormal(1, "Choose Inventor")
    ..setTooltipNormalExtended(1, sb.toStringAndDestroy())
    ..setRequirements(commaList(TlsUpgradeIds.progressionInventor, TlsUpgradeIds.comingSoon))

  new TlsUpgradeDefinition(TlsUpgradeIds.progressionInventor, 1)
    ..setName(1, "Beat the game on Hard or higher using the Tinkerer")

  sb = new StringBuilder()
  sb.appendLine("[Engineer]".gold())
  sb.appendLine()
  sb.appendLine("Hero coming soon")

  new ChannelAbilityPreset(TlsAbilityIds.selectHero_engineer3, 1, true)
    ..setIconNormal(Icons.bTNEngineeringUpgrade)
    ..setButtonPositionNormalX(2)
    ..setButtonPositionNormalY(2)
    ..setTooltipNormal(1, "Choose ???")
    ..setTooltipNormalExtended(1, sb.toStringAndDestroy())
    ..setRequirements(commaList(TlsUpgradeIds.progressionEngineer3, TlsUpgradeIds.comingSoon))

  new TlsUpgradeDefinition(TlsUpgradeIds.progressionEngineer3, 1)
    ..setName(1, "Beat the game on Insane or higher using the Tinkerer or the Inventor")

  sb = new StringBuilder()
  sb.appendLine("[Special]".gold())
  sb.appendLine()
  sb.appendLine("Hero coming soon")

  new ChannelAbilityPreset(TlsAbilityIds.selectHero_special1, 1, true)
    ..setIconNormal(Icons.bTNEngineeringUpgrade)
    ..setButtonPositionNormalX(3)
    ..setButtonPositionNormalY(0)
    ..setTooltipNormal(1, "Choose ???")
    ..setTooltipNormalExtended(1, sb.toStringAndDestroy())
    ..setRequirements(commaList(TlsUpgradeIds.comingSoon))

  sb = new StringBuilder()
  sb.appendLine("[Special]".gold())
  sb.appendLine()
  sb.appendLine("Hero coming soon")

  new ChannelAbilityPreset(TlsAbilityIds.selectHero_special2, 1, true)
    ..setIconNormal(Icons.bTNEngineeringUpgrade)
    ..setButtonPositionNormalX(3)
    ..setButtonPositionNormalY(0)
    ..setTooltipNormal(1, "Choose ???")
    ..setTooltipNormalExtended(1, sb.toStringAndDestroy())
    ..setRequirements(commaList(TlsUpgradeIds.comingSoon))

  new AbilityDefinitionSpellBook(TlsAbilityIds.selectHero)
    ..setSpellList(1, commaList(
      TlsAbilityIds.selectHero_scout,
      TlsAbilityIds.selectHero_soldier,
      TlsAbilityIds.selectHero_tinkerer,
      TlsAbilityIds.selectHero_special1,
      TlsAbilityIds.selectHero_mountaineer,
      TlsAbilityIds.selectHero_bannerLord,
      TlsAbilityIds.selectHero_inventor,
      TlsAbilityIds.selectHero_special2,
      TlsAbilityIds.selectHero_ranger3,
      TlsAbilityIds.selectHero_fighter3,
      TlsAbilityIds.selectHero_engineer3
    ))
    ..setMinimumSpells(1, 11)
    ..setMaximumSpells(1, 11)
    ..setTooltipNormal(1, "Choose Your Hero")
    ..setTooltipNormalExtended(1, "Pick from several different heroes with a variety of playstyles")
    ..setButtonPositionNormalX(0)
    ..setButtonPositionNormalY(2)

bool g_hasWisp = false

// ============================================================================
function onSpellCast()
  let castingUnit = GetSpellAbilityUnit()
  if (castingUnit.getTypeId() != TlsUnitIds.wisp)
    return

  let castingPlayer = castingUnit.getOwner()

  let abilityId = GetSpellAbilityId()
  
  int heroTypeId

  switch (abilityId)
    case TlsAbilityIds.selectHero_scout
      heroTypeId = TlsUnitIds.heroScout

    case TlsAbilityIds.selectHero_soldier
      heroTypeId = TlsUnitIds.heroCaptain

    case TlsAbilityIds.selectHero_tinkerer
      heroTypeId = TlsUnitIds.heroTinker

    default
      return

  let playerComp = castingPlayer.getHumanPlayerComponent()
  playerComp.setHeroTypeId(heroTypeId)

  spawnHeroForPlayer(castingUnit.getOwner(), castingUnit.getPos(), true)

  castingUnit.remove()

// ============================================================================
init

  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_CAST, function onSpellCast)

  for p in g_PlayingHumanPlayers
    if (p == localPlayer)
      CreateCommandButtonEffectBJ(TlsAbilityIds.buildHeadquarters1, "")