package Camp
import HashMap
import HashList
import ErrorHandling
import LinkedList
import TlsUnitIds
import CampUnitFactory
import UnitMetadata
import Composition
import UnitExtensions
import Type
import HumanPlayerMetadata
import TlsAbilityIds
import DisplayTextToPlayer
import ErrorIf

HashMap<player, ICamp> g_PlayerCamps

// ============================================================================
public interface ICamp
  function getOwner() returns IPlayerMetadata
  
  function getCampUnit() returns unit
  function setCampUnit(unit u)
  
  function getCenter() returns vec2
  
  function getIsSecure() returns bool
  function setIsSecure(bool isSecure)

  function getUnit(unit u) returns ICampUnitMetadata
  function addUnit(ICampUnitMetadata u) returns ICampUnitMetadata
  function removeUnit(ICampUnitMetadata u) returns bool

  function getUnits() returns LinkedList<ICampUnitMetadata>

  function reset()

// ============================================================================
public interface ICampUnitMetadata extends IUnitMetadata
  function getCamp() returns ICamp

// ============================================================================
public interface ICampStructure extends ICampUnitMetadata

// ============================================================================
public interface ICampSurvivor extends ICampUnitMetadata

// ============================================================================
public class Camp implements ICamp
  protected HumanPlayerMetadata _owner
  protected HashList<ICampUnitMetadata> _units
  protected HashMap<unit, ICampUnitMetadata> _unitToCampUnitMap
  protected unit _campFlag
  protected int _worth
  protected bool _isSecure

  // --------------------------------------------------------------------------
  construct(HumanPlayerMetadata owner)
    this._owner = owner
    this._units = new HashList<ICampUnitMetadata>()
    this._unitToCampUnitMap = new HashMap<unit, ICampUnitMetadata>()
    this.reset()

  // --------------------------------------------------------------------------
  ondestroy
    this.reset()
    destroy this._units
    destroy this._unitToCampUnitMap

  // --------------------------------------------------------------------------
  override function reset()
    this._units.clear()
    this._unitToCampUnitMap.flush()
    this._isSecure = false
    setCampUnit(null)

  // --------------------------------------------------------------------------
  override function getOwner() returns IPlayerMetadata
    return this._owner

  // --------------------------------------------------------------------------
  override function getCampUnit() returns unit
    return this._campFlag

  // --------------------------------------------------------------------------
  override function setCampUnit(unit flag)
    if (flag != null and flag.getTypeId() != TlsUnitIds.camp)
      error("Tried to assign a camp unit that was the incorrect type")
      return
    if (this._campFlag != null)
      this._campFlag.remove()
    this._campFlag = flag

  // --------------------------------------------------------------------------
  override function getCenter() returns vec2
    if (_campFlag != null)
      return _campFlag.getPos()
    else if (_owner.getHero() != null)
      return _owner.getHero().getPos()
    return ZERO2

  // --------------------------------------------------------------------------
  override function getIsSecure() returns bool
    return this._isSecure

  // --------------------------------------------------------------------------
  override function setIsSecure(bool isSecure)
    if (this._isSecure == isSecure)
      return
    this._isSecure = isSecure
    if (isSecure)
      onCampSecure()
    else
      onCampNotSecure()

  // --------------------------------------------------------------------------
  override function getUnit(unit u) returns ICampUnitMetadata
    return this._unitToCampUnitMap.get(u)

  // --------------------------------------------------------------------------
  override function addUnit(ICampUnitMetadata campUnit) returns ICampUnitMetadata
    this._units.add(campUnit)
    this._unitToCampUnitMap.put(campUnit.getUnit(), campUnit)
    //Log.info("Added unit {0} to {1} camp".format(campUnit.getUnit().getName(), _owner.getName()))
    return campUnit

  // --------------------------------------------------------------------------
  override function removeUnit(ICampUnitMetadata campUnit) returns bool
    this._units.remove(campUnit)
    this._unitToCampUnitMap.remove(campUnit.getUnit())
    //Log.info("Removed unit {0} from {1} camp".format(campUnit.getUnit().getName(), _owner.getName()))
    return true

  // --------------------------------------------------------------------------
  override function getUnits() returns LinkedList<ICampUnitMetadata>
    let campUnits = new LinkedList<ICampUnitMetadata>()
    for campUnit in this._units
      campUnits.add(campUnit)
    return campUnits

  // --------------------------------------------------------------------------
  protected function onCampSecure()
    _campFlag.removeAbility(TlsAbilityIds.campIsNotSecure)
    _campFlag.addAbility(TlsAbilityIds.campIsSecure)
    displayMessageToPlayer(_owner.getPlayer(), "Your camp is |cffffcc00Secure|r")

  // --------------------------------------------------------------------------
  protected function onCampNotSecure()
    _campFlag.removeAbility(TlsAbilityIds.campIsSecure)
    _campFlag.addAbility(TlsAbilityIds.campIsNotSecure)
    displayMessageToPlayer(_owner.getPlayer(), "Your camp is |cffffcc00Not Secure|r")

// ============================================================================
public class CampUnit extends UnitMetadata implements ICampUnitMetadata
  protected ICamp _camp

  // --------------------------------------------------------------------------
  construct(ICamp camp, unit u)
    super(u)
    ErrorIf.argumentIsNull(camp, "camp")
    this._camp = camp

  // --------------------------------------------------------------------------
  ondestroy
    if (this._camp != null)
      this._camp.removeUnit(this)
      this._camp = null

  // --------------------------------------------------------------------------
  @inline
  override function getCamp() returns ICamp
    return this._camp
    
  // --------------------------------------------------------------------------
  @inline
  override function getUnit() returns unit
    return super.getUnit()
    
  // --------------------------------------------------------------------------
  @inline
  override function setUnit(unit u)
    super.setUnit(u)
    
  // --------------------------------------------------------------------------
  @inline
  override function addComponent(IComponent component) returns IComponent
    return super.addComponent(component)
    
  // --------------------------------------------------------------------------
  @inline
  override function removeComponent(IComponent component) returns bool
    return super.removeComponent(component)

  // --------------------------------------------------------------------------
  @inline
  override function getComponent(Type componentType) returns IComponent
    return super.getComponent(componentType)

// ============================================================================
public class CampStructure extends CampUnit implements ICampStructure

  // --------------------------------------------------------------------------
  construct(ICamp camp, unit u)
    super(camp, u)

  // --------------------------------------------------------------------------
  @inline
  override function getCamp() returns ICamp
    return super.getCamp()

  // --------------------------------------------------------------------------
  @inline
  override function getUnit() returns unit
    return super.getUnit()

  // --------------------------------------------------------------------------
  @inline
  override function setUnit(unit u)
    super.setUnit(u)
    
  // --------------------------------------------------------------------------
  @inline
  override function addComponent(IComponent component) returns IComponent
    return super.addComponent(component)
    
  // --------------------------------------------------------------------------
  @inline
  override function removeComponent(IComponent component) returns bool
    return super.removeComponent(component)

  // --------------------------------------------------------------------------
  @inline
  override function getComponent(Type componentType) returns IComponent
    return super.getComponent(componentType)

// ============================================================================
public class Survivor extends CampUnit
  construct(ICamp camp, unit u)
    super(camp, u)

// ============================================================================
public function ICamp.getSurvivor(unit structure) returns ICampSurvivor
  return this.getUnit(structure) castTo ICampSurvivor

// ============================================================================
public function ICamp.getStructure(unit structure) returns ICampStructure
  return this.getUnit(structure) castTo ICampStructure

// ============================================================================
function isCampStructure(unit u) returns bool
  // let unitTypeId = u.getTypeId()
  if (not u.isStructure())
    return false
  // if (unitTypeId == TlsUnitIds.campFlag)
  //   return false
  return true

// ============================================================================
function isCampSurvivor(unit u) returns bool
  let unitTypeId = u.getTypeId()
  if (u.isStructure())
    return false
  if (unitTypeId == TlsUnitIds.camp or
      unitTypeId == TlsUnitIds.hero or
      unitTypeId == TlsUnitIds.host or
      unitTypeId == TlsUnitIds.skills)
    return false
  return true

// ============================================================================
init
  let campUnitFactory = new CampUnitFactory()
  registerUnitMetadataFactory(campUnitFactory)