package Headquarters
import RegisterEvents
import GroupUtils
import TlsUnitIds
import UnitIndexer

// ============================================================================
public function updateNoHeadquartersUpgrade(player _player)
  let enabled = not playerHasCampHeadquarters(_player)
  SetPlayerUnitAvailableBJ(TlsUnitIds.headquarters1, enabled, _player)

// ============================================================================
function playerHasCampHeadquarters(player _player) returns bool
  var hasCampHeadquarters = false
  let tempGroup = getGroup()
  for _unit in tempGroup
    if (_unit.isCampHeadquarters())
      hasCampHeadquarters = true
      break
  tempGroup.release()
  return hasCampHeadquarters 

// ============================================================================
function onUnitIndexedDeindexed()
  let _unit = getIndexingUnit()
  if (_unit.isCampHeadquarters())
    updateNoHeadquartersUpgrade(_unit.getOwner())

// ============================================================================
function onUnitChangedOwner()
  let _unit = GetTriggerUnit()
  if (_unit.isCampHeadquarters())
    updateNoHeadquartersUpgrade(GetChangingUnitPrevOwner())
    updateNoHeadquartersUpgrade(_unit.getOwner())

// ============================================================================
init
  onUnitIndex(function onUnitIndexedDeindexed)
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_CHANGE_OWNER, function onUnitChangedOwner)

