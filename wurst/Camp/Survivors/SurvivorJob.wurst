package SurvivorJob
import RegisterEvents
import GameConstants
import UnitExtensions

function onUnitPickedUpItem()
  let itm = GetManipulatedItem()
  let u = GetManipulatingUnit()

  if (u.getTypeId() != UNIT_ID_SURVIVOR)
    return

  int replaceUnitId

  switch (itm.getTypeId())
    case ITEM_ID_HUNTING_RIFLE
      replaceUnitId = UNIT_ID_SURVIVOR_MARKSMAN
    case ITEM_ID_BASIC_TOOLS
      replaceUnitId = UNIT_ID_SURVIVOR_BUILDER
    case ITEM_ID_MEDICAL_KIT
      replaceUnitId = UNIT_ID_SURVIVOR_MEDIC
    default
      return

  let wasSelected = u.isSelectedByOwner()
  let replacedUnit = ReplaceUnitBJ(u, replaceUnitId, bj_UNIT_STATE_METHOD_RELATIVE)
  UnitAddItemSwapped(itm, replacedUnit)
  itm.setDropOnDeath(true)
  if (wasSelected)
    SelectUnitAddForPlayer(replacedUnit, replacedUnit.getOwner())

function onUnitDroppedItem()
  let itm = GetManipulatedItem()
  let u = GetManipulatingUnit()
  let itemTypeId = itm.getTypeId()
  let unitTypeId = u.getTypeId()

  bool isValid =  (unitTypeId == UNIT_ID_SURVIVOR_BUILDER and itemTypeId == ITEM_ID_BASIC_TOOLS) or
                  (unitTypeId == UNIT_ID_SURVIVOR_MARKSMAN and itemTypeId == ITEM_ID_HUNTING_RIFLE) or
                  (unitTypeId == UNIT_ID_SURVIVOR_MEDIC and itemTypeId == ITEM_ID_MEDICAL_KIT)

  if (not isValid)
    return
   
  let wasSelected = u.isSelectedByOwner()
  let replacedUnit = ReplaceUnitBJ(u, UNIT_ID_SURVIVOR, bj_UNIT_STATE_METHOD_RELATIVE)
  if (wasSelected)
    SelectUnitAddForPlayer(replacedUnit, replacedUnit.getOwner())

init
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_PICKUP_ITEM, function onUnitPickedUpItem)
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_DROP_ITEM, function onUnitDroppedItem)