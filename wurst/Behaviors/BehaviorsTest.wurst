package BehaviorsTest
import TlsUnitIds
import Behaviors
import BehaviorLibrary
import HashMap

class SetRandomTargetPosition extends BehaviorBase
  override function onUpdate(IBehaviorTreeContext context) returns BehaviorState

    let targetXKey = StringHashBJ("MoveToPoint::TargetX")
    let targetYKey = StringHashBJ("MoveToPoint::TargetY")

    let t = context.getTable()
    t.saveReal(targetXKey, GetRandomReal(-1024.0, 1024.0))
    t.saveReal(targetYKey, GetRandomReal(-1024.0, 1024.0))
    return BehaviorState.SUCCESS

function delayedStart()
  let u = CreateUnit(Player(0), TlsUnitIds.survivor, 0, 0, 0)

  let context = new BehaviorTreeContext(u)
  let tree = new BehaviorTree(context)

  let targetXKey = StringHashBJ("MoveToPoint::TargetX")
  let targetYKey = StringHashBJ("MoveToPoint::TargetY")
  let move = new MoveToPoint(targetXKey, targetYKey)

  let setVar = new SetRandomTargetPosition()
  
  let succeeder = new Succeeder()
  succeeder.setChild(move)

  let sequence = new Sequence()  
  sequence.addChild(setVar)
  sequence.addChild(succeeder)

  let repeater = new Repeater()
  repeater.setChild(sequence)

  tree.setRoot(repeater)

  tree.start(BehaviorTreeExecutionPriority.HIGH)

init

  var t = CreateTimer()
  t.start(0.1, function delayedStart)

  