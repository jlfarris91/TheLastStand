package TLSMenuBar
import LoadToc
import ClosureTimers
import HumanPlayers
import HashMap

import TLSMenuButton
import AlliancesButton
import DiscordLinkButton
import CameraButton
import HiveLinkButton
import StackPanelLayout
import TLSFrame
import TLSMenuToggleButton

public constant int MENU_ITEM_HIVE = 0
public constant int MENU_ITEM_DISCORD = 1
public constant int MENU_ITEM_ALLIANCES = 2
public constant int MENU_ITEM_CAMERA = 3
public constant int MENU_ITEM_COUNT = 4

HashMap<player, TLSMenuBar> g_playerToMenuMap = new HashMap<player, TLSMenuBar>()

// ============================================================================
public class TLSMenuBar extends TLSFrame
  TLSMenuButton array[MENU_ITEM_COUNT] m_items

  // --------------------------------------------------------------------------
  construct()
    super(createFrame("FRAME", "TLSMenuBar", GAME_UI, "", 0))

  // --------------------------------------------------------------------------
  override function initialize()
    super.initialize()
    let _player = getPlayer()
    m_items[MENU_ITEM_HIVE] = new HiveToggleButton(this)..setParent(getFrameHandle())..setPlayer(_player)..show()
    m_items[MENU_ITEM_DISCORD] = new DiscordToggleButton(this)..setParent(getFrameHandle())..setPlayer(_player)..show()
    m_items[MENU_ITEM_ALLIANCES] = new AlliancesToggleButton(this)..setParent(getFrameHandle())..setPlayer(_player)..show()
    m_items[MENU_ITEM_CAMERA] = new CameraToggleButton(this)..setParent(getFrameHandle())..setPlayer(_player)..show()
    invalidateLayout()

  // --------------------------------------------------------------------------
  override function setPlayer(player _player)
    super.setPlayer(_player)
    for i = 0 to MENU_ITEM_COUNT - 1
      if (m_items[i] != null)
        m_items[i].setPlayer(_player)

  // --------------------------------------------------------------------------
  override function show()
    super.show()
    for i = 0 to MENU_ITEM_COUNT - 1
      if (m_items[i] != null)
        m_items[i].show()

  // --------------------------------------------------------------------------
  override function hide()
    super.hide()
    for i = 0 to MENU_ITEM_COUNT - 1
      if (m_items[i] != null)
        m_items[i].hide()

  // --------------------------------------------------------------------------
  function uncheckOthers(TLSMenuButton menuButton)
    for i = 0 to MENU_ITEM_COUNT - 1
      let otherMenuToggleButton = m_items[i] castTo TLSMenuToggleButton
      if (otherMenuToggleButton != null and otherMenuToggleButton != menuButton)
        otherMenuToggleButton.setIsChecked(false)

  // --------------------------------------------------------------------------
  function invalidateLayout()

    let panel = getFrameHandle()
      ..setAbsPoint(FRAMEPOINT_TOPRIGHT, 0.34, 0.575)
      ..setAbsPoint(FRAMEPOINT_BOTTOMLEFT, 0.1, 0.54)
      // ..setSize(0.24, 0.035)

    let layout = new StackPanelLayout()
    layout.setSpacing(vec2(0.002, 0.0))
    layout.setOrientation(LayoutOrientation.LEFT)
    layout.layoutBegin()

    for i = 0 to MENU_ITEM_COUNT - 1
      if (m_items[i] != null)
        layout.layoutNextFrame(m_items[i].getFrameHandle(), panel)

    layout.layoutEnd()
    destroy layout

// ============================================================================
function createMenusForPlayers()
  for _player in g_PlayingHumanPlayers
    let menu = new TLSMenuBar()
      ..setPlayer(_player)
      ..show()
    g_playerToMenuMap.put(_player, menu)

// ============================================================================
public function getTLSMenu(player p) returns TLSMenuBar
  return g_playerToMenuMap.get(p)

// ============================================================================
init
  ensureTocIsLoaded()
  nullTimer(() -> createMenusForPlayers())