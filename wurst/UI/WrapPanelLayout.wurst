package WrapPanelLayout
import StackPanelLayout

// ============================================================================
public class WrapPanelLayout
  private vec2 m_spacing = ZERO2
  private vec2 m_margin = ZERO2
  private vec2 m_layoutPos = ZERO2
  private LayoutOrientation m_orientation
  private vec2 m_size

  // --------------------------------------------------------------------------
  function setOrientation(LayoutOrientation value)
    m_orientation = value

  // --------------------------------------------------------------------------
  function getOrientation() returns LayoutOrientation
    return m_orientation

  // --------------------------------------------------------------------------
  function setSpacing(vec2 value)
    m_spacing = value

  // --------------------------------------------------------------------------
  function getSpacing() returns vec2
    return m_spacing

  // --------------------------------------------------------------------------
  function setMargin(vec2 value)
    m_margin = value

  // --------------------------------------------------------------------------
  function getMargin() returns vec2
    return m_margin

  // --------------------------------------------------------------------------
  function getWidth() returns real
    return m_size.x + m_margin.x * 2.0

  // --------------------------------------------------------------------------
  function getHeight() returns real
    return m_size.y + m_margin.y * 2.0

  // --------------------------------------------------------------------------
  function layoutBegin()
    m_layoutPos = ZERO2
    m_size = ZERO2

  // --------------------------------------------------------------------------
  function layoutNextFrame(framehandle frame, framehandle panel)
    
    frame.clearAllPoints()

    switch (m_orientation)
      case UP | DOWN
        m_layoutPos.x += m_layoutPos.x == 0 ? 0 : m_spacing.x
      case RIGHT | LEFT
        skip

    switch (m_orientation)
      case DOWN
        frame.setPoint(FRAMEPOINT_TOPLEFT, panel, FRAMEPOINT_TOPLEFT, m_margin.x + m_layoutPos.x, -m_margin.y - m_layoutPos.y)
      case UP
        frame.setPoint(FRAMEPOINT_BOTTOMLEFT, panel, FRAMEPOINT_BOTTOMLEFT, m_margin.x + m_layoutPos.x, m_margin.y + m_layoutPos.y)
      case RIGHT | LEFT
        skip

    switch (m_orientation)
      case DOWN | UP
        if (m_layoutPos.x + frame.getWidth() > panel.getWidth() - m_margin.x)
          m_layoutPos.x = 0
          m_layoutPos.y += m_size.y + (m_layoutPos.y == 0 ? 0 : m_spacing.y)
        else
          m_layoutPos.x += frame.getWidth()
        m_size.x = m_layoutPos.x
        m_size.y = max(m_size.y, frame.getHeight())
      case RIGHT | LEFT
        skip

  // --------------------------------------------------------------------------
  function layoutEnd()
    m_layoutPos = ZERO2