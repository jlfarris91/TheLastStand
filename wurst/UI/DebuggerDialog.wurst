package DebuggerDialog
import ClosureKeyPresses
import Frame
import Layout
import TabPanel
import ClosureTimers
import Window
import Icons

public DebuggerWindow g_debuggerDialogFrame

// ============================================================================
public class DebuggerDialog
  
  // --------------------------------------------------------------------------
  static function initialize()
    if (g_debuggerDialogFrame == null)
      g_debuggerDialogFrame = new DebuggerWindow()
      ..setWindowArea(0, anchoredRectr(FRAMEPOINT_TOPLEFT, vec2(0.46, 0.54), vec2(0.34, 0.14)))
      ..setWindowArea(1, anchoredRectr(FRAMEPOINT_TOPLEFT, vec2(0.46, 0.54), vec2(0.34, REAL_MAX)))
      ..setWindowArea(2, anchoredRectr(FRAMEPOINT_TOP, vec2(0.4, 0.52), vec2(0.36, 0.35)))
      ..setTitle("Debugger")
      ..setIcon(Icons.bTNHumanBuild)
      ..showOnly(localPlayer)

      onKeyRelease(localPlayer, OSKEY_APPS) () ->
        DebuggerDialog.toggleVisibility()

      onKeyRelease(localPlayer, OSKEY_ESCAPE) () ->
        DebuggerDialog.hide()

  // --------------------------------------------------------------------------
  static function registerFrame(string id, Frame contentFrame)
    if (g_debuggerDialogFrame != null)
      g_debuggerDialogFrame.registerFrame(id, id, contentFrame)

  // --------------------------------------------------------------------------
  static function registerFrame(string id, string buttonText, Frame contentFrame)
    if (g_debuggerDialogFrame != null)
      g_debuggerDialogFrame.registerFrame(id, buttonText, contentFrame)

  // --------------------------------------------------------------------------
  static function registerFrame(string id, TabPanelButton buttonFrame, Frame contentFrame)
    if (g_debuggerDialogFrame != null)
      g_debuggerDialogFrame.registerFrame(id, buttonFrame, contentFrame)

  // --------------------------------------------------------------------------
  static function setSelectedFrame(string id)
    if (g_debuggerDialogFrame != null)
      g_debuggerDialogFrame.setSelectedFrame(id)

  // --------------------------------------------------------------------------
  static function getSelectedFrame() returns string
    return g_debuggerDialogFrame != null ? g_debuggerDialogFrame.getSelectedFrame() : ""

  // --------------------------------------------------------------------------
  static function getIsVisible() returns bool
    return g_debuggerDialogFrame != null and g_debuggerDialogFrame.isVisible()

  // --------------------------------------------------------------------------
  static function show()
    if (g_debuggerDialogFrame != null)
      g_debuggerDialogFrame.show()

  // --------------------------------------------------------------------------
  static function hide()
    if (g_debuggerDialogFrame != null)
      g_debuggerDialogFrame.hide()

  // --------------------------------------------------------------------------
  static function toggleVisibility()
    if (g_debuggerDialogFrame != null)
      if (getIsVisible())
        hide()
      else
        show()

// ============================================================================
class DebuggerWindow extends Window
  private TabPanel m_tabPanel

  // --------------------------------------------------------------------------
  construct()
  
    setTitle("Debugger")
    setIcon(Icons.bTNHumanBuild)

    m_tabPanel = new TabPanel("TP")
    ..setMargin(thickness(0, 0, 0, 0.02))
    addChild(m_tabPanel)

  // --------------------------------------------------------------------------
  function registerFrame(string id, Frame contentFrame)
    m_tabPanel.addContent(id, id, contentFrame)

  // --------------------------------------------------------------------------
  function registerFrame(string id, string buttonText, Frame contentFrame)
    m_tabPanel.addContent(id, buttonText, contentFrame)

  // --------------------------------------------------------------------------
  function registerFrame(string id, TabPanelButton buttonFrame, Frame contentFrame)
    m_tabPanel.addContent(id, buttonFrame, contentFrame)

  // --------------------------------------------------------------------------
  function setSelectedFrame(string id)
    m_tabPanel.setSelectedContentId(id)

  // --------------------------------------------------------------------------
  function getSelectedFrame() returns string
    return m_tabPanel.getSelectedContentId()

// ============================================================================
init
  nullTimer(() -> DebuggerDialog.initialize())