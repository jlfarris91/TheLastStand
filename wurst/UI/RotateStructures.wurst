package RotateStructures
import ClosureTimers
import SyncKeyPresses
import TechAvailabilityGroup
import HashMap
import Math
import Unit_WoodFence
import GateIds
import HumanPlayers

TechAvailabilityGroup array[4] g_rotatedStructuresAvailability
HashMap<player, int> g_rotatedStructuresIndex = new HashMap<player, int>()
int array g_playerStructureRotationIndex

// ============================================================================
public function rotateStructures(player p)
  g_playerStructureRotationIndex[p.getId()] = wrap(g_playerStructureRotationIndex[p.getId()] + 1, 0, 3)
  updateTechAvailability(p)

// ============================================================================
function updateTechAvailability(player p)
  for i = 0 to 3
    g_rotatedStructuresAvailability[i].setEnabled(p, i == g_playerStructureRotationIndex[p.getId()])

// ============================================================================
init
  g_rotatedStructuresAvailability[0] = new TechAvailabilityGroup()
  ..add(WoodFenceIds.ns)
  ..add(Gate1Ids.ns_build_closed)

  g_rotatedStructuresAvailability[1] = new TechAvailabilityGroup()
  ..add(WoodFenceIds.nesw)
  ..add(Gate1Ids.nesw_build_closed)

  g_rotatedStructuresAvailability[2] = new TechAvailabilityGroup()
  ..add(WoodFenceIds.ew)
  ..add(Gate1Ids.ew_build_closed)

  g_rotatedStructuresAvailability[3] = new TechAvailabilityGroup()
  ..add(WoodFenceIds.nwse)
  ..add(Gate1Ids.nwse_build_closed)

  nullTimer() () ->
    for p in g_PlayingHumanPlayers
      updateTechAvailability(p)

  onSyncedKeyRelease(OSKEY_R, OSKEY_META.CTRL) (p) ->
    rotateStructures(p)
    if (p == localPlayer)
      ForceUIKey("B")