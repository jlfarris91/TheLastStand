package SurvivorJobFrame
import TLSFrame
import ClosureFrames
import SurvivorJobs
import SurvivorJobData
import TlsItemDefinition
import StandardTooltip
import ColorUtility
import FramehandleExtensions
import initlater SurvivorJobPanel
import LinkedList
import PlayerExtensions
import SurvivorComponent

enum EnabledState
  DISABLED
  ENABLED
  ACTIVE

public constant string UNKNOWN_JOB_ICON_PATH = "ui\\widgets\\escmenu\\human\\quest-unknown.dds"

// ============================================================================
function controlsUnit(player sourcePlayer, unit targetUnit) returns bool
  let targetUnitOwner = targetUnit.getOwner()
  return sourcePlayer == targetUnitOwner or
         GetPlayerAlliance(sourcePlayer, targetUnitOwner, ALLIANCE_SHARED_ADVANCED_CONTROL)

// ============================================================================
function orderSelectedUnitsToAssignJob(player owner, SurvivorJobDefinition jobDef)
  
  let survivorJobPanel = getSurvivorJobPanel(owner)
  if (survivorJobPanel != null)
    survivorJobPanel.batchUpdates(true)

  let selectedUnits = owner.getSelectedUnits()

  for u in selectedUnits
  //{
    if (controlsUnit(owner, u))
    //{
      let survivor = u.getSurvivorComponent()
      if (survivor != null and survivor.canChangeJob(jobDef))
      //{
        let jobData = u.getSurvivorJobData(jobDef)
        if (jobData != null and (jobDef == SurvivorJobs.none or jobData.getIsEnabled()))
          survivor.changeJobs(jobDef)
      //}
    //}
  //}

  destroy selectedUnits

  if (survivorJobPanel != null)
    survivorJobPanel.batchUpdates(false)

// ============================================================================
function orderSelectedUnitsToUnequipJobDefItem(player owner, SurvivorJobDefinition jobDef)
  
  let survivorJobPanel = getSurvivorJobPanel(owner)
  if (survivorJobPanel != null)
    survivorJobPanel.batchUpdates(true)

  let selectedUnits = owner.getSelectedUnits()

  for u in selectedUnits
  //{
    if (controlsUnit(owner, u))
    //{
      let survivor = u.getSurvivorComponent()
      if (survivor != null)
      //{
        let jobData = u.getSurvivorJobData(jobDef)
        if (jobData != null)
        //{
          if (jobData.getIsEnabled())
            jobData.setIsEnabled(false)
            g_MainItemLibrary.createItemForUnit(u, jobDef.getItemType())
        //}
        if (survivor.canChangeJob(jobDef))
          survivor.changeJobs(SurvivorJobs.none)
      //}
    //}
  //}
 
  destroy selectedUnits

  if (survivorJobPanel != null)
    survivorJobPanel.batchUpdates(false)

// ============================================================================
public class SurvivorJobFrame extends TLSFrame
  private framehandle m_mainButtonIcon
  private framehandle m_itemButton
  private framehandle m_itemButtonIcon
  private framehandle m_levelText
  private framehandle m_activeIcon

  private SurvivorJobDefinition m_jobDef
  private string m_iconPath
  private string m_iconPathDisabled
  private int m_level
  private bool m_levelTextVisible
  private EnabledState m_enabledState
  private bool m_isHovered
  private bool m_isIndeterminate
  private string m_itemIconPath
  private bool m_itemIconVisible
  private string m_jobTitle
  private string m_jobTooltip
  private string m_itemName

  // --------------------------------------------------------------------------
  construct()
    super("SurvivorJobFrame", GAME_UI)

    m_iconPath = UNKNOWN_JOB_ICON_PATH
    m_iconPathDisabled = UNKNOWN_JOB_ICON_PATH
    m_level = 1
    m_enabledState = EnabledState.DISABLED

  // --------------------------------------------------------------------------
  function setJobDef(SurvivorJobDefinition value)
    m_jobDef = value

  // --------------------------------------------------------------------------
  function getJobDef() returns SurvivorJobDefinition
    return m_jobDef

  // --------------------------------------------------------------------------
  function getIconPath() returns string
    return m_iconPath
  
  // --------------------------------------------------------------------------
  function setIconPath(string value)
    if (m_iconPath != value)
      m_iconPath = value
      updateIconFrame()

  // --------------------------------------------------------------------------
  function getIconPathDisabled() returns string
    return m_iconPathDisabled
  
  // --------------------------------------------------------------------------
  function setIconPathDisabled(string value)
    if (m_iconPathDisabled != value)
      m_iconPathDisabled = value
      updateIconFrame()

  // --------------------------------------------------------------------------
  function getItemIconPath() returns string
    return m_itemIconPath
  
  // --------------------------------------------------------------------------
  function setItemIconPath(string value)
    if (m_itemIconPath != value)
      m_itemIconPath = value
      updateItemIconFrame()

  // --------------------------------------------------------------------------
  function getItemIconVisible() returns bool
    return m_itemIconVisible
  
  // --------------------------------------------------------------------------
  function setItemIconVisible(bool value)
    if (m_itemIconVisible != value)
      m_itemIconVisible = value
      updateItemIconFrame()

  // --------------------------------------------------------------------------
  function getLevel() returns int
    return m_level

  // --------------------------------------------------------------------------
  function setLevel(int value)
    if (m_level != value)
      m_level = value
      updateLevelTextFrame()

  // --------------------------------------------------------------------------
  function getIsIndeterminate() returns bool
    return m_isIndeterminate

  // --------------------------------------------------------------------------
  function setIsIndeterminate(bool value)
    if (m_isIndeterminate != value)
      m_isIndeterminate = value
      updateLevelTextFrame()

  // --------------------------------------------------------------------------
  function setEnabledState(EnabledState value)
    if (m_enabledState != value)
      m_enabledState = value
      updateActiveFrame()
      updateIconFrame()
      updateVisibility()
  
  // --------------------------------------------------------------------------
  function getEnabledState() returns EnabledState
    return m_enabledState

  // --------------------------------------------------------------------------
  function setJobTitle(string value)
    m_jobTitle = value

  // --------------------------------------------------------------------------
  function getJobTitle() returns string
    return m_jobTitle

  // --------------------------------------------------------------------------
  function setJobTooltip(string value)
    m_jobTooltip = value

  // --------------------------------------------------------------------------
  function getJobTooltip() returns string
    return m_jobTooltip

  // --------------------------------------------------------------------------
  function setItemName(string value)
    m_itemName = value

  // --------------------------------------------------------------------------
  function getItemName() returns string
    return m_itemName

  // --------------------------------------------------------------------------
  function setLevelTextVisible(bool value)
    if (m_levelTextVisible != value)
      m_levelTextVisible = value
      updateLevelTextFrame()

  // --------------------------------------------------------------------------
  override function initialize()
    super.initialize()

    let mainButton = getFrame("MainButton", 0)..setLevel(3)
    m_mainButtonIcon = getFrame("MainButtonIcon", 0)
    m_activeIcon = getFrame("ActiveIcon", 0)..setLevel(4)
    m_itemButton = getFrame("ItemButton", 0)..setLevel(5)
    m_itemButtonIcon = getFrame("ItemButtonIcon", 0)
    getFrame("LevelBackdrop", 0)..setLevel(5)
    m_levelText = getFrame("LevelText", 0)..setLevel(6)

    mainButton.onMouseEnter() -> 
      m_isHovered = true
      showJobTooltip()
      updateActiveFrame()

    mainButton.onMouseLeave() -> 
      m_isHovered = false
      StandardTooltip.hide(getPlayer())
      updateActiveFrame()

    mainButton.onClick() ->
      orderSelectedUnitsToAssignJob(getPlayer(), m_jobDef)
      mainButton.clearFocus()

    m_itemButton.onMouseEnter() -> 
      showItemTooltip()
      updateActiveFrame()

    m_itemButton.onMouseLeave() ->
      StandardTooltip.hide(getPlayer())
      updateActiveFrame()

    m_itemButton.onClick() ->
      orderSelectedUnitsToUnequipJobDefItem(getPlayer(), m_jobDef)
      m_itemButton.clearFocus()

    updateIconFrame()
    updateLevelTextFrame()
    updateActiveFrame()
    updateItemIconFrame()
    updateVisibility()

  // --------------------------------------------------------------------------
  private function showJobTooltip()
    var title = m_jobTitle

    if (m_enabledState == DISABLED and m_jobDef != SurvivorJobs.none)
      title = "{0} - {1}".format(m_jobTitle, "Requires {0}".format(m_itemName).colorize(Colors.gold))
        
    if (m_enabledState == ENABLED)
      if (m_jobDef != SurvivorJobs.none)
        title = "{0} - {1}".format(m_jobTitle, "Click to Assign Job".colorize(Colors.gold))
      else
        title = "{0} - {1}".format(m_jobTitle, "Click to Unassign Job".colorize(Colors.gold))

    StandardTooltip.show(title, m_jobTooltip, getPlayer())

  // --------------------------------------------------------------------------
  private function showItemTooltip()
    let title = "{0} - {1}".format(m_itemName, "Click to Unequip Item".colorize(Colors.gold))
    let tooltip = "This item enables the {0} job".format(m_jobTitle)
    StandardTooltip.show(title, tooltip, getPlayer())

  // --------------------------------------------------------------------------
  private function updateIconFrame()
    if (m_mainButtonIcon != null)
      m_mainButtonIcon.setTexture(m_enabledState == DISABLED ? m_iconPathDisabled : m_iconPath, 0, true)

  // --------------------------------------------------------------------------
  private function updateItemIconFrame()
    if (m_itemButtonIcon != null)
      m_itemButtonIcon.setTexture(m_itemIconPath, 0, true)
    if (m_itemButton != null)
      m_itemButton.setVisible(m_itemIconVisible)

  // --------------------------------------------------------------------------
  private function updateLevelTextFrame()
    if (m_levelText != null)
      m_levelText.setText(m_isIndeterminate ? "-" : m_level.toString())
      m_levelText.setVisible(m_levelTextVisible)

  // --------------------------------------------------------------------------
  private function updateActiveFrame()
    if (m_activeIcon != null)
      m_activeIcon.setVisible(
        m_enabledState == EnabledState.ACTIVE or 
        (m_enabledState == EnabledState.ENABLED and m_isHovered))
  
  // --------------------------------------------------------------------------
  private function updateVisibility()
    let frame = getFrameHandle()
    let visible = m_enabledState != EnabledState.DISABLED
    if (frame.isVisible() != visible)
      getFrameHandle().setVisible(visible)