package Ability_MilitiaDefend
import TlsAbilityIds
import ObjectIds
import AbilityObjEditing

@compiletime function createAbility()
  new AbilityDefinitionDefend(TlsAbilityIds.militiaDefend)
    ..setHeroAbility(false)
    ..setLevels(1)
    ..setButtonPositionNormalX(2)
    ..setButtonPositionNormalY(2)
    ..setTooltipNormal(1, "Defend")
    ..setTooltipNormalExtended(1, "Activate to have a <{0},DataF1>% chance to reflect Piercing attacks upon the source, and to take only <{0},DataA1,%>% of the damage from attacks that are not reflected. While Defend is active, move speed is reduced by <{0},DataC1,%>%.".format(TlsAbilityIds.militiaDefend.toRawCode()))
    ..setTooltipTurnOff(1, "Stop Defend")
    ..setTooltipTurnOffExtended(1, "Deactivate to move at normal speed, but take regular damage from Piercing attacks.")
    ..presetAttackSpeedFactor((int lvl) -> 0.0)
    ..presetChancetoDeflect((int lvl) -> 30.0)
    ..presetDamageDealt((int lvl) -> 1.0)
    ..presetDamageTaken((int lvl) -> 0.35)
    ..presetDeflectDamageTakenPiercing((int lvl) -> 0.0)
    ..presetDeflectDamageTakenSpells((int lvl) -> 1.0)
    ..presetMagicDamageReduction((int lvl) -> 1.0)
    ..presetMovementSpeedFactor((int lvl) -> 0.3)
    ..setRequirements("")