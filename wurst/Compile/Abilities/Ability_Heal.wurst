package Ability_Heal
import AbilityObjEditing
import TlsAbilityIds
import ColorUtility


public constant int MEDIC_HEAL_MAX_LEVEL = 10
public constant real MEDIC_HEAL_FACTOR_PER_LEVEL = 5

constant real MEDIC_HEAL_START = 10
constant real MEDIC_HEAL_END = 55


function calculateHealFactor(int level) returns real
  return MEDIC_HEAL_START + (MEDIC_HEAL_FACTOR_PER_LEVEL * (level - 1))

// ============================================================================
@compiletime function createAbility()
  new AbilityDefinitionHeal(TlsAbilityIds.heal)
    ..setName("Heal")
    ..setLevels(MEDIC_HEAL_MAX_LEVEL)
    ..setHeroAbility(false)
    ..setAnimationNames("attack")
    ..setMissileArc(0.1)
    ..setMissileArt("Abilities\\Weapons\\DragonHawkMissile\\DragonHawkMissile.mdl")
    ..setMissileHomingEnabled(true)
    ..setMissileSpeed(1900)
    ..setRequiredLevel(1)
    ..setLevelSkipRequirement(-1)
    ..presetManaCost((int lvl) -> 30)
    ..presetHitPointsGained((int lvl) -> calculateHealFactor(lvl))
    ..presetTooltipNormal((int lvl) -> "Heal [|cffffcc00Level {0}|r]".format(lvl.toString()))
    ..presetTooltipNormalExtended((int lvl) -> "Heal for {0}.".format(
      (calculateHealFactor(lvl)).round().toString(),
      "This ability is automatically upgraded when the hero levels up.".colorize(Colors.gold)))
    ..presetCastRange((int lvl) -> 90.0)
    ..setCastingTime(1, 1)
    ..presetTargetsAllowed((int lvl) -> "air,friend,ground,invulnerable,neutral,nonancient,organic,self,vulnerable")
 