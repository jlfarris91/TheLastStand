package Ability_MilitiaTaunt
import AbilityObjEditing
import TlsAbilityIds
import Icons
import ObjectIds
import UnitComponent
import RegisterEvents
import Orders
import UndeadTargetingComponent

group g_tauntingUnits = CreateGroup()

@compiletime function createAbility()
  new AbilityDefinitionTaunt(TlsAbilityIds.militiaTaunt)
    ..setHeroAbility(false)
    ..setLevels(1)
    ..presetCooldown((int lvl) -> 5)
    ..setButtonPositionNormalX(1)
    ..setButtonPositionNormalY(2)
    ..setIconNormal(Icons.bTNTaunt)
    ..setIconResearch(Icons.bTNTaunt)
    ..setTooltipNormal(1, "Taunt")
    ..setTooltipNormalExtended(1, "The closest <{0},DataA1> enemies are forced to attack this unit.".format(TlsAbilityIds.militiaTaunt.toRawCode()))

// ============================================================================
function onSpellCast()
  if (GetSpellAbilityId() == TlsAbilityIds.militiaTaunt)
    g_tauntingUnits.addUnit(GetSpellAbilityUnit())
    Log.debug("taunting: " + g_tauntingUnits.size().toString())

// ============================================================================
function onSpellFinishOrEndCast()
  if (GetSpellAbilityId() == TlsAbilityIds.militiaTaunt)
    g_tauntingUnits.removeUnit(GetSpellAbilityUnit())
    Log.debug("taunting: " + g_tauntingUnits.size().toString())

// ============================================================================
function onUnitDeath()
  let dyingUnit = GetDyingUnit()
  if (dyingUnit.hasAbility(TlsAbilityIds.militiaTaunt))
    g_tauntingUnits.removeUnit(dyingUnit)
    Log.debug("taunting: " + g_tauntingUnits.size().toString())

// ============================================================================
function onUnitIssuedTargetOrder()
  let orderId = GetIssuedOrderId()
  if (orderId != OrderIds.attack)
    return

  let targetUnit = GetOrderTargetUnit()
  if (not targetUnit.isAlive() or not g_tauntingUnits.contains(targetUnit))
    return

  let issuedUnit = GetOrderedUnit()
  let utc = issuedUnit.getUndeadTargetingComponent()
  if (utc == null or not utc.getEnabled())
    return

  Log.debug("{0} ordered to target {1}".format(issuedUnit.getName(), targetUnit.getName()))

  utc.setTargetUnit(targetUnit)

// ============================================================================
init

  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_CAST, function onSpellCast)
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_FINISH, function onSpellFinishOrEndCast)
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_ENDCAST, function onSpellFinishOrEndCast)
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER, function onUnitIssuedTargetOrder)
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_DEATH, function onUnitDeath)