package TlsBuildingDefinition
import TlsUnitDefinition
import UnitDefinitionInitModule
import TargetsAllowedUtils
import LinkedList

// EHHHH
import initlater Reputation
import GameConstants

// ============================================================================
public interface ITlsBuildingDefinition extends ITlsUnitDefinition

// ============================================================================
public class TlsBuildingDefinition extends BuildingDefinition implements ITlsBuildingDefinition
  private string m_name
  private string m_iconGameInterface
  private string m_iconGameInterfaceDisabled
  private string m_modelFile
  private ArmorType m_armorType
  
  private int m_attack1DamageBase
  private int m_attack1DamageNumberofDice
  private int m_attack1DamageSidesperDie
  private int m_attack1Range
  private AttackType m_attack1AttackType
  private real m_attack1CooldownTime
  private string m_attack1TargetsAllowed
  private LinkedList<string> m_attack1Targets = new LinkedList<string>()
  
  private int m_attack2DamageBase
  private int m_attack2DamageNumberofDice
  private int m_attack2DamageSidesperDie
  private int m_attack2Range
  private AttackType m_attack2AttackType
  private real m_attack2CooldownTime
  private string m_attack2TargetsAllowed
  private LinkedList<string> m_attack2Targets = new LinkedList<string>()

  private int m_attacksEnabled
  private int m_hitPointsMaximumBase
  private int m_manaMaximum
  private string m_tooltipBasic
  private string m_tooltipExtended
  private int m_goldCost
  private int m_lumberCost
  private int m_recycleGoldRewarded
  private int m_recycleLumberRewarded
  private int m_foodProduced

  public use UnitDefinitionInitModule

  // --------------------------------------------------------------------------
  construct(int newId, int baseId)
    super(newId, baseId)
    init_all()
    if (not compiletime)
      registerUnitDefinition(newId, this)

  // --------------------------------------------------------------------------
  override function getNewId() returns int
    return super.getNewId()

  // --------------------------------------------------------------------------
  override function getBaseId() returns int
    return super.getBaseId()

  // --------------------------------------------------------------------------
  override function setName(string value)
    super.setName(value)
    m_name = value

  // --------------------------------------------------------------------------    
  override function getName() returns string
    return m_name

  // --------------------------------------------------------------------------
  override function setIconGameInterface(string value)
    super.setIconGameInterface(value)
    m_iconGameInterface = value

  // --------------------------------------------------------------------------    
  override function getIconGameInterface() returns string
    return m_iconGameInterface

  // --------------------------------------------------------------------------
  function setIconGameInterfaceDisabled(string value)
    m_iconGameInterfaceDisabled = value

  // --------------------------------------------------------------------------    
  override function getIconGameInterfaceDisabled() returns string
    return m_iconGameInterfaceDisabled

  // --------------------------------------------------------------------------
  override function setModelFile(string value)
    super.setModelFile(value)
    m_modelFile = value

  // --------------------------------------------------------------------------    
  override function getModelFile() returns string
    return m_modelFile

  // --------------------------------------------------------------------------
  override function setArmorType(ArmorType armorType)
    super.setArmorType(armorType)
    m_armorType = armorType

  // --------------------------------------------------------------------------    
  override function getArmorType() returns ArmorType
    return m_armorType

  // --------------------------------------------------------------------------
  override function setAttack1DamageBase(int value)
    super.setAttack1DamageBase(value)
    m_attack1DamageBase = value

  // --------------------------------------------------------------------------
  override function getAttack1DamageBase() returns int
    return m_attack1DamageBase

  // --------------------------------------------------------------------------
  override function setAttack1DamageNumberofDice(int value)
    super.setAttack1DamageNumberofDice(value)
    m_attack1DamageNumberofDice = value

  // --------------------------------------------------------------------------
  override function getAttack1DamageNumberofDice() returns int
    return m_attack1DamageNumberofDice

  // --------------------------------------------------------------------------
  override function setAttack1DamageSidesperDie(int value)
    super.setAttack1DamageSidesperDie(value)
    m_attack1DamageSidesperDie = value

  // --------------------------------------------------------------------------
  override function getAttack1DamageSidesperDie() returns int
    return m_attack1DamageSidesperDie
  
  // --------------------------------------------------------------------------
  override function setAttack1Range(int value)
    super.setAttack1Range(value)
    m_attack1Range = value
  
  // --------------------------------------------------------------------------
  override function getAttack1Range() returns int
    return m_attack1Range

  // --------------------------------------------------------------------------
  override function setAttack1TargetsAllowed(string data)
    super.setAttack1TargetsAllowed(data)
    m_attack1TargetsAllowed = data
    m_attack1Targets.clear()
    getTargetsAllowedPretty(data, m_attack1Targets)

  // --------------------------------------------------------------------------
  override function getAttack1TargetsAllowed() returns string
    return m_attack1TargetsAllowed

  // --------------------------------------------------------------------------
  override function getAttack1Targets() returns LinkedList<string>
    return m_attack1Targets
    
  // --------------------------------------------------------------------------
  override function setAttack1AttackType(AttackType value)
    super.setAttack1AttackType(value)
    m_attack1AttackType = value

  // --------------------------------------------------------------------------
  override function getAttack1AttackType() returns AttackType
    return m_attack1AttackType

  // --------------------------------------------------------------------------
  override function setAttack1CooldownTime(real value)
    super.setAttack1CooldownTime(value)
    m_attack1CooldownTime = value
  
  // --------------------------------------------------------------------------
  override function getAttack1CooldownTime() returns real
    return m_attack1CooldownTime

  // --------------------------------------------------------------------------
  override function setAttack2DamageBase(int value)
    super.setAttack2DamageBase(value)
    m_attack2DamageBase = value

  // --------------------------------------------------------------------------
  override function getAttack2DamageBase() returns int
    return m_attack2DamageBase

  // --------------------------------------------------------------------------
  override function setAttack2DamageNumberofDice(int value)
    super.setAttack2DamageNumberofDice(value)
    m_attack2DamageNumberofDice = value

  // --------------------------------------------------------------------------
  override function getAttack2DamageNumberofDice() returns int
    return m_attack2DamageNumberofDice

  // --------------------------------------------------------------------------
  override function setAttack2DamageSidesperDie(int value)
    super.setAttack2DamageSidesperDie(value)
    m_attack2DamageSidesperDie = value

  // --------------------------------------------------------------------------
  override function getAttack2DamageSidesperDie() returns int
    return m_attack2DamageSidesperDie
  
  // --------------------------------------------------------------------------
  override function setAttack2Range(int value)
    super.setAttack2Range(value)
    m_attack2Range = value
  
  // --------------------------------------------------------------------------
  override function getAttack2Range() returns int
    return m_attack2Range

  // --------------------------------------------------------------------------
  override function setAttack2TargetsAllowed(string data)
    super.setAttack2TargetsAllowed(data)
    m_attack2TargetsAllowed = data
    m_attack2Targets.clear()
    getTargetsAllowedPretty(data, m_attack2Targets)

  // --------------------------------------------------------------------------
  override function getAttack2TargetsAllowed() returns string
    return m_attack2TargetsAllowed

  // --------------------------------------------------------------------------
  override function getAttack2Targets() returns LinkedList<string>
    return m_attack2Targets
    
  // --------------------------------------------------------------------------
  override function setAttack2AttackType(AttackType value)
    super.setAttack2AttackType(value)
    m_attack2AttackType = value

  // --------------------------------------------------------------------------
  override function getAttack2AttackType() returns AttackType
    return m_attack2AttackType

  // --------------------------------------------------------------------------
  override function setAttack2CooldownTime(real value)
    super.setAttack2CooldownTime(value)
    m_attack2CooldownTime = value
  
  // --------------------------------------------------------------------------
  override function getAttack2CooldownTime() returns real
    return m_attack2CooldownTime

  // --------------------------------------------------------------------------
  override function setAttacksEnabled(int value)
    super.setAttacksEnabled(value)
    m_attacksEnabled = value

  // --------------------------------------------------------------------------
  override function getAttacksEnabled() returns int
    return m_attacksEnabled
  
  // --------------------------------------------------------------------------
  override function setHitPointsMaximumBase(int value)
    super.setHitPointsMaximumBase(value)
    m_hitPointsMaximumBase = value
  
  // --------------------------------------------------------------------------
  override function getHitPointsMaximumBase() returns int
    return m_hitPointsMaximumBase
  
  // --------------------------------------------------------------------------
  override function setManaMaximum(int value)
    super.setManaMaximum(value)
    m_manaMaximum = value
  
  // --------------------------------------------------------------------------
  override function getMaximumMana() returns int
    return m_manaMaximum

  // --------------------------------------------------------------------------
  override function setTooltipBasic(string value)
    super.setTooltipBasic(value)
    m_tooltipBasic = value
  
  // --------------------------------------------------------------------------
  override function getTooltipBasic() returns string
    return m_tooltipBasic

  // --------------------------------------------------------------------------
  override function setTooltipExtended(string value)
    let tooltipExt = addReputationToUnitDefinitionTooltipExtended(getNewId(), value)
    super.setTooltipExtended(tooltipExt)
    m_tooltipExtended = tooltipExt
  
  // --------------------------------------------------------------------------
  override function getTooltipExtended() returns string
    return m_tooltipExtended

  // --------------------------------------------------------------------------
  override function getGoldCost() returns int
    return m_goldCost

  // --------------------------------------------------------------------------
  override function setGoldCost(int value)
    super.setGoldCost(value)
    m_goldCost = value

  // --------------------------------------------------------------------------
  override function getLumberCost() returns int
    return m_lumberCost

  // --------------------------------------------------------------------------
  override function setLumberCost(int value)
    super.setLumberCost(value)
    m_lumberCost = value

  // --------------------------------------------------------------------------
  override function getMaterialCost() returns int
    return getLumberCost()

  // --------------------------------------------------------------------------
  function setMaterialCost(int value)
    setLumberCost(value)
    
  // --------------------------------------------------------------------------
  function setRecycleGoldRewarded(int value)
    m_recycleGoldRewarded = value
    
  // --------------------------------------------------------------------------
  override function getRecycleGoldRewarded() returns int
    return m_recycleGoldRewarded
    
  // --------------------------------------------------------------------------
  function setRecycleLumberRewarded(int value)
    m_recycleLumberRewarded = value
  
  // --------------------------------------------------------------------------
  override function getRecycleLumberRewarded() returns int
    return m_recycleLumberRewarded

  // --------------------------------------------------------------------------
  override function setFoodProduced(int value)
    super.setFoodProduced(value)
    m_foodProduced = value
  
  // --------------------------------------------------------------------------
  function getFoodProduced() returns int
    return m_foodProduced

// ============================================================================
public function TlsBuildingDefinition.setCommonBuildingProperties()
  this.setCommonBuildingProperties(null)

// ============================================================================
public function TlsBuildingDefinition.setCommonBuildingProperties(TlsBuildingDefinition upgradedFrom)
  this.setRepairGoldCost(R2I(this.getGoldCost() * BUILDING_REPAIR_GOLD_SCALAR))
  this.setRepairLumberCost(R2I(this.getLumberCost() * BUILDING_REPAIR_LUMBER_SCALAR))

  var recycleCost = this.getGoldCost()
  if (upgradedFrom != null)
    recycleCost += upgradedFrom.getRecycleGoldRewarded()
  this.setRecycleGoldRewarded(recycleCost)

  var lumberCost = this.getLumberCost()
  if (upgradedFrom != null)
    lumberCost += upgradedFrom.getRecycleLumberRewarded()
  this.setRecycleLumberRewarded(lumberCost)