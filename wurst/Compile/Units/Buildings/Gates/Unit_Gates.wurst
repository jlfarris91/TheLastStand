package Unit_Gates
import GateCardinalUnitDefinition
import CardinalUnitDefinition
import Unit_GateCommon
import GateIds
import ObjectIds
import TlsUnitIds
import GateHelpers

constant real SCALE_DIAGONAL = 0.36       // How large the diagonal gate model is
constant real SCALE_HORIZONTAL = 0.38     // How large the horizonta/vertical gate model is

// Gate 1
// These values should match Wood Fence
constant int GATE1_GOLD_COST = 0
constant int GATE1_LUMBER_COST = 150
constant int GATE1_HEALTH = 500
constant int GATE1_ARMOR = 1
constant int GATE1_REPAIR_TIME = 10
constant int GATE1_RECYCLE_GOLD_COST = GATE1_GOLD_COST
constant int GATE1_RECYCLE_LUMBER_COST = GATE1_LUMBER_COST

// Gate 2
// These values should match Stone Wall
constant int GATE2_GOLD_COST = 0
constant int GATE2_LUMBER_COST = 300
constant int GATE2_HEALTH = 1200
constant int GATE2_ARMOR = 2
constant int GATE2_REPAIR_TIME = 15
constant int GATE2_RECYCLE_GOLD_COST = GATE1_RECYCLE_LUMBER_COST + GATE2_GOLD_COST
constant int GATE2_RECYCLE_LUMBER_COST = GATE1_RECYCLE_LUMBER_COST + GATE2_LUMBER_COST

// Gate 3
// These values should match Metal Wall
constant int GATE3_GOLD_COST = 10
constant int GATE3_LUMBER_COST = 900
constant int GATE3_HEALTH = 4000
constant int GATE3_ARMOR = 3
constant int GATE3_REPAIR_TIME = 20
constant int GATE3_RECYCLE_GOLD_COST = GATE2_RECYCLE_LUMBER_COST + GATE3_GOLD_COST
constant int GATE3_RECYCLE_LUMBER_COST = GATE2_RECYCLE_LUMBER_COST + GATE3_LUMBER_COST

// Gate 4
constant int GATE4_GOLD_COST = 20
constant int GATE4_LUMBER_COST = 1660
constant int GATE4_HEALTH = 8000
constant int GATE4_ARMOR = 4
constant int GATE4_REPAIR_TIME = 25
constant int GATE4_RECYCLE_GOLD_COST = GATE3_RECYCLE_LUMBER_COST + GATE4_GOLD_COST
constant int GATE4_RECYCLE_LUMBER_COST = GATE3_RECYCLE_LUMBER_COST + GATE4_LUMBER_COST

//=============================================================================
function createGateUnitVariations()

  createGate1UnitVariations(CardinalUnitAngle.EW, "Vertical (EW)", SCALE_HORIZONTAL)
  createGate1UnitVariations(CardinalUnitAngle.NESW, "Diagonal (NE SW)", SCALE_DIAGONAL)
  createGate1UnitVariations(CardinalUnitAngle.NS, "Horizontal (NS)", SCALE_HORIZONTAL)
  createGate1UnitVariations(CardinalUnitAngle.NWSE, "Diagonal (NW SE)", SCALE_DIAGONAL)

  createGate2UnitVariations(CardinalUnitAngle.EW, "Vertical (EW)", SCALE_HORIZONTAL)
  createGate2UnitVariations(CardinalUnitAngle.NESW, "Diagonal (NE SW)", SCALE_DIAGONAL)
  createGate2UnitVariations(CardinalUnitAngle.NS, "Horizontal (NS)", SCALE_HORIZONTAL)
  createGate2UnitVariations(CardinalUnitAngle.NWSE, "Diagonal (NW SE)", SCALE_DIAGONAL)

  createGate3UnitVariations(CardinalUnitAngle.EW, "Vertical (EW)", SCALE_HORIZONTAL)
  createGate3UnitVariations(CardinalUnitAngle.NESW, "Diagonal (NE SW)", SCALE_DIAGONAL)
  createGate3UnitVariations(CardinalUnitAngle.NS, "Horizontal (NS)", SCALE_HORIZONTAL)
  createGate3UnitVariations(CardinalUnitAngle.NWSE, "Diagonal (NW SE)", SCALE_DIAGONAL)

  createGate4UnitVariations(CardinalUnitAngle.EW, "Vertical (EW)", SCALE_HORIZONTAL)
  createGate4UnitVariations(CardinalUnitAngle.NESW, "Diagonal (NE SW)", SCALE_DIAGONAL)
  createGate4UnitVariations(CardinalUnitAngle.NS, "Horizontal (NS)", SCALE_HORIZONTAL)
  createGate4UnitVariations(CardinalUnitAngle.NWSE, "Diagonal (NW SE)", SCALE_DIAGONAL)

//=============================================================================
function createGate1UnitVariations(CardinalUnitAngle angle, string name, real scale)
  
  defineOpenGateUnit(g_gate1Helper, g_gate1Helper.getOpenId(angle), angle, g_gate2Helper)
    ..setScalingValue(scale)
    ..setupGate1Definition()

  defineClosedGateUnit(g_gate1Helper, g_gate1Helper.getClosedId(angle), angle, g_gate2Helper)
    ..setScalingValue(scale)
    ..setupGate1Definition()

  defineBuildGateUnit(g_gate1Helper, g_gate1Helper.getId(angle), angle, g_gate2Helper)
    ..setScalingValue(scale)
    ..setTooltipBasic("Upgrade to Rusty Gate")
    ..setTooltipExtended("|cffffcc00" + name + "|r|nUpgrade to a weak gate that can be opened and closed to allow or prevent access to your camp.")
    ..setGoldCost(GATE1_GOLD_COST)
    ..setLumberCost(GATE1_LUMBER_COST)
    ..setupGate1Definition()

//=============================================================================
function BaseGateDefinition.setupGate1Definition()
  this
    ..setHitPointsMaximumBase(GATE1_HEALTH)
    ..setDefenseBase(GATE1_ARMOR)
    ..setRepairTime(GATE1_REPAIR_TIME)
    ..setRecycleGoldRewarded(GATE1_RECYCLE_GOLD_COST)
    ..setRecycleLumberRewarded(GATE1_RECYCLE_LUMBER_COST)

//=============================================================================
function createGate2UnitVariations(CardinalUnitAngle angle, string name, real scale)

  defineOpenGateUnit(g_gate2Helper, g_gate2Helper.getOpenId(angle), angle, g_gate3Helper)
    ..setScalingValue(scale)
    ..setupGate2Definition()

  defineClosedGateUnit(g_gate2Helper, g_gate2Helper.getClosedId(angle), angle, g_gate3Helper)
    ..setScalingValue(scale)
    ..setupGate2Definition()

  defineBuildGateUnit(g_gate2Helper, g_gate2Helper.getId(angle), angle, g_gate3Helper)
    ..setScalingValue(scale)
    ..setTooltipBasic("Upgrade to Iron Gate")
    ..setTooltipExtended("|cffffcc00" + name + "|r|nUpgrade to a stronger gate that can be opened and closed to allow or prevent access to your camp.")
    ..setGoldCost(GATE2_GOLD_COST)
    ..setLumberCost(GATE2_LUMBER_COST)
    ..setupGate2Definition()

//=============================================================================
function BaseGateDefinition.setupGate2Definition()
  this
    ..setHitPointsMaximumBase(GATE2_HEALTH)
    ..setDefenseBase(GATE2_ARMOR)
    ..setRepairTime(GATE2_REPAIR_TIME)
    ..setRecycleGoldRewarded(GATE2_RECYCLE_GOLD_COST)
    ..setRecycleLumberRewarded(GATE2_RECYCLE_LUMBER_COST)
    ..setRequirements(commaList(TlsUnitIds.headquarters2))

//=============================================================================
function createGate3UnitVariations(CardinalUnitAngle angle, string name, real scale)

  defineOpenGateUnit(g_gate3Helper, g_gate3Helper.getOpenId(angle), angle, g_gate4Helper)
    ..setScalingValue(scale)
    ..setupGate3Definition()

  defineClosedGateUnit(g_gate3Helper, g_gate3Helper.getClosedId(angle), angle, g_gate4Helper)
    ..setScalingValue(scale)
    ..setupGate3Definition()

  defineBuildGateUnit(g_gate3Helper, g_gate3Helper.getId(angle), angle, g_gate4Helper)
    ..setScalingValue(scale)
    ..setTooltipBasic("Upgrade to Oak Gate")
    ..setTooltipExtended("|cffffcc00" + name + "|r|nUpgrade to an even stronger gate that can be opened and closed to allow or prevent access to your camp.")
    ..setGoldCost(GATE3_GOLD_COST)
    ..setLumberCost(GATE3_LUMBER_COST)
    ..setupGate3Definition()

//=============================================================================
function BaseGateDefinition.setupGate3Definition()
  this
    ..setHitPointsMaximumBase(GATE3_HEALTH)
    ..setDefenseBase(GATE3_ARMOR)
    ..setRepairTime(GATE3_REPAIR_TIME)
    ..setRecycleGoldRewarded(GATE3_RECYCLE_GOLD_COST)
    ..setRecycleLumberRewarded(GATE3_RECYCLE_LUMBER_COST)
    ..setRequirements(commaList(TlsUnitIds.headquarters3))

//=============================================================================
function createGate4UnitVariations(CardinalUnitAngle angle, string name, real scale)

  defineOpenGateUnit(g_gate4Helper, g_gate4Helper.getOpenId(angle), angle, null)
    ..setScalingValue(scale)
    ..setupGate4Definition()

  defineClosedGateUnit(g_gate4Helper, g_gate4Helper.getClosedId(angle), angle, null)
    ..setScalingValue(scale)
    ..setupGate4Definition()

  defineBuildGateUnit(g_gate4Helper, g_gate4Helper.getId(angle), angle, null)
    ..setScalingValue(scale)
    ..setName("Decorated Gate")
    ..setTooltipBasic("Upgrade to Decorated Gate")
    ..setTooltipExtended("|cffffcc00" + name + "|r|nUpgrade to the strongest gate that can be opened and closed to allow or prevent access to your camp.")
    ..setGoldCost(GATE4_GOLD_COST)
    ..setLumberCost(GATE4_LUMBER_COST)
    ..setupGate4Definition()

//=============================================================================
function BaseGateDefinition.setupGate4Definition()
  this
    ..setHitPointsMaximumBase(GATE4_HEALTH)
    ..setDefenseBase(GATE4_ARMOR)
    ..setRepairTime(GATE4_REPAIR_TIME)
    ..setRecycleGoldRewarded(GATE4_RECYCLE_GOLD_COST)
    ..setRecycleLumberRewarded(GATE4_RECYCLE_LUMBER_COST)
    ..setRequirements(commaList(TlsUnitIds.headquarters4))

//=============================================================================
init
  createGateUnitVariations()

// ============================================================================
@compiletime
function init_compiletime()
  // Initialize resources needed to craete unit definitions
  init_compiletime_GateHelpers()
  init_compiletime_GateIds()
  // Create the many gate variations
  createGateUnitVariations()