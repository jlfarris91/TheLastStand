package Unit_Wall
import TlsUnitDefinition
import ObjectIdGenerator
import Unit_Gate2

constant int WALL_REPAIR_GOLD_COST = 10
constant int WALL_REPAIR_TIME = 10
constant int WALL_BUILD_TIME = 10
constant int WALL_GOLD_COST = 10
constant int WALL_HEALTH = 500

// ============================================================================
public class WallIds
  static constant int wall_EW = compiletime(UNIT_ID_GEN.next())
  static constant int wall_NESW = compiletime(UNIT_ID_GEN.next())
  static constant int wall_NS = compiletime(UNIT_ID_GEN.next())
  static constant int wall_NWSE = compiletime(UNIT_ID_GEN.next())

// ============================================================================
public class WallDefinition extends BuildingDefinition
  construct(int newId, int angle)
    super(newId, UnitIds.scouttower)
    setName("Wall")
    setShadowTextureBuilding("")
    setButtonPositionX(0)
    setButtonPositionY(0)
    setDeathTimeseconds(0.83)
    setGroundTexture("")
    setSelectionScale(4.0)
    setDeathType(0)
    setCollisionSize(0.0)
    setPlacementRequires("unbuildable,unwalkable")
    setBuildTime(WALL_BUILD_TIME)
    setCanFlee(false)
    setGoldCost(WALL_GOLD_COST)
    setHideMinimapDisplay(true)
    setHitPointsMaximumBase(WALL_HEALTH)
    setLumberCost(0)
    setRepairGoldCost(WALL_REPAIR_GOLD_COST)
    setRepairLumberCost(0)
    setRepairTime(WALL_REPAIR_TIME)
    setSightRadiusDay(400)
    setSightRadiusNight(200)
    setNormalAbilities(commaList(TlsAbilityIds.recycle))
    setRequirements(commaList(TlsUnitIds.campHouse))
    
    this.setIconGameInterface(WallUtility.getWallIcon(angle))
    this.setModelFile(WallUtility.getWallModelPath(angle))
    this.setPathingMap(WallUtility.getWallPathMap(angle))
    
    let gateId = GateUtility.getBuildGateId(angle)
    this.setUpgradesTo(commaList(gateId))

    this.setTooltipBasic("Build Fence")
    this.setTooltipExtended("Build a fence the offers a sturdy protection against intruders.")

// ============================================================================
@compiletime
function createWallUnitVariations()
  let row = 0
  createWallUnitVariation(315, 0, row, "Diagonal (NE SW)")
  createWallUnitVariation(0, 1, row, "Horizontal (NS)")
  createWallUnitVariation(90, 2, row, "Vertical (EW)")
  createWallUnitVariation(45, 3, row, "Diagonal (NW SE)")

// ============================================================================
function createWallUnitVariation(int angle, int buttonPosX, int buttonPosY, string name)
  new WallDefinition(WallUtility.getWallId(angle), angle)
    ..setButtonPositionX(buttonPosX)
    ..setButtonPositionY(buttonPosY)
    ..setTooltipBasic("Build |cffffcc00G|rate")
    ..setTooltipExtended("|cffffcc00" + name + "|r|nBuild a gate that can be opened and closed to allow or prevent access to your camp.")

// ============================================================================
public class WallUtility

  // --------------------------------------------------------------------------
  static function getWallId(int angle) returns int
    switch (angle)
      case 0
        return WallIds.wall_NS
      case 45
        return WallIds.wall_NWSE
      case 90
        return WallIds.wall_EW
      case 315
        return WallIds.wall_NESW
    return -1

  // --------------------------------------------------------------------------
  static function getWallPathMap(int angle) returns string
    switch (angle)
      case 0
        return "Units\\Wall1\\Wall1_0.tga"
      case 45
        return "Units\\Wall1\\Wall1_45.tga"
      case 90
        return "Units\\Wall1\\Wall1_90.tga"
      case 315
        return "Units\\Wall1\\Wall1_135.tga"
    return ""

  // --------------------------------------------------------------------------
  static function getWallModelPath(int angle) returns string
    switch (angle)
      case 0
        return "Units\\Wall1\\Wall1_0.mdx"
      case 45
        return "Units\\Wall1\\Wall1_45.mdx"
      case 90
        return "Units\\Wall1\\Wall1_90.mdx"
      case 315
        return "Units\\Wall1\\Wall1_135.mdx"
    return ""

  // --------------------------------------------------------------------------
  static function getWallIcon(int angle) returns string
    switch (angle)
      case 0
        return "ReplaceableTextures\\CommandButtons\\BTNWall1_0.BLP"
      case 45
        return "ReplaceableTextures\\CommandButtons\\BTNWall1_45.BLP"
      case 90
        return "ReplaceableTextures\\CommandButtons\\BTNWall1_90.BLP"
      case 315
        return "ReplaceableTextures\\CommandButtons\\BTNWall1_135.BLP"
    return ""