package Unit_Walls
import ObjectIdGenerator
import TlsBuildingDefinition
import GameConstants
import TlsUpgradeIds
import HashList
import CardinalUnitDefinition
import BuildingUndeadTarget

// ============================================================================
// 
// Wood Fence
//
// ============================================================================

public constant int WOOD_FENCE_GOLD_COST = 0
public constant int WOOD_FENCE_LUMBER_COST = 100
public constant int WOOD_FENCE_REPAIR_GOLD_COST = R2I(WOOD_FENCE_GOLD_COST * BUILDING_REPAIR_GOLD_SCALAR)
public constant int WOOD_FENCE_REPAIR_LUMBER_COST = R2I(WOOD_FENCE_LUMBER_COST * BUILDING_REPAIR_LUMBER_SCALAR)
public constant int WOOD_FENCE_RECYCLE_GOLD_COST = WOOD_FENCE_GOLD_COST
public constant int WOOD_FENCE_RECYCLE_LUMBER_COST = WOOD_FENCE_LUMBER_COST

public constant int WOOD_FENCE_REPAIR_TIME = 10
public constant int WOOD_FENCE_BUILD_TIME = 10
public constant int WOOD_FENCE_HEALTH = 625
public constant int WOOD_FENCE_ARMOR = 1

public CardinalUnitDefinitionHelper g_woodFenceHelper = new CardinalUnitDefinitionHelper()
public HashList<int> g_woodFenceIds = new HashList<int>()

// ============================================================================
public class WoodFenceIds
  static constant int ew = compiletime(UNIT_ID_GEN.next())
  static constant int nesw = compiletime(UNIT_ID_GEN.next())
  static constant int ns = compiletime(UNIT_ID_GEN.next())
  static constant int nwse = compiletime(UNIT_ID_GEN.next())

// ============================================================================
class WoodFenceDefinition extends TlsBuildingDefinition
  construct(int newId)
    super(newId, UnitIds.scouttower)
    this.makeBuildingUndeadTarget()
    setName("Wood Fence")
    setShadowTextureBuilding("")
    setButtonPositionX(1)
    setButtonPositionY(0)
    setDeathTimeseconds(0.83)
    setGroundTexture("")
    setSelectionScale(4.0)
    setDeathType(DeathType.CannotRaiseDoesNotDecay)
    setArmorType(ArmorType.Fortified)
    setCollisionSize(0.0)
    setPlacementRequires("unbuildable,unwalkable")
    setBuildTime(WOOD_FENCE_BUILD_TIME)
    setCanFlee(false)
    
    setGoldCost(WOOD_FENCE_GOLD_COST)
    setLumberCost(WOOD_FENCE_LUMBER_COST)
    setRepairGoldCost(WOOD_FENCE_REPAIR_GOLD_COST)
    setRepairLumberCost(WOOD_FENCE_REPAIR_LUMBER_COST)
    setRecycleGoldRewarded(WOOD_FENCE_RECYCLE_GOLD_COST)
    setRecycleLumberRewarded(WOOD_FENCE_RECYCLE_LUMBER_COST)
    setDefenseBase(WOOD_FENCE_ARMOR)
    setDefenseUpgradeBonus(2)

    setHideMinimapDisplay(true)
    setHitPointsMaximumBase(WOOD_FENCE_HEALTH)
    setRepairTime(WOOD_FENCE_REPAIR_TIME)
    setSightRadiusDay(STRUCTURE_LARGE_SIGHT_RANGE_DAY)
    setSightRadiusNight(STRUCTURE_LARGE_SIGHT_RANGE_NIGHT)
    setNormalAbilities(commaList(TlsAbilityIds.recycle))
    setRequirements(commaList(TlsUnitIds.obelisk1))
    setUpgradesUsed(commaList(TlsUpgradeIds.campDefense))

    setHotkey("F")

    setTooltipBasic("Build Wood Fence")
    setTooltipExtended("Build a wood fence the offers a sturdy protection against intruders.")

// ============================================================================
public function unit.isWoodFence() returns bool
  return g_woodFenceIds.has(this.getTypeId())

// ============================================================================
//
// Stone Wall
//
// ============================================================================

public constant int STONE_WALL_GOLD_COST = 0
public constant int STONE_WALL_LUMBER_COST = 450
public constant int STONE_WALL_REPAIR_GOLD_COST = R2I(STONE_WALL_GOLD_COST * BUILDING_REPAIR_GOLD_SCALAR)
public constant int STONE_WALL_REPAIR_LUMBER_COST = R2I(STONE_WALL_LUMBER_COST * BUILDING_REPAIR_LUMBER_SCALAR)
public constant int STONE_WALL_RECYCLE_GOLD_COST = WOOD_FENCE_RECYCLE_GOLD_COST + STONE_WALL_GOLD_COST
public constant int STONE_WALL_RECYCLE_LUMBER_COST = WOOD_FENCE_RECYCLE_LUMBER_COST + STONE_WALL_LUMBER_COST

public constant int STONE_WALL_REPAIR_TIME = 15
public constant int STONE_WALL_BUILD_TIME = 10
public constant int STONE_WALL_HEALTH = 1250
public constant int STONE_WALL_ARMOR = 2
public constant real STONE_WALL_SCALE_DIAGONAL = 0.60
public constant real STONE_WALL_SCALE_HORIZONTAL = 0.65

public CardinalUnitDefinitionHelper g_stoneWallHelper = new CardinalUnitDefinitionHelper()
public HashList<int> g_stoneWallIds = new HashList<int>()

// ============================================================================
public class StoneWallIds
  static constant int ew = compiletime(UNIT_ID_GEN.next())
  static constant int nesw = compiletime(UNIT_ID_GEN.next())
  static constant int ns = compiletime(UNIT_ID_GEN.next())
  static constant int nwse = compiletime(UNIT_ID_GEN.next())

// ============================================================================
class StoneWallDefinition extends TlsBuildingDefinition
  construct(int newId)
    super(newId, UnitIds.scouttower)
    this.makeBuildingUndeadTarget()
    setName("Stone Wall")
    setShadowTextureBuilding("")
    setButtonPositionX(0)
    setButtonPositionY(0)
    setDeathTimeseconds(0.83)
    setGroundTexture("")
    setSelectionScale(4.0)
    setDeathType(DeathType.CannotRaiseDoesNotDecay)
    setArmorType(ArmorType.Fortified)
    setCollisionSize(0.0)
    setPlacementRequires("unbuildable,unwalkable")
    setBuildTime(STONE_WALL_BUILD_TIME)
    setCanFlee(false)
    setHideMinimapDisplay(true)
    setHitPointsMaximumBase(STONE_WALL_HEALTH)
    setDefenseBase(STONE_WALL_ARMOR)
    setDefenseUpgradeBonus(2)

    setGoldCost(STONE_WALL_GOLD_COST)
    setLumberCost(STONE_WALL_LUMBER_COST)
    setRepairGoldCost(STONE_WALL_REPAIR_GOLD_COST)
    setRepairLumberCost(STONE_WALL_REPAIR_LUMBER_COST)
    setRecycleGoldRewarded(STONE_WALL_RECYCLE_GOLD_COST)
    setRecycleLumberRewarded(STONE_WALL_RECYCLE_LUMBER_COST)

    setRepairTime(STONE_WALL_REPAIR_TIME)
    setSightRadiusDay(STRUCTURE_LARGE_SIGHT_RANGE_DAY)
    setSightRadiusNight(STRUCTURE_LARGE_SIGHT_RANGE_NIGHT)
    setNormalAbilities(commaList(TlsAbilityIds.recycle))
    setRequirements(commaList(TlsUnitIds.workbench))
    setUpgradesUsed(commaList(TlsUpgradeIds.campDefense))

    setTooltipBasic("Build Fence")
    setTooltipExtended("Upgrade to a strong stone wall.")

// ============================================================================
//
// Brick Walls
//
// ============================================================================

public constant int BRICK_WALL_GOLD_COST = 3
public constant int BRICK_WALL_LUMBER_COST = 900
public constant int BRICK_WALL_REPAIR_GOLD_COST = R2I(BRICK_WALL_GOLD_COST * BUILDING_REPAIR_GOLD_SCALAR)
public constant int BRICK_WALL_REPAIR_LUMBER_COST = R2I(BRICK_WALL_LUMBER_COST * BUILDING_REPAIR_LUMBER_SCALAR)
public constant int BRICK_WALL_RECYCLE_GOLD_COST = STONE_WALL_RECYCLE_GOLD_COST + BRICK_WALL_GOLD_COST
public constant int BRICK_WALL_RECYCLE_LUMBER_COST = STONE_WALL_RECYCLE_LUMBER_COST + BRICK_WALL_LUMBER_COST

public constant int BRICK_WALL_REPAIR_TIME = 20
public constant int BRICK_WALL_BUILD_TIME = 10
public constant int BRICK_WALL_HEALTH = 2500
public constant int BRICK_WALL_ARMOR = 3
public constant real BRICK_WALL_SCALE_DIAGONAL = 0.60
public constant real BRICK_WALL_SCALE_HORIZONTAL = 0.65

public CardinalUnitDefinitionHelper g_brickWallHelper = new CardinalUnitDefinitionHelper()
public HashList<int> g_brickWallIds = new HashList<int>()

// ============================================================================
public class BrickWallIds
  static constant int ew = compiletime(UNIT_ID_GEN.next())
  static constant int nesw = compiletime(UNIT_ID_GEN.next())
  static constant int ns = compiletime(UNIT_ID_GEN.next())
  static constant int nwse = compiletime(UNIT_ID_GEN.next())
    
// ============================================================================
class BrickWallDefinition extends TlsBuildingDefinition
  construct(int newId)
    super(newId, UnitIds.scouttower)
    this.makeBuildingUndeadTarget()
    setName("Brick Wall")
    setShadowTextureBuilding("")
    setButtonPositionX(0)
    setButtonPositionY(0)
    setDeathTimeseconds(0.83)
    setGroundTexture("")
    setSelectionScale(4.0)
    setDeathType(DeathType.CannotRaiseDoesNotDecay)
    setArmorType(ArmorType.Fortified)
    setCollisionSize(0.0)
    setPlacementRequires("unbuildable,unwalkable")
    setBuildTime(BRICK_WALL_BUILD_TIME)
    setCanFlee(false)
    setHideMinimapDisplay(true)
    setHitPointsMaximumBase(BRICK_WALL_HEALTH)
    setDefenseBase(BRICK_WALL_ARMOR)
    setDefenseUpgradeBonus(2)
    
    setTintingColorRed(255)
    setTintingColorGreen(100)
    setTintingColorBlue(100)

    setGoldCost(BRICK_WALL_GOLD_COST)
    setLumberCost(BRICK_WALL_LUMBER_COST)
    setRepairGoldCost(BRICK_WALL_REPAIR_GOLD_COST)
    setRepairLumberCost(BRICK_WALL_REPAIR_LUMBER_COST)
    setRecycleGoldRewarded(BRICK_WALL_RECYCLE_GOLD_COST)
    setRecycleLumberRewarded(BRICK_WALL_RECYCLE_LUMBER_COST)

    setRepairTime(BRICK_WALL_REPAIR_TIME)
    setSightRadiusDay(STRUCTURE_LARGE_SIGHT_RANGE_DAY)
    setSightRadiusNight(STRUCTURE_LARGE_SIGHT_RANGE_NIGHT)
    setNormalAbilities(commaList(TlsAbilityIds.recycle))
    setRequirements(commaList(""))
    setUpgradesUsed(commaList(TlsUpgradeIds.campDefense))

    setTooltipBasic("Build Brick Wall")
    setTooltipExtended("Upgrade to a strong wall made of brick and cement.")


// ============================================================================
//
// Metal Walls
//
// ============================================================================

public constant int METAL_WALL_GOLD_COST = 5
public constant int METAL_WALL_LUMBER_COST = 1800
public constant int METAL_WALL_REPAIR_GOLD_COST = R2I(METAL_WALL_GOLD_COST * BUILDING_REPAIR_GOLD_SCALAR)
public constant int METAL_WALL_REPAIR_LUMBER_COST = R2I(METAL_WALL_LUMBER_COST * BUILDING_REPAIR_LUMBER_SCALAR)
public constant int METAL_WALL_RECYCLE_GOLD_COST = BRICK_WALL_RECYCLE_GOLD_COST + METAL_WALL_GOLD_COST
public constant int METAL_WALL_RECYCLE_LUMBER_COST = BRICK_WALL_RECYCLE_LUMBER_COST + METAL_WALL_LUMBER_COST

public constant int METAL_WALL_REPAIR_TIME = 25
public constant int METAL_WALL_BUILD_TIME = 10
public constant int METAL_WALL_HEALTH = 5000
public constant int METAL_WALL_ARMOR = 4
public constant real METAL_WALL_SCALE_DIAGONAL = 0.60
public constant real METAL_WALL_SCALE_HORIZONTAL = 0.65

public CardinalUnitDefinitionHelper g_metalWallHelper = new CardinalUnitDefinitionHelper()
public HashList<int> g_metalWallIds = new HashList<int>()

// ============================================================================
public class MetalWallIds
  static constant int ew = compiletime(UNIT_ID_GEN.next())
  static constant int nesw = compiletime(UNIT_ID_GEN.next())
  static constant int ns = compiletime(UNIT_ID_GEN.next())
  static constant int nwse = compiletime(UNIT_ID_GEN.next())

// ============================================================================
class MetalWallDefinition extends TlsBuildingDefinition
  construct(int newId)
    super(newId, UnitIds.scouttower)
    this.makeBuildingUndeadTarget()
    setName("Iron Wall")
    setShadowTextureBuilding("")
    setButtonPositionX(0)
    setButtonPositionY(0)
    setDeathTimeseconds(0.83)
    setGroundTexture("")
    setSelectionScale(4.0)
    setDeathType(DeathType.CannotRaiseDoesNotDecay)
    setArmorType(ArmorType.Fortified)
    setCollisionSize(0.0)
    setPlacementRequires("unbuildable,unwalkable")
    setBuildTime(METAL_WALL_BUILD_TIME)
    setCanFlee(false)
    setDefenseBase(METAL_WALL_ARMOR)
    setDefenseUpgradeBonus(2)

    setTintingColorRed(255)
    setTintingColorGreen(200)
    setTintingColorBlue(200)

    setGoldCost(METAL_WALL_GOLD_COST)
    setLumberCost(METAL_WALL_LUMBER_COST)
    setRepairGoldCost(METAL_WALL_REPAIR_GOLD_COST)
    setRepairLumberCost(METAL_WALL_REPAIR_LUMBER_COST)
    setRecycleGoldRewarded(METAL_WALL_RECYCLE_GOLD_COST)
    setRecycleLumberRewarded(METAL_WALL_RECYCLE_LUMBER_COST)

    setHideMinimapDisplay(true)
    setHitPointsMaximumBase(METAL_WALL_HEALTH)
    setRepairTime(METAL_WALL_REPAIR_TIME)
    setSightRadiusDay(STRUCTURE_LARGE_SIGHT_RANGE_DAY)
    setSightRadiusNight(STRUCTURE_LARGE_SIGHT_RANGE_NIGHT)
    setNormalAbilities(commaList(TlsAbilityIds.recycle))
    setRequirements(commaList(TlsUnitIds.obelisk1))
    setUpgradesUsed(commaList(TlsUpgradeIds.campDefense))
    setUpgradesTo("")

    setTooltipBasic("Build Fence")
    setTooltipExtended("Upgrade to a strong metal wall.")

// ============================================================================
function initialize()

  g_woodFenceIds
  ..add(WoodFenceIds.ew)
  ..add(WoodFenceIds.nesw)
  ..add(WoodFenceIds.ns)
  ..add(WoodFenceIds.nwse)

  g_woodFenceHelper.setId(CardinalUnitAngle.NS, WoodFenceIds.ns)
  g_woodFenceHelper.setId(CardinalUnitAngle.NWSE, WoodFenceIds.nwse)
  g_woodFenceHelper.setId(CardinalUnitAngle.EW, WoodFenceIds.ew)
  g_woodFenceHelper.setId(CardinalUnitAngle.NESW, WoodFenceIds.nesw)
  g_woodFenceHelper.setPathMap(CardinalUnitAngle.NS, "Units\\Wall1\\Wall1_0.tga")
  g_woodFenceHelper.setPathMap(CardinalUnitAngle.NWSE, "Units\\Wall1\\Wall1_45.tga")
  g_woodFenceHelper.setPathMap(CardinalUnitAngle.EW, "Units\\Wall1\\Wall1_90.tga")
  g_woodFenceHelper.setPathMap(CardinalUnitAngle.NESW, "Units\\Wall1\\Wall1_135.tga")
  g_woodFenceHelper.setModelPath(CardinalUnitAngle.NS, "Units\\Wall1\\Wall1_0.mdx")
  g_woodFenceHelper.setModelPath(CardinalUnitAngle.NWSE, "Units\\Wall1\\Wall1_45.mdx")
  g_woodFenceHelper.setModelPath(CardinalUnitAngle.EW, "Units\\Wall1\\Wall1_90.mdx")
  g_woodFenceHelper.setModelPath(CardinalUnitAngle.NESW, "Units\\Wall1\\Wall1_135.mdx")
  g_woodFenceHelper.setIconPath(CardinalUnitAngle.NS, "ReplaceableTextures\\CommandButtons\\BTNWall1_0.BLP")
  g_woodFenceHelper.setIconPath(CardinalUnitAngle.NWSE, "ReplaceableTextures\\CommandButtons\\BTNWall1_45.BLP")
  g_woodFenceHelper.setIconPath(CardinalUnitAngle.EW, "ReplaceableTextures\\CommandButtons\\BTNWall1_90.BLP")
  g_woodFenceHelper.setIconPath(CardinalUnitAngle.NESW, "ReplaceableTextures\\CommandButtons\\BTNWall1_135.BLP")

  g_stoneWallIds
  ..add(StoneWallIds.ew)
  ..add(StoneWallIds.nesw)
  ..add(StoneWallIds.ns)
  ..add(StoneWallIds.nwse)

  g_stoneWallHelper.setId(CardinalUnitAngle.NS, StoneWallIds.ns)
  g_stoneWallHelper.setId(CardinalUnitAngle.NWSE, StoneWallIds.nwse)
  g_stoneWallHelper.setId(CardinalUnitAngle.EW, StoneWallIds.ew)
  g_stoneWallHelper.setId(CardinalUnitAngle.NESW, StoneWallIds.nesw)
  g_stoneWallHelper.setPathMap(CardinalUnitAngle.NS, "Units\\Wall1\\Wall1_0.tga")
  g_stoneWallHelper.setPathMap(CardinalUnitAngle.NWSE, "Units\\Wall1\\Wall1_45.tga")
  g_stoneWallHelper.setPathMap(CardinalUnitAngle.EW, "Units\\Wall1\\Wall1_90.tga")
  g_stoneWallHelper.setPathMap(CardinalUnitAngle.NESW, "Units\\Wall1\\Wall1_135.tga")
  g_stoneWallHelper.setModelPath(CardinalUnitAngle.NS, "Doodads\\LordaeronSummer\\Terrain\\StoneWall0\\StoneWall02.mdl")
  g_stoneWallHelper.setModelPath(CardinalUnitAngle.NWSE, "Doodads\\LordaeronSummer\\Terrain\\StoneWall135\\StoneWall1352.mdl")
  g_stoneWallHelper.setModelPath(CardinalUnitAngle.EW, "Doodads\\LordaeronSummer\\Terrain\\StoneWall90\\StoneWall902.mdl")
  g_stoneWallHelper.setModelPath(CardinalUnitAngle.NESW, "Doodads\\LordaeronSummer\\Terrain\\StoneWall45\\StoneWall452.mdl")
  g_stoneWallHelper.setIconPath(CardinalUnitAngle.NS, "ReplaceableTextures\\CommandButtons\\BTNWall1_0.BLP")
  g_stoneWallHelper.setIconPath(CardinalUnitAngle.NWSE, "ReplaceableTextures\\CommandButtons\\BTNWall1_45.BLP")
  g_stoneWallHelper.setIconPath(CardinalUnitAngle.EW, "ReplaceableTextures\\CommandButtons\\BTNWall1_90.BLP")
  g_stoneWallHelper.setIconPath(CardinalUnitAngle.NESW, "ReplaceableTextures\\CommandButtons\\BTNWall1_135.BLP")
  
  g_brickWallIds
  ..add(BrickWallIds.ew)
  ..add(BrickWallIds.nesw)
  ..add(BrickWallIds.ns)
  ..add(BrickWallIds.nwse)

  g_brickWallHelper.setId(CardinalUnitAngle.NS, BrickWallIds.ns)
  g_brickWallHelper.setId(CardinalUnitAngle.NWSE, BrickWallIds.nwse)
  g_brickWallHelper.setId(CardinalUnitAngle.EW, BrickWallIds.ew)
  g_brickWallHelper.setId(CardinalUnitAngle.NESW, BrickWallIds.nesw)
  g_brickWallHelper.setPathMap(CardinalUnitAngle.NS, "Units\\Wall1\\Wall1_0.tga")
  g_brickWallHelper.setPathMap(CardinalUnitAngle.NWSE, "Units\\Wall1\\Wall1_45.tga")
  g_brickWallHelper.setPathMap(CardinalUnitAngle.EW, "Units\\Wall1\\Wall1_90.tga")
  g_brickWallHelper.setPathMap(CardinalUnitAngle.NESW, "Units\\Wall1\\Wall1_135.tga")
  g_brickWallHelper.setModelPath(CardinalUnitAngle.NS, "Doodads\\Ruins\\Terrain\\RuinsWall0\\RuinsWall02.mdl")
  g_brickWallHelper.setModelPath(CardinalUnitAngle.NWSE, "Doodads\\Ruins\\Terrain\\RuinsWall135\\RuinsWall1352.mdl")
  g_brickWallHelper.setModelPath(CardinalUnitAngle.EW, "Doodads\\Ruins\\Terrain\\RuinsWall90\\RuinsWall902.mdl")
  g_brickWallHelper.setModelPath(CardinalUnitAngle.NESW, "Doodads\\Ruins\\Terrain\\RuinsWall45\\RuinsWall452.mdl")
  g_brickWallHelper.setIconPath(CardinalUnitAngle.NS, "ReplaceableTextures\\CommandButtons\\BTNWall1_0.BLP")
  g_brickWallHelper.setIconPath(CardinalUnitAngle.NWSE, "ReplaceableTextures\\CommandButtons\\BTNWall1_45.BLP")
  g_brickWallHelper.setIconPath(CardinalUnitAngle.EW, "ReplaceableTextures\\CommandButtons\\BTNWall1_90.BLP")
  g_brickWallHelper.setIconPath(CardinalUnitAngle.NESW, "ReplaceableTextures\\CommandButtons\\BTNWall1_135.BLP")

  g_metalWallIds
  ..add(MetalWallIds.ew)
  ..add(MetalWallIds.nesw)
  ..add(MetalWallIds.ns)
  ..add(MetalWallIds.nwse)

  g_metalWallHelper.setId(CardinalUnitAngle.NS, MetalWallIds.ns)
  g_metalWallHelper.setId(CardinalUnitAngle.NWSE, MetalWallIds.nwse)
  g_metalWallHelper.setId(CardinalUnitAngle.EW, MetalWallIds.ew)
  g_metalWallHelper.setId(CardinalUnitAngle.NESW, MetalWallIds.nesw)
  g_metalWallHelper.setPathMap(CardinalUnitAngle.NS, "Units\\Wall1\\Wall1_0.tga")
  g_metalWallHelper.setPathMap(CardinalUnitAngle.NWSE, "Units\\Wall1\\Wall1_45.tga")
  g_metalWallHelper.setPathMap(CardinalUnitAngle.EW, "Units\\Wall1\\Wall1_90.tga")
  g_metalWallHelper.setPathMap(CardinalUnitAngle.NESW, "Units\\Wall1\\Wall1_135.tga")
  g_metalWallHelper.setModelPath(CardinalUnitAngle.NS, "Doodads\\Icecrown\\Terrain\\IceCrownWall0\\IceCrownWall02.mdl")
  g_metalWallHelper.setModelPath(CardinalUnitAngle.NWSE, "Doodads\\Icecrown\\Terrain\\IceCrownWall135\\IceCrownWall1352.mdl")
  g_metalWallHelper.setModelPath(CardinalUnitAngle.EW, "Doodads\\Icecrown\\Terrain\\IceCrownWall90\\IceCrownWall902.mdl")
  g_metalWallHelper.setModelPath(CardinalUnitAngle.NESW, "Doodads\\Icecrown\\Terrain\\IceCrownWall45\\IceCrownWall452.mdl")
  g_metalWallHelper.setIconPath(CardinalUnitAngle.NS, "ReplaceableTextures\\CommandButtons\\BTNWall1_0.BLP")
  g_metalWallHelper.setIconPath(CardinalUnitAngle.NWSE, "ReplaceableTextures\\CommandButtons\\BTNWall1_45.BLP")
  g_metalWallHelper.setIconPath(CardinalUnitAngle.EW, "ReplaceableTextures\\CommandButtons\\BTNWall1_90.BLP")
  g_metalWallHelper.setIconPath(CardinalUnitAngle.NESW, "ReplaceableTextures\\CommandButtons\\BTNWall1_135.BLP")

// ============================================================================
function createWallUnitVariations()

  // Wood Fence
  createWoodFenceUnitVariation(CardinalUnitAngle.EW, 1, 1, "Vertical (EW)")
  createWoodFenceUnitVariation(CardinalUnitAngle.NESW, 1, 1, "Diagonal (NE SW)")
  createWoodFenceUnitVariation(CardinalUnitAngle.NS, 1, 1, "Horizontal (NS)")
  createWoodFenceUnitVariation(CardinalUnitAngle.NWSE, 1, 1, "Diagonal (NW SE)")

  // Stone Wall
  createStoneWallUnitVariation(CardinalUnitAngle.EW, 0, 2, "Vertical (EW)", STONE_WALL_SCALE_HORIZONTAL)
  createStoneWallUnitVariation(CardinalUnitAngle.NESW, 0, 2, "Diagonal (NE SW)", STONE_WALL_SCALE_DIAGONAL)
  createStoneWallUnitVariation(CardinalUnitAngle.NS, 0, 2, "Horizontal (NS)", STONE_WALL_SCALE_HORIZONTAL)
  createStoneWallUnitVariation(CardinalUnitAngle.NWSE, 0, 2, "Diagonal (NW SE)", STONE_WALL_SCALE_DIAGONAL)
  
  // Brick Wall
  createBrickWallUnitVariation(CardinalUnitAngle.EW, 0, 2, "Vertical (EW)", BRICK_WALL_SCALE_HORIZONTAL)
  createBrickWallUnitVariation(CardinalUnitAngle.NESW, 0, 2, "Diagonal (NE SW)", BRICK_WALL_SCALE_DIAGONAL)
  createBrickWallUnitVariation(CardinalUnitAngle.NS, 0, 2, "Horizontal (NS)", BRICK_WALL_SCALE_HORIZONTAL)
  createBrickWallUnitVariation(CardinalUnitAngle.NWSE, 0, 2, "Diagonal (NW SE)", BRICK_WALL_SCALE_DIAGONAL)
  
  // Metal Wall
  createMetalWallUnitVariation(CardinalUnitAngle.EW, 0, 2, "Vertical (EW)", METAL_WALL_SCALE_HORIZONTAL)
  createMetalWallUnitVariation(CardinalUnitAngle.NESW, 0, 2, "Diagonal (NE SW)", METAL_WALL_SCALE_DIAGONAL)
  createMetalWallUnitVariation(CardinalUnitAngle.NS, 0, 2, "Horizontal (NS)", METAL_WALL_SCALE_HORIZONTAL)
  createMetalWallUnitVariation(CardinalUnitAngle.NWSE, 0, 2, "Diagonal (NW SE)", METAL_WALL_SCALE_DIAGONAL)

// ============================================================================
function createWoodFenceUnitVariation(CardinalUnitAngle angle, int buttonPosX, int buttonPosY, string name) returns WoodFenceDefinition
  let def = new WoodFenceDefinition(g_woodFenceHelper.getId(angle))
    ..setNameEditorSuffix(name + "(Wall Level 1)")
    ..setButtonPositionX(buttonPosX)
    ..setButtonPositionY(buttonPosY)
    ..setTooltipBasic("Build Wood Fence")
    ..setTooltipExtendedRotatable("|cffffcc00" + name + "|r|nBuild a wood fence the offers a sturdy protection against intruders.")    
    ..setIconGameInterface(g_woodFenceHelper.getIconPath(angle))
    ..setModelFile(g_woodFenceHelper.getModelPath(angle))
    ..setPathingMap(g_woodFenceHelper.getPathMap(angle))
    
  let stoneWallId = g_stoneWallHelper.getId(angle)
  // let gateId = g_gate1Helper.getId(angle)
  def.setUpgradesTo(commaList(stoneWallId))

  return def

// ============================================================================
function createStoneWallUnitVariation(CardinalUnitAngle angle, int buttonPosX, int buttonPosY, string name, real scale) returns StoneWallDefinition
  let def = new StoneWallDefinition(g_stoneWallHelper.getId(angle))
    ..setNameEditorSuffix(name + " (Wall Level 2)")
    ..setButtonPositionX(buttonPosX)
    ..setButtonPositionY(buttonPosY)
    ..setTooltipBasic("Upgrade to Stone Wall")
    ..setTooltipExtended("|cffffcc00" + name + "|r|nUpgrade to a strong stone wall.")
    ..setScalingValue(scale)
    ..setIconGameInterface(g_stoneWallHelper.getIconPath(angle))
    ..setModelFile(g_stoneWallHelper.getModelPath(angle))
    ..setPathingMap(g_stoneWallHelper.getPathMap(angle))
    
  let brickWallId = g_brickWallHelper.getId(angle)
  // let gateId = g_gate2Helper.getId(angle)
  def.setUpgradesTo(commaList(brickWallId))

  return def

// ============================================================================
function createBrickWallUnitVariation(CardinalUnitAngle angle, int buttonPosX, int buttonPosY, string name, real scale) returns BrickWallDefinition
  let def = new BrickWallDefinition(g_brickWallHelper.getId(angle))
    ..setNameEditorSuffix(name + " (Wall Level 3)")
    ..setButtonPositionX(buttonPosX)
    ..setButtonPositionY(buttonPosY)
    ..setTooltipBasic("Upgrade to Brick Wall")
    ..setTooltipExtended("|cffffcc00" + name + "|r|nUpgrade to an even stronger wall made of brick and cement.")
    ..setScalingValue(scale)
    ..setIconGameInterface(g_brickWallHelper.getIconPath(angle))
    ..setModelFile(g_brickWallHelper.getModelPath(angle))
    ..setPathingMap(g_brickWallHelper.getPathMap(angle))
    
  let metalWallId = g_metalWallHelper.getId(angle)
  // let gateId = g_gate3Helper.getId(angle)
  def.setUpgradesTo(commaList(metalWallId))

  return def

// ============================================================================
function createMetalWallUnitVariation(CardinalUnitAngle angle, int buttonPosX, int buttonPosY, string name, real scale) returns MetalWallDefinition
  let def = new MetalWallDefinition(g_metalWallHelper.getId(angle))
    ..setNameEditorSuffix(name + " (Wall Level 4)")
    ..setButtonPositionX(buttonPosX)
    ..setButtonPositionY(buttonPosY)
    ..setTooltipBasic("Upgrade to Iron Wall")
    ..setTooltipExtended("|cffffcc00" + name + "|r|nUpgrade to a wall infused with iron.")
    ..setScalingValue(scale)
    ..setIconGameInterface(g_metalWallHelper.getIconPath(angle))
    ..setModelFile(g_metalWallHelper.getModelPath(angle))
    ..setPathingMap(g_metalWallHelper.getPathMap(angle))
    ..setUpgradesTo("")

  return def

// ============================================================================
init
  initialize()
  createWallUnitVariations()

// ============================================================================
@compiletime
function init_compiletime()
  g_woodFenceHelper = new CardinalUnitDefinitionHelper()
  g_woodFenceIds = new HashList<int>()

  g_stoneWallHelper = new CardinalUnitDefinitionHelper()
  g_stoneWallIds = new HashList<int>()

  g_brickWallHelper = new CardinalUnitDefinitionHelper()
  g_brickWallIds = new HashList<int>()

  g_metalWallHelper = new CardinalUnitDefinitionHelper()
  g_metalWallIds = new HashList<int>()

  initialize()
  createWallUnitVariations()