package Unit_Walls
import ObjectIdGenerator
import TlsBuildingDefinition
import GameConstants
import TlsUpgradeIds
import HashList
import CardinalUnitDefinition
import BuildingUndeadTarget
import HashMap

HashList<int> g_allWallIds = new HashList<int>()
HashList<int> g_allDeadWallIds = new HashList<int>()
public HashMap<int, WallCardinalUnitDefinitionHelper> g_unitTypeToWallHelperMap = new HashMap<int, WallCardinalUnitDefinitionHelper>()

// ============================================================================
public function unit.isWall() returns bool
  return g_allWallIds.has(this.getTypeId()) or
         g_allDeadWallIds.has(this.getTypeId())

// ============================================================================
public class WallCardinalUnitDefinitionHelper extends CardinalUnitDefinitionHelper
  private int array[4] m_deadIds
  private string array[4] m_deadModelPaths
  private string array[4] m_deadPathMaps
  private int array[4] m_aliveIds

  // --------------------------------------------------------------------------
  function getDeadId(CardinalUnitAngle angle) returns int
    return m_deadIds[angle castTo int]

  // --------------------------------------------------------------------------
  function setDeadId(CardinalUnitAngle angle, int unitId)
    m_deadIds[angle castTo int] = unitId

  // --------------------------------------------------------------------------
  function getDeadModelPath(CardinalUnitAngle angle) returns string
    return m_deadModelPaths[angle castTo int]

  // --------------------------------------------------------------------------
  function setDeadModelPath(CardinalUnitAngle angle, string modelPath)
    m_deadModelPaths[angle castTo int] = modelPath

  // --------------------------------------------------------------------------
  function getDeadPathMap(CardinalUnitAngle angle) returns string
    return m_deadPathMaps[angle castTo int]

  // --------------------------------------------------------------------------
  function setDeadPathMap(CardinalUnitAngle angle, string iconPath)
    m_deadPathMaps[angle castTo int] = iconPath

  // --------------------------------------------------------------------------
  function getAliveId(CardinalUnitAngle angle) returns int
    return m_aliveIds[angle castTo int]

  // --------------------------------------------------------------------------
  function setAliveId(CardinalUnitAngle angle, int unitId)
    m_aliveIds[angle castTo int] = unitId

// ============================================================================
// 
// Wood Fence
//
// ============================================================================

public constant int WOOD_FENCE_GOLD_COST = 0
public constant int WOOD_FENCE_LUMBER_COST = 100
public constant int WOOD_FENCE_REPAIR_GOLD_COST = R2I(WOOD_FENCE_GOLD_COST * BUILDING_REPAIR_GOLD_SCALAR)
public constant int WOOD_FENCE_REPAIR_LUMBER_COST = R2I(WOOD_FENCE_LUMBER_COST * BUILDING_REPAIR_LUMBER_SCALAR)
public constant int WOOD_FENCE_RECYCLE_GOLD_COST = WOOD_FENCE_GOLD_COST
public constant int WOOD_FENCE_RECYCLE_LUMBER_COST = WOOD_FENCE_LUMBER_COST

public constant int WOOD_FENCE_HEALTH = 625
public constant int WOOD_FENCE_ARMOR = 1
public constant real WOOD_WALL_SCALE_DIAGONAL = 1.0
public constant real WOOD_WALL_SCALE_HORIZONTAL = 1.0

public WallCardinalUnitDefinitionHelper g_woodWallHelper = new WallCardinalUnitDefinitionHelper()
public HashList<int> g_woodFenceIds = new HashList<int>()

public class WoodFenceIds
  static constant int ew = compiletime(UNIT_ID_GEN.next())
  static constant int nesw = compiletime(UNIT_ID_GEN.next())
  static constant int ns = compiletime(UNIT_ID_GEN.next())
  static constant int nwse = compiletime(UNIT_ID_GEN.next())
  static constant int ew_dead = compiletime(UNIT_ID_GEN.next())
  static constant int nesw_dead = compiletime(UNIT_ID_GEN.next())
  static constant int ns_dead = compiletime(UNIT_ID_GEN.next())
  static constant int nwse_dead = compiletime(UNIT_ID_GEN.next())
  static constant int ew_alive = compiletime(UNIT_ID_GEN.next())
  static constant int nesw_alive = compiletime(UNIT_ID_GEN.next())
  static constant int ns_alive = compiletime(UNIT_ID_GEN.next())
  static constant int nwse_alive = compiletime(UNIT_ID_GEN.next())

// ============================================================================
//
// Stone Wall
//
// ============================================================================

public constant int STONE_WALL_GOLD_COST = 0
public constant int STONE_WALL_LUMBER_COST = 450
public constant int STONE_WALL_REPAIR_GOLD_COST = R2I(STONE_WALL_GOLD_COST * BUILDING_REPAIR_GOLD_SCALAR)
public constant int STONE_WALL_REPAIR_LUMBER_COST = R2I(STONE_WALL_LUMBER_COST * BUILDING_REPAIR_LUMBER_SCALAR)
public constant int STONE_WALL_RECYCLE_GOLD_COST = WOOD_FENCE_RECYCLE_GOLD_COST + STONE_WALL_GOLD_COST
public constant int STONE_WALL_RECYCLE_LUMBER_COST = WOOD_FENCE_RECYCLE_LUMBER_COST + STONE_WALL_LUMBER_COST

public constant int STONE_WALL_HEALTH = 1250
public constant int STONE_WALL_ARMOR = 2
public constant real STONE_WALL_SCALE_DIAGONAL = 0.60
public constant real STONE_WALL_SCALE_HORIZONTAL = 0.65

public WallCardinalUnitDefinitionHelper g_stoneWallHelper = new WallCardinalUnitDefinitionHelper()
public HashList<int> g_stoneWallIds = new HashList<int>()

public class StoneWallIds
  static constant int ew = compiletime(UNIT_ID_GEN.next())
  static constant int nesw = compiletime(UNIT_ID_GEN.next())
  static constant int ns = compiletime(UNIT_ID_GEN.next())
  static constant int nwse = compiletime(UNIT_ID_GEN.next())
  static constant int ew_dead = compiletime(UNIT_ID_GEN.next())
  static constant int nesw_dead = compiletime(UNIT_ID_GEN.next())
  static constant int ns_dead = compiletime(UNIT_ID_GEN.next())
  static constant int nwse_dead = compiletime(UNIT_ID_GEN.next())
  static constant int ew_alive = compiletime(UNIT_ID_GEN.next())
  static constant int nesw_alive = compiletime(UNIT_ID_GEN.next())
  static constant int ns_alive = compiletime(UNIT_ID_GEN.next())
  static constant int nwse_alive = compiletime(UNIT_ID_GEN.next())

// ============================================================================
//
// Brick Walls
//
// ============================================================================

public constant int BRICK_WALL_GOLD_COST = 3
public constant int BRICK_WALL_LUMBER_COST = 900
public constant int BRICK_WALL_REPAIR_GOLD_COST = R2I(BRICK_WALL_GOLD_COST * BUILDING_REPAIR_GOLD_SCALAR)
public constant int BRICK_WALL_REPAIR_LUMBER_COST = R2I(BRICK_WALL_LUMBER_COST * BUILDING_REPAIR_LUMBER_SCALAR)
public constant int BRICK_WALL_RECYCLE_GOLD_COST = STONE_WALL_RECYCLE_GOLD_COST + BRICK_WALL_GOLD_COST
public constant int BRICK_WALL_RECYCLE_LUMBER_COST = STONE_WALL_RECYCLE_LUMBER_COST + BRICK_WALL_LUMBER_COST

public constant int BRICK_WALL_HEALTH = 2500
public constant int BRICK_WALL_ARMOR = 3
public constant real BRICK_WALL_SCALE_DIAGONAL = 0.60
public constant real BRICK_WALL_SCALE_HORIZONTAL = 0.65

public WallCardinalUnitDefinitionHelper g_brickWallHelper = new WallCardinalUnitDefinitionHelper()
public HashList<int> g_brickWallIds = new HashList<int>()

public class BrickWallIds
  static constant int ew = compiletime(UNIT_ID_GEN.next())
  static constant int nesw = compiletime(UNIT_ID_GEN.next())
  static constant int ns = compiletime(UNIT_ID_GEN.next())
  static constant int nwse = compiletime(UNIT_ID_GEN.next())
  static constant int ew_dead = compiletime(UNIT_ID_GEN.next())
  static constant int nesw_dead = compiletime(UNIT_ID_GEN.next())
  static constant int ns_dead = compiletime(UNIT_ID_GEN.next())
  static constant int nwse_dead = compiletime(UNIT_ID_GEN.next())
  static constant int ew_alive = compiletime(UNIT_ID_GEN.next())
  static constant int nesw_alive = compiletime(UNIT_ID_GEN.next())
  static constant int ns_alive = compiletime(UNIT_ID_GEN.next())
  static constant int nwse_alive = compiletime(UNIT_ID_GEN.next())

// ============================================================================
//
// Metal Walls
//
// ============================================================================

public constant int METAL_WALL_GOLD_COST = 5
public constant int METAL_WALL_LUMBER_COST = 1800
public constant int METAL_WALL_REPAIR_GOLD_COST = R2I(METAL_WALL_GOLD_COST * BUILDING_REPAIR_GOLD_SCALAR)
public constant int METAL_WALL_REPAIR_LUMBER_COST = R2I(METAL_WALL_LUMBER_COST * BUILDING_REPAIR_LUMBER_SCALAR)
public constant int METAL_WALL_RECYCLE_GOLD_COST = BRICK_WALL_RECYCLE_GOLD_COST + METAL_WALL_GOLD_COST
public constant int METAL_WALL_RECYCLE_LUMBER_COST = BRICK_WALL_RECYCLE_LUMBER_COST + METAL_WALL_LUMBER_COST

public constant int METAL_WALL_HEALTH = 5000
public constant int METAL_WALL_ARMOR = 4
public constant real METAL_WALL_SCALE_DIAGONAL = 0.60
public constant real METAL_WALL_SCALE_HORIZONTAL = 0.65

public WallCardinalUnitDefinitionHelper g_metalWallHelper = new WallCardinalUnitDefinitionHelper()
public HashList<int> g_metalWallIds = new HashList<int>()

public class MetalWallIds
  static constant int ew = compiletime(UNIT_ID_GEN.next())
  static constant int nesw = compiletime(UNIT_ID_GEN.next())
  static constant int ns = compiletime(UNIT_ID_GEN.next())
  static constant int nwse = compiletime(UNIT_ID_GEN.next())
  static constant int ew_dead = compiletime(UNIT_ID_GEN.next())
  static constant int nesw_dead = compiletime(UNIT_ID_GEN.next())
  static constant int ns_dead = compiletime(UNIT_ID_GEN.next())
  static constant int nwse_dead = compiletime(UNIT_ID_GEN.next())
  static constant int ew_alive = compiletime(UNIT_ID_GEN.next())
  static constant int nesw_alive = compiletime(UNIT_ID_GEN.next())
  static constant int ns_alive = compiletime(UNIT_ID_GEN.next())
  static constant int nwse_alive = compiletime(UNIT_ID_GEN.next())

//=============================================================================
public class BaseWallDefinition extends TlsBuildingDefinition
  construct(int newId)
    super(newId, UnitIds.scouttower)
    setName("Gate")
    setTintingColorRed(255)
    setTintingColorGreen(255)
    setTintingColorBlue(255)
    setShadowTextureBuilding("")
    setButtonPositionX(0)
    setButtonPositionY(0)
    setDeathTimeseconds(0.83)
    setGroundTexture("")
    setRequiredAnimationNamesAttachments("medium")
    setSelectionScale(4.0)
    setScalingValue(0.4)
    setArmorType(ArmorType.Fortified)
    setDeathType(DeathType.CannotRaiseDoesNotDecay)
    setCollisionSize(0.0)
    setPlacementRequires("unbuildable,unwalkable")
    setBuildTime(1)
    setCanFlee(false)
    setHideMinimapDisplay(true)
    setHitPointsMaximumBase(1000)
    setSightRadiusDay(STRUCTURE_LARGE_SIGHT_RANGE_DAY)
    setSightRadiusNight(STRUCTURE_LARGE_SIGHT_RANGE_NIGHT)
    setNormalAbilities(commaList(TlsAbilityIds.recycle))
    setRequirements(commaList(TlsUnitIds.headquarters1))
    setUpgradesUsed(commaList(TlsUpgradeIds.campDefense))
    setDefenseUpgradeBonus(2)

    setBuildTime(BUILD_TIME_BUILDING_MEDIUM)
    setRepairTime(REPAIR_TIME_BUILDING_WALL)
    setGoldCost(0)
    setLumberCost(0)
    setRepairGoldCost(0)
    setRepairLumberCost(0)

// ============================================================================
function initialize()

  g_woodFenceIds
  ..add(WoodFenceIds.ew)
  ..add(WoodFenceIds.nesw)
  ..add(WoodFenceIds.ns)
  ..add(WoodFenceIds.nwse)
  ..add(WoodFenceIds.ew_dead)
  ..add(WoodFenceIds.nesw_dead)
  ..add(WoodFenceIds.ns_dead)
  ..add(WoodFenceIds.nwse_dead)
  ..add(WoodFenceIds.ew_alive)
  ..add(WoodFenceIds.nesw_alive)
  ..add(WoodFenceIds.ns_alive)
  ..add(WoodFenceIds.nwse_alive)

  g_woodWallHelper.setId(CardinalUnitAngle.NS, WoodFenceIds.ns)
  g_woodWallHelper.setId(CardinalUnitAngle.NWSE, WoodFenceIds.nwse)
  g_woodWallHelper.setId(CardinalUnitAngle.EW, WoodFenceIds.ew)
  g_woodWallHelper.setId(CardinalUnitAngle.NESW, WoodFenceIds.nesw)
  g_woodWallHelper.setPathMap(CardinalUnitAngle.NS, "Units\\Wall1\\Wall1_0.tga")
  g_woodWallHelper.setPathMap(CardinalUnitAngle.NWSE, "Units\\Wall1\\Wall1_45.tga")
  g_woodWallHelper.setPathMap(CardinalUnitAngle.EW, "Units\\Wall1\\Wall1_90.tga")
  g_woodWallHelper.setPathMap(CardinalUnitAngle.NESW, "Units\\Wall1\\Wall1_135.tga")
  g_woodWallHelper.setModelPath(CardinalUnitAngle.NS, "Units\\Wall1\\Wall1_0.mdx")
  g_woodWallHelper.setModelPath(CardinalUnitAngle.NWSE, "Units\\Wall1\\Wall1_45.mdx")
  g_woodWallHelper.setModelPath(CardinalUnitAngle.EW, "Units\\Wall1\\Wall1_90.mdx")
  g_woodWallHelper.setModelPath(CardinalUnitAngle.NESW, "Units\\Wall1\\Wall1_135.mdx")
  g_woodWallHelper.setIconPath(CardinalUnitAngle.NS, "ReplaceableTextures\\CommandButtons\\BTNWall1_0.BLP")
  g_woodWallHelper.setIconPath(CardinalUnitAngle.NWSE, "ReplaceableTextures\\CommandButtons\\BTNWall1_45.BLP")
  g_woodWallHelper.setIconPath(CardinalUnitAngle.EW, "ReplaceableTextures\\CommandButtons\\BTNWall1_90.BLP")
  g_woodWallHelper.setIconPath(CardinalUnitAngle.NESW, "ReplaceableTextures\\CommandButtons\\BTNWall1_135.BLP")
  g_woodWallHelper.setDeadId(CardinalUnitAngle.NS, WoodFenceIds.ns_dead)
  g_woodWallHelper.setDeadId(CardinalUnitAngle.NWSE, WoodFenceIds.nwse_dead)
  g_woodWallHelper.setDeadId(CardinalUnitAngle.EW, WoodFenceIds.ew_dead)
  g_woodWallHelper.setDeadId(CardinalUnitAngle.NESW, WoodFenceIds.nesw_dead)
  g_woodWallHelper.setDeadPathMap(CardinalUnitAngle.EW, "PathTextures\\Gate_0_Open.tga")
  g_woodWallHelper.setDeadPathMap(CardinalUnitAngle.NESW, "PathTextures\\Gate_225_Open.tga")
  g_woodWallHelper.setDeadPathMap(CardinalUnitAngle.NS, "PathTextures\\Gate_270_Open.tga")
  g_woodWallHelper.setDeadPathMap(CardinalUnitAngle.NWSE, "PathTextures\\Gate_315_Open.tga")
  g_woodWallHelper.setDeadModelPath(CardinalUnitAngle.NS, "Units\\Wall1\\Wall1_0.mdx")
  g_woodWallHelper.setDeadModelPath(CardinalUnitAngle.NWSE, "Units\\Wall1\\Wall1_45.mdx")
  g_woodWallHelper.setDeadModelPath(CardinalUnitAngle.EW, "Units\\Wall1\\Wall1_90.mdx")
  g_woodWallHelper.setDeadModelPath(CardinalUnitAngle.NESW, "Units\\Wall1\\Wall1_135.mdx")
  g_woodWallHelper.setAliveId(CardinalUnitAngle.NS, WoodFenceIds.ns_alive)
  g_woodWallHelper.setAliveId(CardinalUnitAngle.NWSE, WoodFenceIds.nwse_alive)
  g_woodWallHelper.setAliveId(CardinalUnitAngle.EW, WoodFenceIds.ew_alive)
  g_woodWallHelper.setAliveId(CardinalUnitAngle.NESW, WoodFenceIds.nesw_alive)

  g_stoneWallIds
  ..add(StoneWallIds.ew)
  ..add(StoneWallIds.nesw)
  ..add(StoneWallIds.ns)
  ..add(StoneWallIds.nwse)
  ..add(StoneWallIds.ew_dead)
  ..add(StoneWallIds.nesw_dead)
  ..add(StoneWallIds.ns_dead)
  ..add(StoneWallIds.nwse_dead)
  ..add(StoneWallIds.ew_alive)
  ..add(StoneWallIds.nesw_alive)
  ..add(StoneWallIds.ns_alive)
  ..add(StoneWallIds.nwse_alive)

  g_stoneWallHelper.setId(CardinalUnitAngle.NS, StoneWallIds.ns)
  g_stoneWallHelper.setId(CardinalUnitAngle.NWSE, StoneWallIds.nwse)
  g_stoneWallHelper.setId(CardinalUnitAngle.EW, StoneWallIds.ew)
  g_stoneWallHelper.setId(CardinalUnitAngle.NESW, StoneWallIds.nesw)
  g_stoneWallHelper.setPathMap(CardinalUnitAngle.NS, "Units\\Wall1\\Wall1_0.tga")
  g_stoneWallHelper.setPathMap(CardinalUnitAngle.NWSE, "Units\\Wall1\\Wall1_45.tga")
  g_stoneWallHelper.setPathMap(CardinalUnitAngle.EW, "Units\\Wall1\\Wall1_90.tga")
  g_stoneWallHelper.setPathMap(CardinalUnitAngle.NESW, "Units\\Wall1\\Wall1_135.tga")
  g_stoneWallHelper.setModelPath(CardinalUnitAngle.NS, "Doodads\\LordaeronSummer\\Terrain\\StoneWall0\\StoneWall02.mdl")
  g_stoneWallHelper.setModelPath(CardinalUnitAngle.NWSE, "Doodads\\LordaeronSummer\\Terrain\\StoneWall135\\StoneWall1352.mdl")
  g_stoneWallHelper.setModelPath(CardinalUnitAngle.EW, "Doodads\\LordaeronSummer\\Terrain\\StoneWall90\\StoneWall902.mdl")
  g_stoneWallHelper.setModelPath(CardinalUnitAngle.NESW, "Doodads\\LordaeronSummer\\Terrain\\StoneWall45\\StoneWall452.mdl")
  g_stoneWallHelper.setIconPath(CardinalUnitAngle.NS, "ReplaceableTextures\\CommandButtons\\BTNWall1_0.BLP")
  g_stoneWallHelper.setIconPath(CardinalUnitAngle.NWSE, "ReplaceableTextures\\CommandButtons\\BTNWall1_45.BLP")
  g_stoneWallHelper.setIconPath(CardinalUnitAngle.EW, "ReplaceableTextures\\CommandButtons\\BTNWall1_90.BLP")
  g_stoneWallHelper.setIconPath(CardinalUnitAngle.NESW, "ReplaceableTextures\\CommandButtons\\BTNWall1_135.BLP")
  g_stoneWallHelper.setDeadId(CardinalUnitAngle.NS, StoneWallIds.ns_dead)
  g_stoneWallHelper.setDeadId(CardinalUnitAngle.NWSE, StoneWallIds.nwse_dead)
  g_stoneWallHelper.setDeadId(CardinalUnitAngle.EW, StoneWallIds.ew_dead)
  g_stoneWallHelper.setDeadId(CardinalUnitAngle.NESW, StoneWallIds.nesw_dead)
  g_stoneWallHelper.setDeadPathMap(CardinalUnitAngle.EW, "PathTextures\\Gate_0_Open.tga")
  g_stoneWallHelper.setDeadPathMap(CardinalUnitAngle.NESW, "PathTextures\\Gate_225_Open.tga")
  g_stoneWallHelper.setDeadPathMap(CardinalUnitAngle.NS, "PathTextures\\Gate_270_Open.tga")
  g_stoneWallHelper.setDeadPathMap(CardinalUnitAngle.NWSE, "PathTextures\\Gate_315_Open.tga")
  g_stoneWallHelper.setDeadModelPath(CardinalUnitAngle.NS, "Doodads\\LordaeronSummer\\Terrain\\StoneWall0\\StoneWall02.mdl")
  g_stoneWallHelper.setDeadModelPath(CardinalUnitAngle.NWSE, "Doodads\\LordaeronSummer\\Terrain\\StoneWall135\\StoneWall1352.mdl")
  g_stoneWallHelper.setDeadModelPath(CardinalUnitAngle.EW, "Doodads\\LordaeronSummer\\Terrain\\StoneWall90\\StoneWall902.mdl")
  g_stoneWallHelper.setDeadModelPath(CardinalUnitAngle.NESW, "Doodads\\LordaeronSummer\\Terrain\\StoneWall45\\StoneWall452.mdl")
  g_stoneWallHelper.setAliveId(CardinalUnitAngle.NS, StoneWallIds.ns_alive)
  g_stoneWallHelper.setAliveId(CardinalUnitAngle.NWSE, StoneWallIds.nwse_alive)
  g_stoneWallHelper.setAliveId(CardinalUnitAngle.EW, StoneWallIds.ew_alive)
  g_stoneWallHelper.setAliveId(CardinalUnitAngle.NESW, StoneWallIds.nesw_alive)
  
  g_brickWallIds
  ..add(BrickWallIds.ew)
  ..add(BrickWallIds.nesw)
  ..add(BrickWallIds.ns)
  ..add(BrickWallIds.nwse)
  ..add(BrickWallIds.ew_dead)
  ..add(BrickWallIds.nesw_dead)
  ..add(BrickWallIds.ns_dead)
  ..add(BrickWallIds.nwse_dead)
  ..add(BrickWallIds.ew_alive)
  ..add(BrickWallIds.nesw_alive)
  ..add(BrickWallIds.ns_alive)
  ..add(BrickWallIds.nwse_alive)

  g_brickWallHelper.setId(CardinalUnitAngle.NS, BrickWallIds.ns)
  g_brickWallHelper.setId(CardinalUnitAngle.NWSE, BrickWallIds.nwse)
  g_brickWallHelper.setId(CardinalUnitAngle.EW, BrickWallIds.ew)
  g_brickWallHelper.setId(CardinalUnitAngle.NESW, BrickWallIds.nesw)
  g_brickWallHelper.setPathMap(CardinalUnitAngle.NS, "Units\\Wall1\\Wall1_0.tga")
  g_brickWallHelper.setPathMap(CardinalUnitAngle.NWSE, "Units\\Wall1\\Wall1_45.tga")
  g_brickWallHelper.setPathMap(CardinalUnitAngle.EW, "Units\\Wall1\\Wall1_90.tga")
  g_brickWallHelper.setPathMap(CardinalUnitAngle.NESW, "Units\\Wall1\\Wall1_135.tga")
  g_brickWallHelper.setModelPath(CardinalUnitAngle.NS, "Doodads\\Ruins\\Terrain\\RuinsWall0\\RuinsWall02.mdl")
  g_brickWallHelper.setModelPath(CardinalUnitAngle.NWSE, "Doodads\\Ruins\\Terrain\\RuinsWall135\\RuinsWall1352.mdl")
  g_brickWallHelper.setModelPath(CardinalUnitAngle.EW, "Doodads\\Ruins\\Terrain\\RuinsWall90\\RuinsWall902.mdl")
  g_brickWallHelper.setModelPath(CardinalUnitAngle.NESW, "Doodads\\Ruins\\Terrain\\RuinsWall45\\RuinsWall452.mdl")
  g_brickWallHelper.setIconPath(CardinalUnitAngle.NS, "ReplaceableTextures\\CommandButtons\\BTNWall1_0.BLP")
  g_brickWallHelper.setIconPath(CardinalUnitAngle.NWSE, "ReplaceableTextures\\CommandButtons\\BTNWall1_45.BLP")
  g_brickWallHelper.setIconPath(CardinalUnitAngle.EW, "ReplaceableTextures\\CommandButtons\\BTNWall1_90.BLP")
  g_brickWallHelper.setIconPath(CardinalUnitAngle.NESW, "ReplaceableTextures\\CommandButtons\\BTNWall1_135.BLP")
  g_brickWallHelper.setDeadId(CardinalUnitAngle.NS, BrickWallIds.ns_dead)
  g_brickWallHelper.setDeadId(CardinalUnitAngle.NWSE, BrickWallIds.nwse_dead)
  g_brickWallHelper.setDeadId(CardinalUnitAngle.EW, BrickWallIds.ew_dead)
  g_brickWallHelper.setDeadId(CardinalUnitAngle.NESW, BrickWallIds.nesw_dead)
  g_brickWallHelper.setDeadPathMap(CardinalUnitAngle.EW, "PathTextures\\Gate_0_Open.tga")
  g_brickWallHelper.setDeadPathMap(CardinalUnitAngle.NESW, "PathTextures\\Gate_225_Open.tga")
  g_brickWallHelper.setDeadPathMap(CardinalUnitAngle.NS, "PathTextures\\Gate_270_Open.tga")
  g_brickWallHelper.setDeadPathMap(CardinalUnitAngle.NWSE, "PathTextures\\Gate_315_Open.tga")
  g_brickWallHelper.setDeadModelPath(CardinalUnitAngle.NS, "Doodads\\Ruins\\Terrain\\RuinsWall0\\RuinsWall02.mdl")
  g_brickWallHelper.setDeadModelPath(CardinalUnitAngle.NWSE, "Doodads\\Ruins\\Terrain\\RuinsWall135\\RuinsWall1352.mdl")
  g_brickWallHelper.setDeadModelPath(CardinalUnitAngle.EW, "Doodads\\Ruins\\Terrain\\RuinsWall90\\RuinsWall902.mdl")
  g_brickWallHelper.setDeadModelPath(CardinalUnitAngle.NESW, "Doodads\\Ruins\\Terrain\\RuinsWall45\\RuinsWall452.mdl")
  g_brickWallHelper.setAliveId(CardinalUnitAngle.NS, BrickWallIds.ns_alive)
  g_brickWallHelper.setAliveId(CardinalUnitAngle.NWSE, BrickWallIds.nwse_alive)
  g_brickWallHelper.setAliveId(CardinalUnitAngle.EW, BrickWallIds.ew_alive)
  g_brickWallHelper.setAliveId(CardinalUnitAngle.NESW, BrickWallIds.nesw_alive)

  g_metalWallIds
  ..add(MetalWallIds.ew)
  ..add(MetalWallIds.nesw)
  ..add(MetalWallIds.ns)
  ..add(MetalWallIds.nwse)
  ..add(MetalWallIds.ew_dead)
  ..add(MetalWallIds.nesw_dead)
  ..add(MetalWallIds.ns_dead)
  ..add(MetalWallIds.nwse_dead)
  ..add(MetalWallIds.ew_alive)
  ..add(MetalWallIds.nesw_alive)
  ..add(MetalWallIds.ns_alive)
  ..add(MetalWallIds.nwse_alive)

  g_metalWallHelper.setId(CardinalUnitAngle.NS, MetalWallIds.ns)
  g_metalWallHelper.setId(CardinalUnitAngle.NWSE, MetalWallIds.nwse)
  g_metalWallHelper.setId(CardinalUnitAngle.EW, MetalWallIds.ew)
  g_metalWallHelper.setId(CardinalUnitAngle.NESW, MetalWallIds.nesw)
  g_metalWallHelper.setPathMap(CardinalUnitAngle.NS, "Units\\Wall1\\Wall1_0.tga")
  g_metalWallHelper.setPathMap(CardinalUnitAngle.NWSE, "Units\\Wall1\\Wall1_45.tga")
  g_metalWallHelper.setPathMap(CardinalUnitAngle.EW, "Units\\Wall1\\Wall1_90.tga")
  g_metalWallHelper.setPathMap(CardinalUnitAngle.NESW, "Units\\Wall1\\Wall1_135.tga")
  g_metalWallHelper.setModelPath(CardinalUnitAngle.NS, "Doodads\\Icecrown\\Terrain\\IceCrownWall0\\IceCrownWall02.mdl")
  g_metalWallHelper.setModelPath(CardinalUnitAngle.NWSE, "Doodads\\Icecrown\\Terrain\\IceCrownWall135\\IceCrownWall1352.mdl")
  g_metalWallHelper.setModelPath(CardinalUnitAngle.EW, "Doodads\\Icecrown\\Terrain\\IceCrownWall90\\IceCrownWall902.mdl")
  g_metalWallHelper.setModelPath(CardinalUnitAngle.NESW, "Doodads\\Icecrown\\Terrain\\IceCrownWall45\\IceCrownWall452.mdl")
  g_metalWallHelper.setIconPath(CardinalUnitAngle.NS, "ReplaceableTextures\\CommandButtons\\BTNWall1_0.BLP")
  g_metalWallHelper.setIconPath(CardinalUnitAngle.NWSE, "ReplaceableTextures\\CommandButtons\\BTNWall1_45.BLP")
  g_metalWallHelper.setIconPath(CardinalUnitAngle.EW, "ReplaceableTextures\\CommandButtons\\BTNWall1_90.BLP")
  g_metalWallHelper.setIconPath(CardinalUnitAngle.NESW, "ReplaceableTextures\\CommandButtons\\BTNWall1_135.BLP")
  g_metalWallHelper.setDeadId(CardinalUnitAngle.NS, MetalWallIds.ns_dead)
  g_metalWallHelper.setDeadId(CardinalUnitAngle.NWSE, MetalWallIds.nwse_dead)
  g_metalWallHelper.setDeadId(CardinalUnitAngle.EW, MetalWallIds.ew_dead)
  g_metalWallHelper.setDeadId(CardinalUnitAngle.NESW, MetalWallIds.nesw_dead)
  g_metalWallHelper.setDeadPathMap(CardinalUnitAngle.EW, "PathTextures\\Gate_0_Open.tga")
  g_metalWallHelper.setDeadPathMap(CardinalUnitAngle.NESW, "PathTextures\\Gate_225_Open.tga")
  g_metalWallHelper.setDeadPathMap(CardinalUnitAngle.NS, "PathTextures\\Gate_270_Open.tga")
  g_metalWallHelper.setDeadPathMap(CardinalUnitAngle.NWSE, "PathTextures\\Gate_315_Open.tga")
  g_metalWallHelper.setDeadModelPath(CardinalUnitAngle.NS, "Doodads\\Icecrown\\Terrain\\IceCrownWall0\\IceCrownWall02.mdl")
  g_metalWallHelper.setDeadModelPath(CardinalUnitAngle.NWSE, "Doodads\\Icecrown\\Terrain\\IceCrownWall135\\IceCrownWall1352.mdl")
  g_metalWallHelper.setDeadModelPath(CardinalUnitAngle.EW, "Doodads\\Icecrown\\Terrain\\IceCrownWall90\\IceCrownWall902.mdl")
  g_metalWallHelper.setDeadModelPath(CardinalUnitAngle.NESW, "Doodads\\Icecrown\\Terrain\\IceCrownWall45\\IceCrownWall452.mdl")
  g_metalWallHelper.setAliveId(CardinalUnitAngle.NS, MetalWallIds.ns_alive)
  g_metalWallHelper.setAliveId(CardinalUnitAngle.NWSE, MetalWallIds.nwse_alive)
  g_metalWallHelper.setAliveId(CardinalUnitAngle.EW, MetalWallIds.ew_alive)
  g_metalWallHelper.setAliveId(CardinalUnitAngle.NESW, MetalWallIds.nesw_alive)

// ============================================================================
function createWallUnitVariations()

  // Wood Fence
  createWoodWallUnitVariation(CardinalUnitAngle.EW,    1, 1, "Vertical (EW)",    WOOD_WALL_SCALE_HORIZONTAL)
  createWoodWallUnitVariation(CardinalUnitAngle.NESW,  1, 1, "Diagonal (NE SW)", WOOD_WALL_SCALE_DIAGONAL)
  createWoodWallUnitVariation(CardinalUnitAngle.NS,    1, 1, "Horizontal (NS)",  WOOD_WALL_SCALE_HORIZONTAL)
  createWoodWallUnitVariation(CardinalUnitAngle.NWSE,  1, 1, "Diagonal (NW SE)", WOOD_WALL_SCALE_DIAGONAL)

  // Stone Wall
  createStoneWallUnitVariation(CardinalUnitAngle.EW,    0, 2, "Vertical (EW)",    STONE_WALL_SCALE_HORIZONTAL)
  createStoneWallUnitVariation(CardinalUnitAngle.NESW,  0, 2, "Diagonal (NE SW)", STONE_WALL_SCALE_DIAGONAL)
  createStoneWallUnitVariation(CardinalUnitAngle.NS,    0, 2, "Horizontal (NS)",  STONE_WALL_SCALE_HORIZONTAL)
  createStoneWallUnitVariation(CardinalUnitAngle.NWSE,  0, 2, "Diagonal (NW SE)", STONE_WALL_SCALE_DIAGONAL)
  
  // Brick Wall
  createBrickWallUnitVariation(CardinalUnitAngle.EW,    0, 2, "Vertical (EW)",    BRICK_WALL_SCALE_HORIZONTAL)
  createBrickWallUnitVariation(CardinalUnitAngle.NESW,  0, 2, "Diagonal (NE SW)", BRICK_WALL_SCALE_DIAGONAL)
  createBrickWallUnitVariation(CardinalUnitAngle.NS,    0, 2, "Horizontal (NS)",  BRICK_WALL_SCALE_HORIZONTAL)
  createBrickWallUnitVariation(CardinalUnitAngle.NWSE,  0, 2, "Diagonal (NW SE)", BRICK_WALL_SCALE_DIAGONAL)
  
  // Metal Wall
  createMetalWallUnitVariation(CardinalUnitAngle.EW,    0, 2, "Vertical (EW)",    METAL_WALL_SCALE_HORIZONTAL)
  createMetalWallUnitVariation(CardinalUnitAngle.NESW,  0, 2, "Diagonal (NE SW)", METAL_WALL_SCALE_DIAGONAL)
  createMetalWallUnitVariation(CardinalUnitAngle.NS,    0, 2, "Horizontal (NS)",  METAL_WALL_SCALE_HORIZONTAL)
  createMetalWallUnitVariation(CardinalUnitAngle.NWSE,  0, 2, "Diagonal (NW SE)", METAL_WALL_SCALE_DIAGONAL)

// ============================================================================
function createWoodWallUnitVariation(CardinalUnitAngle angle, int buttonPosX, int buttonPosY, string name, real scale)

  BaseWallDefinition array[3] wallDefs
  wallDefs[0] = defineWallUnit(g_woodWallHelper, g_woodWallHelper.getId(angle), angle, g_stoneWallHelper)
  wallDefs[1] = defineWallUnit(g_woodWallHelper, g_woodWallHelper.getAliveId(angle), angle, g_stoneWallHelper)
  wallDefs[2] = defineWallUnit(g_woodWallHelper, g_woodWallHelper.getDeadId(angle), angle, g_stoneWallHelper)

  for i = 0 to 2
    wallDefs[i]
    ..setName("Wood Wall")
    ..setButtonPositionX(buttonPosX)
    ..setButtonPositionY(buttonPosY)
    ..setScalingValue(scale)
    ..setTooltipBasic("Build Wood Wall")
    ..setTooltipExtendedRotatable("|cffffcc00" + name + "|r|nBuild a wall wall the offers basic protection against intruders.")
    ..setHitPointsMaximumBase(WOOD_FENCE_HEALTH)
    ..setDefenseBase(WOOD_FENCE_ARMOR)
    ..setGoldCost(WOOD_FENCE_GOLD_COST)
    ..setLumberCost(WOOD_FENCE_LUMBER_COST)
    ..setRepairGoldCost(WOOD_FENCE_REPAIR_GOLD_COST)
    ..setRepairLumberCost(WOOD_FENCE_REPAIR_LUMBER_COST)
    ..setRecycleGoldRewarded(WOOD_FENCE_RECYCLE_GOLD_COST)
    ..setRecycleLumberRewarded(WOOD_FENCE_RECYCLE_LUMBER_COST)
    ..setRepairTime(REPAIR_TIME_BUILDING_WALL)

  wallDefs[0].setBuildWallOptions()
  wallDefs[1].setAliveWallOptions()
  
  wallDefs[2]
  ..setDeadWallOptions(g_woodWallHelper, angle)
  ..setRepairGoldCost((WOOD_FENCE_GOLD_COST * BUILDING_REPAIR_BROKEN_GOLD_SCALAR).floor())
  ..setRepairLumberCost((WOOD_FENCE_LUMBER_COST * BUILDING_REPAIR_BROKEN_LUMBER_SCALAR).floor())
  
// ============================================================================
function createStoneWallUnitVariation(CardinalUnitAngle angle, int buttonPosX, int buttonPosY, string name, real scale)

  BaseWallDefinition array[3] wallDefs
  wallDefs[0] = defineWallUnit(g_stoneWallHelper, g_stoneWallHelper.getId(angle), angle, g_brickWallHelper)
  wallDefs[1] = defineWallUnit(g_stoneWallHelper, g_stoneWallHelper.getAliveId(angle), angle, g_brickWallHelper)
  wallDefs[2] = defineWallUnit(g_stoneWallHelper, g_stoneWallHelper.getDeadId(angle), angle, g_brickWallHelper)

  for i = 0 to 2
    wallDefs[i]
    ..setName("Stone Wall")
    ..setButtonPositionX(buttonPosX)
    ..setButtonPositionY(buttonPosY)
    ..setScalingValue(scale)
    ..setTooltipBasic("Upgrade to Stone Wall")
    ..setTooltipExtended("|cffffcc00" + name + "|r|nUpgrade to a strong stone wall.")
    ..setRequirements(commaList(TlsUnitIds.workbench))
    ..setHitPointsMaximumBase(STONE_WALL_HEALTH)
    ..setDefenseBase(STONE_WALL_ARMOR)
    ..setGoldCost(STONE_WALL_GOLD_COST)
    ..setLumberCost(STONE_WALL_LUMBER_COST)
    ..setRepairGoldCost(STONE_WALL_REPAIR_GOLD_COST)
    ..setRepairLumberCost(STONE_WALL_REPAIR_LUMBER_COST)
    ..setRecycleGoldRewarded(STONE_WALL_RECYCLE_GOLD_COST)
    ..setRecycleLumberRewarded(STONE_WALL_RECYCLE_LUMBER_COST)
    ..setRepairTime(REPAIR_TIME_BUILDING_WALL)

  wallDefs[0].setBuildWallOptions()
  wallDefs[1].setAliveWallOptions()
  
  wallDefs[2]
  ..setDeadWallOptions(g_stoneWallHelper, angle)
  ..setRepairGoldCost((STONE_WALL_GOLD_COST * BUILDING_REPAIR_BROKEN_GOLD_SCALAR).floor())
  ..setRepairLumberCost((STONE_WALL_LUMBER_COST * BUILDING_REPAIR_BROKEN_LUMBER_SCALAR).floor())

// ============================================================================
function createBrickWallUnitVariation(CardinalUnitAngle angle, int buttonPosX, int buttonPosY, string name, real scale)

  BaseWallDefinition array[3] wallDefs
  wallDefs[0] = defineWallUnit(g_brickWallHelper, g_brickWallHelper.getId(angle), angle, g_metalWallHelper)
  wallDefs[1] = defineWallUnit(g_brickWallHelper, g_brickWallHelper.getAliveId(angle), angle, g_metalWallHelper)
  wallDefs[2] = defineWallUnit(g_brickWallHelper, g_brickWallHelper.getDeadId(angle), angle, g_metalWallHelper)

  for i = 0 to 2
    wallDefs[i]
    ..setName("Brick Wall")
    ..setButtonPositionX(buttonPosX)
    ..setButtonPositionY(buttonPosY)
    ..setScalingValue(scale)
    ..setTooltipBasic("Upgrade to Brick Wall")
    ..setTooltipExtended("|cffffcc00" + name + "|r|nUpgrade to an even stronger wall made of brick and cement.")
    ..setHitPointsMaximumBase(BRICK_WALL_HEALTH)
    ..setDefenseBase(BRICK_WALL_ARMOR)
    ..setGoldCost(BRICK_WALL_GOLD_COST)
    ..setLumberCost(BRICK_WALL_LUMBER_COST)
    ..setRepairGoldCost(BRICK_WALL_REPAIR_GOLD_COST)
    ..setRepairLumberCost(BRICK_WALL_REPAIR_LUMBER_COST)
    ..setRecycleGoldRewarded(BRICK_WALL_RECYCLE_GOLD_COST)
    ..setRecycleLumberRewarded(BRICK_WALL_RECYCLE_LUMBER_COST)
    ..setRepairTime(REPAIR_TIME_BUILDING_WALL)
    ..setTintingColorRed(255)
    ..setTintingColorGreen(100)
    ..setTintingColorBlue(100)

  wallDefs[0].setBuildWallOptions()
  wallDefs[1].setAliveWallOptions()
  
  wallDefs[2]
  ..setDeadWallOptions(g_brickWallHelper, angle)
  ..setRepairGoldCost((BRICK_WALL_GOLD_COST * BUILDING_REPAIR_BROKEN_GOLD_SCALAR).floor())
  ..setRepairLumberCost((BRICK_WALL_LUMBER_COST * BUILDING_REPAIR_BROKEN_LUMBER_SCALAR).floor())

// ============================================================================
function createMetalWallUnitVariation(CardinalUnitAngle angle, int buttonPosX, int buttonPosY, string name, real scale)

  BaseWallDefinition array[3] wallDefs
  wallDefs[0] = defineWallUnit(g_metalWallHelper, g_metalWallHelper.getId(angle), angle, null)
  wallDefs[1] = defineWallUnit(g_metalWallHelper, g_metalWallHelper.getAliveId(angle), angle, null)
  wallDefs[2] = defineWallUnit(g_metalWallHelper, g_metalWallHelper.getDeadId(angle), angle, null)

  for i = 0 to 2
    wallDefs[i]
    ..setName("Iron Wall")
    ..setButtonPositionX(buttonPosX)
    ..setButtonPositionY(buttonPosY)
    ..setScalingValue(scale)
    ..setTooltipBasic("Upgrade to Iron Wall")
    ..setTooltipExtended("|cffffcc00" + name + "|r|nUpgrade to a wall infused with iron.")
    ..setRequirements(commaList(TlsUnitIds.headquarters1))
    ..setHitPointsMaximumBase(METAL_WALL_HEALTH)
    ..setDefenseBase(METAL_WALL_ARMOR)
    ..setGoldCost(METAL_WALL_GOLD_COST)
    ..setLumberCost(METAL_WALL_LUMBER_COST)
    ..setRepairGoldCost(METAL_WALL_REPAIR_GOLD_COST)
    ..setRepairLumberCost(METAL_WALL_REPAIR_LUMBER_COST)
    ..setRecycleGoldRewarded(METAL_WALL_RECYCLE_GOLD_COST)
    ..setRecycleLumberRewarded(METAL_WALL_RECYCLE_LUMBER_COST)
    ..setRepairTime(REPAIR_TIME_BUILDING_WALL)
    ..setTintingColorRed(255)
    ..setTintingColorGreen(200)
    ..setTintingColorBlue(200)

  wallDefs[0].setBuildWallOptions()
  wallDefs[1].setAliveWallOptions()
  
  wallDefs[2]
  ..setDeadWallOptions(g_metalWallHelper, angle)
  ..setRepairGoldCost((METAL_WALL_GOLD_COST * BUILDING_REPAIR_BROKEN_GOLD_SCALAR).floor())
  ..setRepairLumberCost((METAL_WALL_LUMBER_COST * BUILDING_REPAIR_BROKEN_LUMBER_SCALAR).floor())

//=============================================================================
function defineWallUnit(
  WallCardinalUnitDefinitionHelper helper,
  int newId,
  CardinalUnitAngle angle,
  WallCardinalUnitDefinitionHelper upgradesToHelper) returns BaseWallDefinition

  let def = new BaseWallDefinition(newId)
    ..setIconGameInterface(helper.getIconPath(angle))
    ..setModelFile(helper.getModelPath(angle))
    ..setPathingMap(helper.getPathMap(angle))

  if (upgradesToHelper != null)
    let deadWallId = helper.getDeadId(angle)
    let nextWallId = upgradesToHelper.getId(angle)
    def.setUpgradesTo(commaList(deadWallId, nextWallId))
  else
    let deadWallId = helper.getDeadId(angle)
    def.setUpgradesTo(commaList(deadWallId))

  g_allWallIds.add(newId)
  g_unitTypeToWallHelperMap.put(newId, helper)

  return def

// ============================================================================
function BaseWallDefinition.setBuildWallOptions()
  this
    ..makeBuildingUndeadTarget()
    ..setBuildTime(BUILD_TIME_BUILDING_WALL)

// ============================================================================
function BaseWallDefinition.setAliveWallOptions()
  this
  ..makeBuildingUndeadTarget()
  ..setNameEditorSuffix("(Alive)")
  ..setRequirements("")
  ..setButtonPositionX(0)
  ..setButtonPositionY(-11)
  ..setGoldCost(0)
  ..setLumberCost(0)
  ..setBuildTime(1)

// ============================================================================
function BaseWallDefinition.setDeadWallOptions(
  WallCardinalUnitDefinitionHelper helper,
  CardinalUnitAngle angle)

  this
  ..setName("Broken " + this.getName())
  ..setNameEditorSuffix("(Dead)")
  ..setRequirements("")
  ..setButtonPositionX(0)
  ..setButtonPositionY(-11)
  ..setGoldCost(0)
  ..setLumberCost(0)
  ..setBuildTime(1)
  ..setModelFile(helper.getDeadModelPath(angle))
  ..setPathingMap(helper.getDeadPathMap(angle))
  ..setNormalAbilities(commaList(TlsAbilityIds.recycleBroken))

  let aliveWallId = helper.getAliveId(angle)
  this.setUpgradesTo(commaList(aliveWallId))

// ============================================================================
init
  initialize()
  createWallUnitVariations()

// ============================================================================
@compiletime
function init_compiletime()
  g_woodWallHelper = new WallCardinalUnitDefinitionHelper()
  g_woodFenceIds = new HashList<int>()

  g_stoneWallHelper = new WallCardinalUnitDefinitionHelper()
  g_stoneWallIds = new HashList<int>()

  g_brickWallHelper = new WallCardinalUnitDefinitionHelper()
  g_brickWallIds = new HashList<int>()

  g_metalWallHelper = new WallCardinalUnitDefinitionHelper()
  g_metalWallIds = new HashList<int>()

  initialize()
  createWallUnitVariations()