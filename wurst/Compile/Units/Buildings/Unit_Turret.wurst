package Unit_Turret
import UnitObjEditing
import TlsUnitIds
import UnitIds
import TlsAbilityIds
import ObjectIds
import TlsUpgradeIds
import Icons
import Abilities
import TlsBuildingDefinition
import GameConstants

public TlsBuildingDefinition g_turretPoweredDefinition
public TlsBuildingDefinition g_turretUnpoweredDefinition

// ============================================================================
public class TurretDefinition extends TlsBuildingDefinition
  construct(int id)
    super(id, UnitIds.guardtower)
    setName("Turret")
    setTooltipBasic("Build |cffffcc00T|rurret")
    setTooltipExtended("A ranged defensive contraption that can be highly effective when constructed in the right location. Requires a Generator nearby to function.")
    setHotkey("T")
    setAnimationCastBackswing(0.0)
    setButtonPositionX(3)
    setButtonPositionY(0)
    setDeathTimeseconds(0.8)
    setGroundTexture("")
    setIconGameInterface(Icons.bTNFlakCannons)
    setModelFile("Units\\Turret\\sentrygun.mdx")
    setProjectileLaunchZ(90.0)
    setRequiredAnimationNames("upgrade,second")
    setScalingValue(0.9)
    setSelectionScale(1.5)
    setShadowTextureBuilding("")
    setTintingColorRed(150)
    setTintingColorGreen(150)
    setTintingColorBlue(150)
    setAcquisitionRange(500.0)
    setArmorSoundType(ArmorSoundType.Metal)
    setAttack1CooldownTime(0.5)
    setAttack1DamageBase(5)
    setAttack1ProjectileArc(0)
    setAttack1ProjectileArt(Abilities.bristleBackMissile)
    setAttack1ProjectileSpeed(3000)
    setAttack1Range(600)
    setAttack1TargetsAllowed("debris,ground,item,structure")
    setDeathType(DeathType.CannotRaiseDoesNotDecay)
    setCollisionSize(16.0)
    setPathingMap("PathTextures\\2x2Default.tga")
    setPlacementRequires("unbuildable,unwalkable")
    setBuildTime(20)
    setHideMinimapDisplay(true)
    setHitPointsMaximumBase(250)
    setRepairTime(12)
    setUpgradesUsed("")
    setRequirements(commaList(TlsUnitIds.campTent, TlsUpgradeIds.blueprintsTurret))
    setUpgradesTo("")
    
    setGoldCost(20)
    setMaterialCost(150)
    setRepairGoldCost(R2I(getGoldCost() * BUILDING_REPAIR_GOLD_SCALAR))
    setRepairLumberCost(R2I(getLumberCost() * BUILDING_REPAIR_LUMBER_SCALAR))
    setRecycleGoldRewarded(getGoldCost())
    setRecycleLumberRewarded(getLumberCost())
    
// ============================================================================
@compiletime function createTurretPowered()
  g_turretPoweredDefinition = new TurretDefinition(TlsUnitIds.turretPowered)
    ..setNameEditorSuffix("(Powered)")
    ..setSightRadiusDay(256)
    ..setSightRadiusNight(256)
    ..setNormalAbilities(commaList(TlsAbilityIds.poweredMechanical, TlsAbilityIds.recycle))

// ============================================================================
@compiletime function createTurretUnpowered()
  g_turretUnpoweredDefinition = new TurretDefinition(TlsUnitIds.turretUnpowered)
    ..setNameEditorSuffix("(Unpowered)")
    ..setSightRadiusDay(128)
    ..setSightRadiusNight(128)
    ..setNormalAbilities(commaList(TlsAbilityIds.unpoweredMechanical, TlsAbilityIds.recycle))
    ..setAttacksEnabled(0)

// ============================================================================
@compiletime function createTurretPortable()
  new TurretDefinition(TlsUnitIds.turretPortable)
    ..setName("Portable Turret")
    ..setNameEditorSuffix("(Portable)")
    ..setScalingValue(0.6)
    ..setSelectionScale(1.2)
    ..setSightRadiusDay(256)
    ..setSightRadiusNight(256)
    ..setNormalAbilities(commaList(TlsAbilityIds.poweredMechanical))

// ============================================================================
init
  if (g_turretPoweredDefinition == null)
    createTurretPowered()
  if (g_turretUnpoweredDefinition == null)
    createTurretUnpowered()