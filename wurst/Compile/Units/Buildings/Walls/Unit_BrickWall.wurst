package Unit_BrickWall
import TlsUnitDefinition
import ObjectIdGenerator
import Unit_MetalWall
import TlsBuildingDefinition
import initlater Unit_StoneWall
import GameConstants
import TlsUpgradeIds
import HashList
import CardinalUnitDefinition
import BuildingUndeadTarget
import GateHelpers

public constant int BRICK_WALL_GOLD_COST = 5
public constant int BRICK_WALL_LUMBER_COST = 900
public constant int BRICK_WALL_REPAIR_GOLD_COST = R2I(BRICK_WALL_GOLD_COST * BUILDING_REPAIR_GOLD_SCALAR)
public constant int BRICK_WALL_REPAIR_LUMBER_COST = R2I(BRICK_WALL_LUMBER_COST * BUILDING_REPAIR_LUMBER_SCALAR)
public constant int BRICK_WALL_RECYCLE_GOLD_COST = STONE_WALL_RECYCLE_GOLD_COST + BRICK_WALL_GOLD_COST
public constant int BRICK_WALL_RECYCLE_LUMBER_COST = STONE_WALL_RECYCLE_LUMBER_COST + BRICK_WALL_LUMBER_COST

public constant int BRICK_WALL_REPAIR_TIME = 20
public constant int BRICK_WALL_BUILD_TIME = 10
public constant int BRICK_WALL_HEALTH = 2500
public constant int BRICK_WALL_ARMOR = 3
public constant real BRICK_WALL_SCALE_DIAGONAL = 0.60
public constant real BRICK_WALL_SCALE_HORIZONTAL = 0.65

public CardinalUnitDefinitionHelper g_brickWallHelper = new CardinalUnitDefinitionHelper()
public HashList<int> g_brickWallIds = new HashList<int>()

// ============================================================================
public class BrickWallIds
  static constant int ew = compiletime(UNIT_ID_GEN.next())
  static constant int nesw = compiletime(UNIT_ID_GEN.next())
  static constant int ns = compiletime(UNIT_ID_GEN.next())
  static constant int nwse = compiletime(UNIT_ID_GEN.next())

// ============================================================================
class BrickWallDefinition extends TlsBuildingDefinition
  construct(int newId)
    super(newId, UnitIds.scouttower)
    setName("Brick Wall")
    setShadowTextureBuilding("")
    setButtonPositionX(0)
    setButtonPositionY(0)
    setDeathTimeseconds(0.83)
    setGroundTexture("")
    setSelectionScale(4.0)
    setDeathType(DeathType.CannotRaiseDoesNotDecay)
    setArmorType(ArmorType.Fortified)
    setCollisionSize(0.0)
    setPlacementRequires("unbuildable,unwalkable")
    setBuildTime(BRICK_WALL_BUILD_TIME)
    setCanFlee(false)
    setHideMinimapDisplay(true)
    setHitPointsMaximumBase(BRICK_WALL_HEALTH)
    setDefenseBase(BRICK_WALL_ARMOR)
    setDefenseUpgradeBonus(2)
    
    setTintingColorRed(255)
    setTintingColorGreen(100)
    setTintingColorBlue(100)

    setGoldCost(BRICK_WALL_GOLD_COST)
    setMaterialCost(BRICK_WALL_LUMBER_COST)
    setRepairGoldCost(BRICK_WALL_REPAIR_GOLD_COST)
    setRepairLumberCost(BRICK_WALL_REPAIR_LUMBER_COST)
    setRecycleGoldRewarded(BRICK_WALL_RECYCLE_GOLD_COST)
    setRecycleLumberRewarded(BRICK_WALL_RECYCLE_LUMBER_COST)

    setRepairTime(BRICK_WALL_REPAIR_TIME)
    setSightRadiusDay(STRUCTURE_LARGE_SIGHT_RANGE_DAY)
    setSightRadiusNight(STRUCTURE_LARGE_SIGHT_RANGE_NIGHT)
    setNormalAbilities(commaList(TlsAbilityIds.recycle))
    setRequirements(commaList(TlsUnitIds.headquarters2))
    setUpgradesUsed(commaList(TlsUpgradeIds.campDefense))

    setTooltipBasic("Build Brick Wall")
    setTooltipExtended("Upgrade to a strong wall made of brick and cement.")

    this.makeBuildingUndeadTarget()

// ============================================================================
function createWallUnitVariations()
  let row = 2
  createWallUnitVariation(CardinalUnitAngle.EW, 0, row, "Vertical (EW)", BRICK_WALL_SCALE_HORIZONTAL)
  createWallUnitVariation(CardinalUnitAngle.NESW, 0, row, "Diagonal (NE SW)", BRICK_WALL_SCALE_DIAGONAL)
  createWallUnitVariation(CardinalUnitAngle.NS, 0, row, "Horizontal (NS)", BRICK_WALL_SCALE_HORIZONTAL)
  createWallUnitVariation(CardinalUnitAngle.NWSE, 0, row, "Diagonal (NW SE)", BRICK_WALL_SCALE_DIAGONAL)

// ============================================================================
function createWallUnitVariation(CardinalUnitAngle angle, int buttonPosX, int buttonPosY, string name, real scale) returns BrickWallDefinition
  let def = new BrickWallDefinition(g_brickWallHelper.getId(angle))
    ..setNameEditorSuffix(name + " (Wall Level 3)")
    ..setButtonPositionX(buttonPosX)
    ..setButtonPositionY(buttonPosY)
    ..setTooltipBasic("Upgrade to Brick Wall")
    ..setTooltipExtended("|cffffcc00" + name + "|r|nUpgrade to an even stronger wall made of brick and cement.")
    ..setScalingValue(scale)
    ..setIconGameInterface(g_brickWallHelper.getIconPath(angle))
    ..setModelFile(g_brickWallHelper.getModelPath(angle))
    ..setPathingMap(g_brickWallHelper.getPathMap(angle))
    
  let metalWallId = g_metalWallHelper.getId(angle)
  let gateId = g_gate3Helper.getId(angle)
  def.setUpgradesTo(commaList(metalWallId, gateId))

  return def

// ============================================================================
function initialize()

  g_brickWallIds
  ..add(BrickWallIds.ew)
  ..add(BrickWallIds.nesw)
  ..add(BrickWallIds.ns)
  ..add(BrickWallIds.nwse)

  g_brickWallHelper.setId(CardinalUnitAngle.NS, BrickWallIds.ns)
  g_brickWallHelper.setId(CardinalUnitAngle.NWSE, BrickWallIds.nwse)
  g_brickWallHelper.setId(CardinalUnitAngle.EW, BrickWallIds.ew)
  g_brickWallHelper.setId(CardinalUnitAngle.NESW, BrickWallIds.nesw)
  g_brickWallHelper.setPathMap(CardinalUnitAngle.NS, "Units\\Wall1\\Wall1_0.tga")
  g_brickWallHelper.setPathMap(CardinalUnitAngle.NWSE, "Units\\Wall1\\Wall1_45.tga")
  g_brickWallHelper.setPathMap(CardinalUnitAngle.EW, "Units\\Wall1\\Wall1_90.tga")
  g_brickWallHelper.setPathMap(CardinalUnitAngle.NESW, "Units\\Wall1\\Wall1_135.tga")
  g_brickWallHelper.setModelPath(CardinalUnitAngle.NS, "Doodads\\Ruins\\Terrain\\RuinsWall0\\RuinsWall02.mdl")
  g_brickWallHelper.setModelPath(CardinalUnitAngle.NWSE, "Doodads\\Ruins\\Terrain\\RuinsWall135\\RuinsWall1352.mdl")
  g_brickWallHelper.setModelPath(CardinalUnitAngle.EW, "Doodads\\Ruins\\Terrain\\RuinsWall90\\RuinsWall902.mdl")
  g_brickWallHelper.setModelPath(CardinalUnitAngle.NESW, "Doodads\\Ruins\\Terrain\\RuinsWall45\\RuinsWall452.mdl")
  g_brickWallHelper.setIconPath(CardinalUnitAngle.NS, "ReplaceableTextures\\CommandButtons\\BTNWall1_0.BLP")
  g_brickWallHelper.setIconPath(CardinalUnitAngle.NWSE, "ReplaceableTextures\\CommandButtons\\BTNWall1_45.BLP")
  g_brickWallHelper.setIconPath(CardinalUnitAngle.EW, "ReplaceableTextures\\CommandButtons\\BTNWall1_90.BLP")
  g_brickWallHelper.setIconPath(CardinalUnitAngle.NESW, "ReplaceableTextures\\CommandButtons\\BTNWall1_135.BLP")

// ============================================================================
init
  initialize()
  createWallUnitVariations()

// ============================================================================
@compiletime
function init_compiletime()
  g_brickWallHelper = new CardinalUnitDefinitionHelper()
  g_brickWallIds = new HashList<int>()
  initialize()
  createWallUnitVariations()