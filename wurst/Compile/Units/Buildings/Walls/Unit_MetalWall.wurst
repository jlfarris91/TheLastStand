package Unit_MetalWall
import TlsUnitDefinition
import ObjectIdGenerator
import Unit_Gate1
import TlsBuildingDefinition
import initlater Unit_StoneWall
import GameConstants
import TlsUpgradeIds
import CardinalUnitDefinition
import HashList

public constant int METAL_WALL_GOLD_COST = 10
public constant int METAL_WALL_LUMBER_COST = 260
public constant int METAL_WALL_REPAIR_GOLD_COST = R2I(METAL_WALL_GOLD_COST * BUILDING_REPAIR_GOLD_SCALAR)
public constant int METAL_WALL_REPAIR_LUMBER_COST = R2I(METAL_WALL_LUMBER_COST * BUILDING_REPAIR_LUMBER_SCALAR)
public constant int METAL_WALL_RECYCLE_GOLD_COST = STONE_WALL_RECYCLE_GOLD_COST + METAL_WALL_GOLD_COST
public constant int METAL_WALL_RECYCLE_LUMBER_COST = STONE_WALL_RECYCLE_LUMBER_COST + METAL_WALL_LUMBER_COST

public constant int METAL_WALL_REPAIR_TIME = 10
public constant int METAL_WALL_BUILD_TIME = 10
public constant int METAL_WALL_HEALTH = 2000
public constant real METAL_WALL_SCALE_DIAGONAL = 0.60
public constant real METAL_WALL_SCALE_HORIZONTAL = 0.65

public CardinalUnitDefinitionHelper g_metalWallHelper = new CardinalUnitDefinitionHelper()
public HashList<int> g_metalWallIds

// ============================================================================
public class MetalWallIds
  static constant int ew = compiletime(UNIT_ID_GEN.next())
  static constant int nesw = compiletime(UNIT_ID_GEN.next())
  static constant int ns = compiletime(UNIT_ID_GEN.next())
  static constant int nwse = compiletime(UNIT_ID_GEN.next())

// ============================================================================
class MetalWallDefinition extends TlsBuildingDefinition
  construct(int newId)
    super(newId, UnitIds.scouttower)
    setName("Metal Wall")
    setShadowTextureBuilding("")
    setButtonPositionX(0)
    setButtonPositionY(0)
    setDeathTimeseconds(0.83)
    setGroundTexture("")
    setSelectionScale(4.0)
    setDeathType(DeathType.CannotRaiseDoesNotDecay)
    setArmorType(ArmorType.Fortified)
    setCollisionSize(0.0)
    setPlacementRequires("unbuildable,unwalkable")
    setBuildTime(METAL_WALL_BUILD_TIME)
    setCanFlee(false)

    setGoldCost(METAL_WALL_GOLD_COST)
    setMaterialCost(METAL_WALL_LUMBER_COST)
    setRepairGoldCost(METAL_WALL_REPAIR_GOLD_COST)
    setRepairLumberCost(METAL_WALL_REPAIR_LUMBER_COST)
    setRecycleGoldRewarded(METAL_WALL_RECYCLE_GOLD_COST)
    setRecycleLumberRewarded(METAL_WALL_RECYCLE_LUMBER_COST)

    setHideMinimapDisplay(true)
    setHitPointsMaximumBase(METAL_WALL_HEALTH)
    setRepairTime(METAL_WALL_REPAIR_TIME)
    setSightRadiusDay(STRUCTURE_LARGE_SIGHT_RANGE_DAY)
    setSightRadiusNight(STRUCTURE_LARGE_SIGHT_RANGE_NIGHT)
    setNormalAbilities(commaList(TlsAbilityIds.recycle))
    setRequirements(commaList(TlsUnitIds.campHouse))
    setUpgradesUsed(commaList(TlsUpgradeIds.campDefense))

    setTooltipBasic("Build Fence")
    setTooltipExtended("Upgrade to a strong stone wall.")

// ============================================================================
function createWallUnitVariations()
  let row = 2
  createWallUnitVariation(CardinalUnitAngle.EW, 0, row, "Vertical (EW)", METAL_WALL_SCALE_HORIZONTAL)
  createWallUnitVariation(CardinalUnitAngle.NESW, 0, row, "Diagonal (NE SW)", METAL_WALL_SCALE_DIAGONAL)
  createWallUnitVariation(CardinalUnitAngle.NS, 0, row, "Horizontal (NS)", METAL_WALL_SCALE_HORIZONTAL)
  createWallUnitVariation(CardinalUnitAngle.NWSE, 0, row, "Diagonal (NW SE)", METAL_WALL_SCALE_DIAGONAL)

// ============================================================================
function createWallUnitVariation(CardinalUnitAngle angle, int buttonPosX, int buttonPosY, string name, real scale) returns MetalWallDefinition
  let def = new MetalWallDefinition(g_metalWallHelper.getId(angle))
    ..setNameEditorSuffix(name + " (Wall Level 3)")
    ..setButtonPositionX(buttonPosX)
    ..setButtonPositionY(buttonPosY)
    ..setTooltipBasic("Upgrade to Metal Wall")
    ..setTooltipExtended("|cffffcc00" + name + "|r|nUpgrade to even stronger metal walls.")
    ..setScalingValue(scale)
    ..setIconGameInterface(g_metalWallHelper.getIconPath(angle))
    ..setModelFile(g_metalWallHelper.getModelPath(angle))
    ..setPathingMap(g_metalWallHelper.getPathMap(angle))
    
  let gateId = g_gate1Helper.getId(angle)
  def.setUpgradesTo(commaList(gateId))

  return def

// ============================================================================
function initialize()

  g_metalWallHelper.setId(CardinalUnitAngle.NS, MetalWallIds.ns)
  g_metalWallHelper.setId(CardinalUnitAngle.NWSE, MetalWallIds.nwse)
  g_metalWallHelper.setId(CardinalUnitAngle.EW, MetalWallIds.ew)
  g_metalWallHelper.setId(CardinalUnitAngle.NESW, MetalWallIds.nesw)
  g_metalWallHelper.setPathMap(CardinalUnitAngle.NS, "Units\\Wall1\\Wall1_0.tga")
  g_metalWallHelper.setPathMap(CardinalUnitAngle.NWSE, "Units\\Wall1\\Wall1_45.tga")
  g_metalWallHelper.setPathMap(CardinalUnitAngle.EW, "Units\\Wall1\\Wall1_90.tga")
  g_metalWallHelper.setPathMap(CardinalUnitAngle.NESW, "Units\\Wall1\\Wall1_135.tga")
  g_metalWallHelper.setModelPath(CardinalUnitAngle.NS, "Doodads\\Icecrown\\Terrain\\IceCrownWall0\\IceCrownWall02.mdl")
  g_metalWallHelper.setModelPath(CardinalUnitAngle.NWSE, "Doodads\\Icecrown\\Terrain\\IceCrownWall135\\IceCrownWall1352.mdl")
  g_metalWallHelper.setModelPath(CardinalUnitAngle.EW, "Doodads\\Icecrown\\Terrain\\IceCrownWall90\\IceCrownWall902.mdl")
  g_metalWallHelper.setModelPath(CardinalUnitAngle.NESW, "Doodads\\Icecrown\\Terrain\\IceCrownWall45\\IceCrownWall452.mdl")
  g_metalWallHelper.setIconPath(CardinalUnitAngle.NS, "ReplaceableTextures\\CommandButtons\\BTNWall1_0.BLP")
  g_metalWallHelper.setIconPath(CardinalUnitAngle.NWSE, "ReplaceableTextures\\CommandButtons\\BTNWall1_45.BLP")
  g_metalWallHelper.setIconPath(CardinalUnitAngle.EW, "ReplaceableTextures\\CommandButtons\\BTNWall1_90.BLP")
  g_metalWallHelper.setIconPath(CardinalUnitAngle.NESW, "ReplaceableTextures\\CommandButtons\\BTNWall1_135.BLP")

// ============================================================================
init
  initialize()

  g_metalWallIds = new HashList<int>()
  ..add(MetalWallIds.ew)
  ..add(MetalWallIds.nesw)
  ..add(MetalWallIds.ns)
  ..add(MetalWallIds.nwse)

  createWallUnitVariations()

// ============================================================================
@compiletime
function init_compiletime()
  g_metalWallHelper = new CardinalUnitDefinitionHelper()
  initialize()
  createWallUnitVariations()