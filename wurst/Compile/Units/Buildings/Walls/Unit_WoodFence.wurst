package Unit_WoodFence
import TlsUnitDefinition
import ObjectIdGenerator
import Unit_Gate
import Unit_StoneWall
import TlsBuildingDefinition
import GameConstants
import TlsUpgradeIds
import HashList

public constant int WOOD_FENCE_GOLD_COST = 0
public constant int WOOD_FENCE_LUMBER_COST = 60
public constant int WOOD_FENCE_REPAIR_GOLD_COST = R2I(WOOD_FENCE_GOLD_COST * BUILDING_REPAIR_GOLD_SCALAR)
public constant int WOOD_FENCE_REPAIR_LUMBER_COST = R2I(WOOD_FENCE_LUMBER_COST * BUILDING_REPAIR_LUMBER_SCALAR)
public constant int WOOD_FENCE_RECYCLE_GOLD_COST = WOOD_FENCE_GOLD_COST
public constant int WOOD_FENCE_RECYCLE_LUMBER_COST = WOOD_FENCE_LUMBER_COST

public constant int WOOD_FENCE_REPAIR_TIME = 10
public constant int WOOD_FENCE_BUILD_TIME = 10
public constant int WOOD_FENCE_HEALTH = 500

WoodFenceDefinition array g_woodFenceDefs
public HashList<int> g_woodFenceIds

// ============================================================================
public class WoodFenceIds
  static constant int ew = compiletime(UNIT_ID_GEN.next())
  static constant int nesw = compiletime(UNIT_ID_GEN.next())
  static constant int ns = compiletime(UNIT_ID_GEN.next())
  static constant int nwse = compiletime(UNIT_ID_GEN.next())

// ============================================================================
class WoodFenceDefinition extends TlsBuildingDefinition
  construct(int newId, int angle)
    super(newId, UnitIds.scouttower)
    setName("Wood Fence")
    setShadowTextureBuilding("")
    setButtonPositionX(0)
    setButtonPositionY(0)
    setDeathTimeseconds(0.83)
    setGroundTexture("")
    setSelectionScale(4.0)
    setDeathType(DeathType.CannotRaiseDoesNotDecay)
    setArmorType(ArmorType.Fortified)
    setCollisionSize(0.0)
    setPlacementRequires("unbuildable,unwalkable")
    setBuildTime(WOOD_FENCE_BUILD_TIME)
    setCanFlee(false)
    
    setGoldCost(WOOD_FENCE_GOLD_COST)
    setMaterialCost(WOOD_FENCE_LUMBER_COST)
    setRepairGoldCost(WOOD_FENCE_REPAIR_GOLD_COST)
    setRepairLumberCost(WOOD_FENCE_REPAIR_LUMBER_COST)
    setRecycleGoldRewarded(WOOD_FENCE_RECYCLE_GOLD_COST)
    setRecycleLumberRewarded(WOOD_FENCE_RECYCLE_LUMBER_COST)

    setHideMinimapDisplay(true)
    setHitPointsMaximumBase(WOOD_FENCE_HEALTH)
    setRepairTime(WOOD_FENCE_REPAIR_TIME)
    setSightRadiusDay(STRUCTURE_LARGE_SIGHT_RANGE_DAY)
    setSightRadiusNight(STRUCTURE_LARGE_SIGHT_RANGE_NIGHT)
    setNormalAbilities(commaList(TlsAbilityIds.recycle))
    setRequirements(commaList(TlsUnitIds.campTent))
    setUpgradesUsed(commaList(TlsUpgradeIds.campDefense))
    
    setIconGameInterface(WoodFenceUtility.getIcon(angle))
    setModelFile(WoodFenceUtility.getModelPath(angle))
    setPathingMap(WoodFenceUtility.getPathMap(angle))
    
    let stoneWallId = StoneWallUtility.getId(angle)
    let gateId = GateUtility.getBuildGateId(angle)
    setUpgradesTo(commaList(stoneWallId, gateId))

    setTooltipBasic("Build Wood Fence")
    setTooltipExtended("Build a wood fence the offers a sturdy protection against intruders.")

// ============================================================================
@compiletime
function createWallUnitVariations()
  let row = 1
  g_woodFenceDefs[0] = createWallUnitVariation(315, 0, row, "Diagonal (NE SW)")
  g_woodFenceDefs[1] = createWallUnitVariation(0, 1, row, "Horizontal (NS)")
  g_woodFenceDefs[2] = createWallUnitVariation(90, 2, row, "Vertical (EW)")
  g_woodFenceDefs[3] = createWallUnitVariation(45, 3, row, "Diagonal (NW SE)")

// ============================================================================
function createWallUnitVariation(int angle, int buttonPosX, int buttonPosY, string name) returns WoodFenceDefinition
  return new WoodFenceDefinition(WoodFenceUtility.getId(angle), angle)
    ..setNameEditorSuffix(name + "(Wall Level 1)")
    ..setButtonPositionX(buttonPosX)
    ..setButtonPositionY(buttonPosY)
    ..setTooltipBasic("Build Wood Fence")
    ..setTooltipExtended("|cffffcc00" + name + "|r|nBuild a wood fence the offers a sturdy protection against intruders.")

// ============================================================================
public function unit.isWoodFence() returns bool
  let unitTypeId = this.getTypeId()
  return unitTypeId == WoodFenceIds.ew or
         unitTypeId == WoodFenceIds.nesw or
         unitTypeId == WoodFenceIds.ns or
         unitTypeId == WoodFenceIds.nwse

// ============================================================================
public class WoodFenceUtility

  // --------------------------------------------------------------------------
  static function getId(int angle) returns int
    switch (angle)
      case 0
        return WoodFenceIds.ns
      case 45
        return WoodFenceIds.nwse
      case 90
        return WoodFenceIds.ew
      case 315
        return WoodFenceIds.nesw
    return -1

  // --------------------------------------------------------------------------
  static function getPathMap(int angle) returns string
    switch (angle)
      case 0
        return "Units\\Wall1\\Wall1_0.tga"
      case 45
        return "Units\\Wall1\\Wall1_45.tga"
      case 90
        return "Units\\Wall1\\Wall1_90.tga"
      case 315
        return "Units\\Wall1\\Wall1_135.tga"
    return ""

  // --------------------------------------------------------------------------
  static function getModelPath(int angle) returns string
    switch (angle)
      case 0
        return "Units\\Wall1\\Wall1_0.mdx"
      case 45
        return "Units\\Wall1\\Wall1_45.mdx"
      case 90
        return "Units\\Wall1\\Wall1_90.mdx"
      case 315
        return "Units\\Wall1\\Wall1_135.mdx"
    return ""

  // --------------------------------------------------------------------------
  static function getIcon(int angle) returns string
    switch (angle)
      case 0
        return "ReplaceableTextures\\CommandButtons\\BTNWall1_0.BLP"
      case 45
        return "ReplaceableTextures\\CommandButtons\\BTNWall1_45.BLP"
      case 90
        return "ReplaceableTextures\\CommandButtons\\BTNWall1_90.BLP"
      case 315
        return "ReplaceableTextures\\CommandButtons\\BTNWall1_135.BLP"
    return ""

// ============================================================================
init
  g_woodFenceIds = new HashList<int>()
  ..add(WoodFenceIds.ew)
  ..add(WoodFenceIds.nesw)
  ..add(WoodFenceIds.ns)
  ..add(WoodFenceIds.nwse)

  createWallUnitVariations()