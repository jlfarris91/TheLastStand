package Unit_WoodFence
import ObjectIdGenerator
import Unit_StoneWall
import TlsBuildingDefinition
import GameConstants
import TlsUpgradeIds
import HashList
import CardinalUnitDefinition
import BuildingUndeadTarget

public constant int WOOD_FENCE_GOLD_COST = 0
public constant int WOOD_FENCE_LUMBER_COST = 100
public constant int WOOD_FENCE_REPAIR_GOLD_COST = R2I(WOOD_FENCE_GOLD_COST * BUILDING_REPAIR_GOLD_SCALAR)
public constant int WOOD_FENCE_REPAIR_LUMBER_COST = R2I(WOOD_FENCE_LUMBER_COST * BUILDING_REPAIR_LUMBER_SCALAR)
public constant int WOOD_FENCE_RECYCLE_GOLD_COST = WOOD_FENCE_GOLD_COST
public constant int WOOD_FENCE_RECYCLE_LUMBER_COST = WOOD_FENCE_LUMBER_COST

public constant int WOOD_FENCE_REPAIR_TIME = 10
public constant int WOOD_FENCE_BUILD_TIME = 10
public constant int WOOD_FENCE_HEALTH = 625
public constant int WOOD_FENCE_ARMOR = 1

CardinalUnitDefinitionHelper g_woodFenceHelper = new CardinalUnitDefinitionHelper()
public HashList<int> g_woodFenceIds = new HashList<int>()

// ============================================================================
public class WoodFenceIds
  static constant int ew = compiletime(UNIT_ID_GEN.next())
  static constant int nesw = compiletime(UNIT_ID_GEN.next())
  static constant int ns = compiletime(UNIT_ID_GEN.next())
  static constant int nwse = compiletime(UNIT_ID_GEN.next())

// ============================================================================
class WoodFenceDefinition extends TlsBuildingDefinition
  construct(int newId)
    super(newId, UnitIds.scouttower)
    this.makeBuildingUndeadTarget()
    setName("Wood Fence")
    setShadowTextureBuilding("")
    setButtonPositionX(1)
    setButtonPositionY(0)
    setDeathTimeseconds(0.83)
    setGroundTexture("")
    setSelectionScale(4.0)
    setDeathType(DeathType.CannotRaiseDoesNotDecay)
    setArmorType(ArmorType.Fortified)
    setCollisionSize(0.0)
    setPlacementRequires("unbuildable,unwalkable")
    setBuildTime(WOOD_FENCE_BUILD_TIME)
    setCanFlee(false)
    
    setGoldCost(WOOD_FENCE_GOLD_COST)
    setLumberCost(WOOD_FENCE_LUMBER_COST)
    setRepairGoldCost(WOOD_FENCE_REPAIR_GOLD_COST)
    setRepairLumberCost(WOOD_FENCE_REPAIR_LUMBER_COST)
    setRecycleGoldRewarded(WOOD_FENCE_RECYCLE_GOLD_COST)
    setRecycleLumberRewarded(WOOD_FENCE_RECYCLE_LUMBER_COST)
    setDefenseBase(WOOD_FENCE_ARMOR)
    setDefenseUpgradeBonus(2)

    setHideMinimapDisplay(true)
    setHitPointsMaximumBase(WOOD_FENCE_HEALTH)
    setRepairTime(WOOD_FENCE_REPAIR_TIME)
    setSightRadiusDay(STRUCTURE_LARGE_SIGHT_RANGE_DAY)
    setSightRadiusNight(STRUCTURE_LARGE_SIGHT_RANGE_NIGHT)
    setNormalAbilities(commaList(TlsAbilityIds.recycle))
    setRequirements(commaList(TlsUnitIds.obelisk))
    setUpgradesUsed(commaList(TlsUpgradeIds.campDefense))

    setHotkey("F")

    setTooltipBasic("Build Wood Fence")
    setTooltipExtended("Build a wood fence the offers a sturdy protection against intruders.")

// ============================================================================
function createWallUnitVariations()
  createWallUnitVariation(CardinalUnitAngle.EW, 0, 1, "Vertical (EW)")
  createWallUnitVariation(CardinalUnitAngle.NESW, 0, 1, "Diagonal (NE SW)")
  createWallUnitVariation(CardinalUnitAngle.NS, 0, 1, "Horizontal (NS)")
  createWallUnitVariation(CardinalUnitAngle.NWSE, 0, 1, "Diagonal (NW SE)")

// ============================================================================
function createWallUnitVariation(CardinalUnitAngle angle, int buttonPosX, int buttonPosY, string name) returns WoodFenceDefinition
  let def = new WoodFenceDefinition(g_woodFenceHelper.getId(angle))
    ..setNameEditorSuffix(name + "(Wall Level 1)")
    ..setButtonPositionX(buttonPosX)
    ..setButtonPositionY(buttonPosY)
    ..setTooltipBasic("Build Wood Fence")
    ..setTooltipExtendedRotatable("|cffffcc00" + name + "|r|nBuild a wood fence the offers a sturdy protection against intruders.")    
    ..setIconGameInterface(g_woodFenceHelper.getIconPath(angle))
    ..setModelFile(g_woodFenceHelper.getModelPath(angle))
    ..setPathingMap(g_woodFenceHelper.getPathMap(angle))
    
  let stoneWallId = g_stoneWallHelper.getId(angle)
  // let gateId = g_gate1Helper.getId(angle)
  def.setUpgradesTo(commaList(stoneWallId))

  return def

// ============================================================================
public function unit.isWoodFence() returns bool
  return g_woodFenceIds.has(this.getTypeId())

// ============================================================================
function initialize()

  g_woodFenceIds
  ..add(WoodFenceIds.ew)
  ..add(WoodFenceIds.nesw)
  ..add(WoodFenceIds.ns)
  ..add(WoodFenceIds.nwse)

  g_woodFenceHelper.setId(CardinalUnitAngle.NS, WoodFenceIds.ns)
  g_woodFenceHelper.setId(CardinalUnitAngle.NWSE, WoodFenceIds.nwse)
  g_woodFenceHelper.setId(CardinalUnitAngle.EW, WoodFenceIds.ew)
  g_woodFenceHelper.setId(CardinalUnitAngle.NESW, WoodFenceIds.nesw)
  g_woodFenceHelper.setPathMap(CardinalUnitAngle.NS, "Units\\Wall1\\Wall1_0.tga")
  g_woodFenceHelper.setPathMap(CardinalUnitAngle.NWSE, "Units\\Wall1\\Wall1_45.tga")
  g_woodFenceHelper.setPathMap(CardinalUnitAngle.EW, "Units\\Wall1\\Wall1_90.tga")
  g_woodFenceHelper.setPathMap(CardinalUnitAngle.NESW, "Units\\Wall1\\Wall1_135.tga")
  g_woodFenceHelper.setModelPath(CardinalUnitAngle.NS, "Units\\Wall1\\Wall1_0.mdx")
  g_woodFenceHelper.setModelPath(CardinalUnitAngle.NWSE, "Units\\Wall1\\Wall1_45.mdx")
  g_woodFenceHelper.setModelPath(CardinalUnitAngle.EW, "Units\\Wall1\\Wall1_90.mdx")
  g_woodFenceHelper.setModelPath(CardinalUnitAngle.NESW, "Units\\Wall1\\Wall1_135.mdx")
  g_woodFenceHelper.setIconPath(CardinalUnitAngle.NS, "ReplaceableTextures\\CommandButtons\\BTNWall1_0.BLP")
  g_woodFenceHelper.setIconPath(CardinalUnitAngle.NWSE, "ReplaceableTextures\\CommandButtons\\BTNWall1_45.BLP")
  g_woodFenceHelper.setIconPath(CardinalUnitAngle.EW, "ReplaceableTextures\\CommandButtons\\BTNWall1_90.BLP")
  g_woodFenceHelper.setIconPath(CardinalUnitAngle.NESW, "ReplaceableTextures\\CommandButtons\\BTNWall1_135.BLP")

// ============================================================================
init
  initialize()
  createWallUnitVariations()

// ============================================================================
@compiletime
function init_compiletime()
  g_woodFenceHelper = new CardinalUnitDefinitionHelper()
  g_woodFenceIds = new HashList<int>()
  initialize()
  createWallUnitVariations()