package Unit_Forge
import Icons
import Buildings
import TlsBuildingDefinition
import TlsUpgradeIds
import GameConstants
import BuildingUndeadTarget
import AbilityIds

public TlsBuildingDefinition g_forgeDefinition

// ============================================================================
@compiletime function createCompiletimeObjects()
  g_forgeDefinition = new TlsBuildingDefinition(TlsUnitIds.forge, UnitIds.warmill)
    ..makeBuildingUndeadTarget()
    ..setName("Forge")
    ..setTooltipBasic("Build Forge")
    ..setTooltipExtended("Recycles undesirable items into more valuable items.")
    ..setHotkey("F")
    ..setButtonPositionX(1)
    ..setButtonPositionY(1)
    ..setGroundTexture("HSMA")
    ..setIconGameInterface(Icons.bTNForge)
    ..setModelFile(Buildings.warMill)
    ..setScalingValue(0.65)
    ..setSelectionScale(2.75)
    ..setTintingColorRed(150)
    ..setTintingColorBlue(150)
    ..setTintingColorGreen(150)
    ..setArmorType(ArmorType.Fortified)
    ..setCollisionSize(128.0)
    ..setPathingMap(BUILDING_MEDIUM_PATH_MAP)
    ..setBuildTime(BUILD_TIME_BUILDING_MEDIUM)
    ..setRepairTime(REPAIR_TIME_BUILDING_MEDIUM)
    ..setPlacementRequires("unbuildable,unwalkable")
    ..setSightRadiusDay(STRUCTURE_LARGE_SIGHT_RANGE_DAY)
    ..setSightRadiusNight(STRUCTURE_LARGE_SIGHT_RANGE_NIGHT)
    ..setRequirements(commaList(TlsUnitIds.workbench))
    ..setUnitsTrained("")
    ..setUpgradesUsed(commaList(TlsUpgradeIds.campDefense))
    ..setResearchesAvailable("")
    ..setNormalAbilities(commaList(
        TlsAbilityIds.blightDispelSmall,
        TlsAbilityIds.buildingInventory,
        AbilityIds.selectHero,
        TlsAbilityIds.recycle,
        'Asud'))
    ..setUnitsTrained("")
    ..setHotkey("O")
    
    ..setHitPointsMaximumBase(500)
    ..setArmorType(ArmorType.Fortified)
    ..setDefenseBase(0)

    ..setGoldCost(0)
    ..setLumberCost(300)

    ..setCommonBuildingProperties()

// ============================================================================
init
  if (g_forgeDefinition == null)
    createCompiletimeObjects()