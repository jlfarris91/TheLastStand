package Unit_Generator
import UnitObjEditing
import TlsUnitIds
import UnitIds
import Icons
import Units
import ObjectIds
import TlsAbilityIds
import TlsUpgradeIds
import TlsBuildingDefinition
import GameConstants

public TlsBuildingDefinition g_generatorDefinition

// ============================================================================
public class GeneratorDefinition extends TlsBuildingDefinition
  construct(int newId)
    super(newId, UnitIds.scouttower)
    setName("Generator")
    setTooltipBasic("Build |cffffcc00G|renerator")
    setTooltipExtended("Used to power mechanical structures such as turrets, lamps and houses. Place a generator directly next to the mechanical structure to power it.")
    setHotkey("G")
    setButtonPositionX(0)
    setButtonPositionY(0)
    setDeathTimeseconds(1.0)
    setGroundTexture("")
    setShadowTextureBuilding("")
    setIconGameInterface(Icons.bTNPocketFactory)
    setModelFile(Units.heroTinkerFactory)
    setScalingValue(0.25)
    setSelectionScale(1.5)
    setTintingColorRed(100)
    setTintingColorBlue(100)
    setTintingColorGreen(100)
    setArmorType(ArmorType.Fortified)
    setDeathType(DeathType.CannotRaiseDoesNotDecay)
    setPathingMap("PathTextures\\2x2Default.tga")
    setPlacementRequires("unbuildable,unwalkable")
    setBuildTime(10)
    setHideMinimapDisplay(true)
    setHitPointsMaximumBase(300)
    setRepairTime(10)
    setSightRadiusDay(STRUCTURE_SMALL_SIGHT_RANGE_DAY)
    setSightRadiusNight(STRUCTURE_SMALL_SIGHT_RANGE_NIGHT)
    setNormalAbilities(commaList(
        TlsAbilityIds.recycle,
        TlsAbilityIds.electricityGenerator))
    setRequirements(commaList(
        TlsUpgradeIds.blueprintsGenerator))
    setUnitsTrained("")
    setUpgradesUsed("")
    setResearchesAvailable("")
    setRequirements(commaList(TlsUnitIds.headquarters1))

    setGoldCost(10)
    setMaterialCost(45)
    setRepairGoldCost(R2I(getGoldCost() * BUILDING_REPAIR_GOLD_SCALAR))
    setRepairLumberCost(R2I(getLumberCost() * BUILDING_REPAIR_LUMBER_SCALAR))
    setRecycleGoldRewarded(getGoldCost())
    setRecycleLumberRewarded(getLumberCost())

// ============================================================================
@compiletime function createGenerator()
  g_generatorDefinition = new GeneratorDefinition(TlsUnitIds.generator)    

// ============================================================================
init
  createGenerator()