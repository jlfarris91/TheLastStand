package Unit_Armory
import UnitObjEditing
import TlsUnitIds
import UnitIds
import Icons
import Buildings
import TlsAbilityIds
import ObjectIds
import TlsBuildingDefinition
import GameConstants
import TlsUpgradeIds

public TlsBuildingDefinition g_armoryDefinition

// ============================================================================
class ArmoryBuildingDefinition extends TlsBuildingDefinition
  construct(int newId)
    super(newId, UnitIds.workshop)
    setName("Armory")
    setTooltipBasic("Build Armory")
    setTooltipExtended("Allows for the construction of weapons to increase damage, fire rate, and range.|n|cffffcc00Allows for the training of Marksman.|r")
    setHotkey("L")
    setButtonPositionX(1)
    setButtonPositionY(0)
    setGroundTexture("")
    setIconGameInterface(Icons.bTNBlacksmith)
    setModelFile(Buildings.blacksmith)
    setScalingValue(0.75)
    setSelectionScale(2.0)
    setShadowTextureBuilding("")
    setTintingColorRed(150)
    setTintingColorBlue(150)
    setTintingColorGreen(150)
    setArmorType(ArmorType.Fortified)
    setPathingMap("PathTextures\\6x6SimpleSolid.tga")
    setPlacementRequires("unbuildable,unwalkable")
    setHideMinimapDisplay(true)
    setHitPointsMaximumBase(500)
    setRepairTime(10)
    setSightRadiusDay(400)
    setSightRadiusNight(400)
    setRequirements(commaList(TlsUnitIds.campTent))
    setUnitsTrained("")
    setUpgradesUsed(commaList(TlsUpgradeIds.campDefense))
    setResearchesAvailable(commaList(
      TlsUpgradeIds.militiaArmor,
      TlsUpgradeIds.militiaAttackDamage,
      TlsUpgradeIds.militiaAttackSpeed))

    setNormalAbilities(commaList(
      TlsAbilityIds.recycle,
      TlsAbilityIds.blightDispelSmall))
    setUnitsTrained(commaList(
      TlsUnitIds.BuildItemUnits.buildRustySword,
      TlsUnitIds.BuildItemUnits.buildHuntingRifle))

    setGoldCost(0)
    setMaterialCost(150)
    setRepairGoldCost(R2I(getGoldCost() * BUILDING_REPAIR_GOLD_SCALAR))
    setRepairLumberCost(R2I(getLumberCost() * BUILDING_REPAIR_LUMBER_SCALAR))
    setRecycleGoldRewarded(getGoldCost())
    setRecycleLumberRewarded(getLumberCost())

// ============================================================================
@compiletime function createArmory()
  g_armoryDefinition = new ArmoryBuildingDefinition(TlsUnitIds.armory)

// ============================================================================
init
  createArmory()