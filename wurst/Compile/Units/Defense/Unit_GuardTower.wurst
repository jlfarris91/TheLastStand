package Unit_GuardTower
import TlsBuildingDefinition
import BuildingUndeadTarget
import GameConstants
import TlsUpgradeIds
import TlsUnitDefinitionBuilder
import Range

public TlsBuildingDefinition array[3] g_guardTowerDefinition

public constant rangeInt            GUARD_TOWER_ATTACK_RANGE              = rangeInt(400, 800)
public constant rangeReal array[3]  GUARD_TOWER_ATTACK_COOLDOWN           = [rangeReal(2.0, 1.0), rangeReal(1.8, 0.8), rangeReal(1.6, 0.6)]
public constant rangeInt array[3]   GUARD_TOWER_ATTACK_DAMAGE_BASE        = [rangeInt(50, 100), rangeInt(100, 150), rangeInt(150, 200)]
public constant string array[3]     GUARD_TOWER_NAME                      = ["Guard Tower I", "Guard Tower II", "Guard Tower III"]

// ============================================================================
public class GuardTowerDefinition extends TlsBuildingDefinition
  construct(int newId)
    super(newId, UnitIds.guardtower)
    addUndeadTargetBuildingDefinition(newId, false)
    setName("Guard Tower")
    setButtonPositionX(2)
    setButtonPositionY(0)
    setDeathTimeseconds(1.0)
    //setIconGameInterface("ReplaceableTextures\\CommandButtons\\BTNWorkbench.dds")
    //setModelFile("Units\\Workbench\\Workbench.mdx")
    setScalingValue(1.0)
    setSelectionScale(3.0)
    setTintingColorRed(200)
    setTintingColorBlue(200)
    setTintingColorGreen(200)
    setPlacementRequires("unbuildable,unwalkable")
    setHideMinimapDisplay(true)
    setRepairTime(10)
    setSightRadiusDay(STRUCTURE_LARGE_SIGHT_RANGE_DAY)
    setSightRadiusNight(STRUCTURE_LARGE_SIGHT_RANGE_NIGHT)
    setRequirements(commaList(TlsUnitIds.workshop))
    setUpgradesUsed(commaList(TlsUpgradeIds.campDefense))
    setNormalAbilities(commaList(
      TlsAbilityIds.recycle,
      TlsAbilityIds.blightDispelSmall,
      TlsAbilityIds.workstationLoadUnit,
      TlsAbilityIds.workstationUnloadUnit,
      TlsAbilityIds.inventory2Slots))
    setUnitsTrained("")
    setUpgradesTo("")

    setAttacksEnabled(1)
    
    setHitPointsMaximumBase(500)
    setArmorType(ArmorType.Fortified)
    setDefenseBase(0)

    setGoldCost(2)
    setMaterialCost(400)
    this.setCommonBuildingProperties()    

    setHotkey("G")
    setTooltipBasic("Build Guard Tower")

// ============================================================================
@compiletime function createUnit()

  g_guardTowerDefinition[0] = new GuardTowerDefinition(TlsUnitIds.guardTowers[0])
    ..setName(GUARD_TOWER_NAME[0])
    ..setTooltipBasic("Build " + GUARD_TOWER_NAME[0])
    ..setScalingValue(0.9)
    ..addUnitClass(TlsUnitClassification.BUILDING)
    ..addUnitClass(TlsUnitClassification.RANGED)
    ..addUnitClass(TlsUnitClassification.WORKSTATION)
    ..build("A tall tower fitted with a crossbow that can fire a variable distance when operated by a survivor.",
      tooltipBuilder -> begin
        let workstationItem = new TooltipItem("[Operator Bonuses]")
        ..addValue("Increased attack range, speed and damage")
        tooltipBuilder.addItem(workstationItem)
      end)
    ..setAttack1DamageBase(GUARD_TOWER_ATTACK_DAMAGE_BASE[0].min)
    ..setAttack1CooldownTime(GUARD_TOWER_ATTACK_COOLDOWN[0].min)
    ..setAttack1Range(GUARD_TOWER_ATTACK_RANGE.min)
    ..setUpgradesTo(commaList(TlsUnitIds.guardTowers[1]))

  g_guardTowerDefinition[1] = new GuardTowerDefinition(TlsUnitIds.guardTowers[1])
    ..setName(GUARD_TOWER_NAME[1])
    ..setTooltipBasic("Upgrade to " + GUARD_TOWER_NAME[1])
    ..setScalingValue(1.0)
    ..addUnitClass(TlsUnitClassification.BUILDING)
    ..addUnitClass(TlsUnitClassification.RANGED)
    ..addUnitClass(TlsUnitClassification.WORKSTATION)
    ..build("A slightly taller tower fitted with a crossbow that can fire a variable distance when operated by a survivor.",
      tooltipBuilder -> begin
        let workstationItem = new TooltipItem("[Operator Bonuses]")
        ..addValue("Increased attack range, speed and damage")
        tooltipBuilder.addItem(workstationItem)
      end)
    ..setAttack1DamageBase(GUARD_TOWER_ATTACK_DAMAGE_BASE[1].min)
    ..setAttack1CooldownTime(GUARD_TOWER_ATTACK_COOLDOWN[1].min)
    ..setAttack1Range(GUARD_TOWER_ATTACK_RANGE.min)
    ..setUpgradesTo(commaList(TlsUnitIds.guardTowers[2]))
    ..setButtonPositionX(0)
    ..setButtonPositionY(1)
    ..setGoldCost(2)
    ..setLumberCost(800)

  g_guardTowerDefinition[2] = new GuardTowerDefinition(TlsUnitIds.guardTowers[2])
    ..setName(GUARD_TOWER_NAME[2])
    ..setTooltipBasic("Upgrade to " + GUARD_TOWER_NAME[2])
    ..setScalingValue(1.1)
    ..addUnitClass(TlsUnitClassification.BUILDING)
    ..addUnitClass(TlsUnitClassification.RANGED)
    ..addUnitClass(TlsUnitClassification.WORKSTATION)
    ..build("A slightly taller tower fitted with a crossbow that can fire a variable distance when operated by a survivor.",
      tooltipBuilder -> begin
        let workstationItem = new TooltipItem("[Operator Bonuses]")
        ..addValue("Increased attack range, speed and damage")
        tooltipBuilder.addItem(workstationItem)
      end)
    ..setAttack1DamageBase(GUARD_TOWER_ATTACK_DAMAGE_BASE[2].min)
    ..setAttack1CooldownTime(GUARD_TOWER_ATTACK_COOLDOWN[2].min)
    ..setAttack1Range(GUARD_TOWER_ATTACK_RANGE.min)
    ..setButtonPositionX(0)
    ..setButtonPositionY(1)
    ..setGoldCost(2)
    ..setLumberCost(1200)

// ============================================================================
init
  createUnit()