package TlsUnitDefinition
import public UnitObjEditing
import public TlsUnitIds
import public ObjectIds
import public TlsAbilityIds
import public TlsObjEditingCommons
import public UnitIds
import HashMap
import UnitDefinitionInitModule

HashMap<int, ITlsUnitDefinition> g_unitIdToDefinitionMap

// ============================================================================
public function registerUnitDefinition(int unitId, ITlsUnitDefinition def)
  if (not compiletime)
    g_unitIdToDefinitionMap.put(unitId, def)

// ============================================================================
public function getUnitDefinition(int unitId) returns ITlsUnitDefinition
  return not compiletime ? g_unitIdToDefinitionMap.get(unitId) : null

// ============================================================================
public function unit.getUnitDefinition() returns ITlsUnitDefinition
  return getUnitDefinition(this.getTypeId())

// ============================================================================
public function unit.getRecycleGoldRewarded() returns int
  let def = getUnitDefinition(this.getTypeId())
  return def != null ? def.getRecycleGoldRewarded() : 0

// ============================================================================
public function unit.getRecycleLumberRewarded() returns int
  let def = getUnitDefinition(this.getTypeId())
  return def != null ? def.getRecycleLumberRewarded() : 0

// ============================================================================
public interface ITlsUnitDefinition
  function getNewId() returns int
  function getBaseId() returns int
  function getName() returns string
  function getModelFile() returns string
  function getArmorType() returns ArmorType
  function getAttack1DamageBase() returns int
  function getAttack1DamageNumberofDice() returns int
  function getAttack1DamageSidesperDie() returns int
  function getAttack1Range() returns int
  function getAttack1CooldownTime() returns real
  function getAttack1AttackType() returns AttackType
  function getHitPointsMaximumBase() returns int
  function getMaximumMana() returns int
  function getAttacksEnabled() returns int
  function getTooltipBasic() returns string
  function getTooltipExtended() returns string
  function getGoldCost() returns int
  function getLumberCost() returns int
  function getMaterialCost() returns int
  function getRecycleGoldRewarded() returns int
  function getRecycleLumberRewarded() returns int

// ============================================================================
public class TlsUnitDefinition extends UnitDefinition implements ITlsUnitDefinition
  private string m_name
  private string m_modelFile
  private ArmorType m_armorType
  private int m_attack1DamageBase
  private int m_attack1DamageNumberofDice
  private int m_attack1DamageSidesperDie
  private int m_attack1Range
  private int m_hitPointsMaximumBase
  private int m_manaMaximum
  private AttackType m_attack1AttackType
  private real m_attack1CooldownTime
  private int m_attacksEnabled
  private string m_tooltipBasic
  private string m_tooltipExtended
  private int m_goldCost
  private int m_lumberCost
  private int m_recycleGoldRewarded
  private int m_recycleLumberRewarded

  public use UnitDefinitionInitModule

  // --------------------------------------------------------------------------
  construct(int newId, int baseId)
    super(newId, baseId)
    init_all()
    if (not compiletime)
      registerUnitDefinition(newId, this)

  // --------------------------------------------------------------------------
  override function getNewId() returns int
    return super.getNewId()

  // --------------------------------------------------------------------------
  override function getBaseId() returns int
    return super.getBaseId()

  // --------------------------------------------------------------------------
  override function setName(string value)
    super.setName(value)
    m_name = value

  // --------------------------------------------------------------------------    
  override function getName() returns string
    return m_name

  // --------------------------------------------------------------------------
  override function setModelFile(string value)
    super.setModelFile(value)
    m_modelFile = value

  // --------------------------------------------------------------------------    
  override function getModelFile() returns string
    return m_modelFile

  // --------------------------------------------------------------------------
  override function setArmorType(ArmorType armorType)
    super.setArmorType(armorType)
    m_armorType = armorType

  // --------------------------------------------------------------------------    
  override function getArmorType() returns ArmorType
    return m_armorType

  // --------------------------------------------------------------------------
  override function setAttack1DamageBase(int value)
    super.setAttack1DamageBase(value)
    m_attack1DamageBase = value

  // --------------------------------------------------------------------------
  override function getAttack1DamageBase() returns int
    return m_attack1DamageBase

  // --------------------------------------------------------------------------
  override function setAttack1DamageNumberofDice(int value)
    super.setAttack1DamageNumberofDice(value)
    m_attack1DamageNumberofDice = value

  // --------------------------------------------------------------------------
  override function getAttack1DamageNumberofDice() returns int
    return m_attack1DamageNumberofDice

  // --------------------------------------------------------------------------
  override function setAttack1DamageSidesperDie(int value)
    super.setAttack1DamageSidesperDie(value)
    m_attack1DamageSidesperDie = value

  // --------------------------------------------------------------------------
  override function getAttack1DamageSidesperDie() returns int
    return m_attack1DamageSidesperDie
  
  // --------------------------------------------------------------------------
  override function setAttack1Range(int value)
    super.setAttack1Range(value)
    m_attack1Range = value
  
  // --------------------------------------------------------------------------
  override function getAttack1Range() returns int
    return m_attack1Range
  
  // --------------------------------------------------------------------------
  override function setHitPointsMaximumBase(int value)
    super.setHitPointsMaximumBase(value)
    m_hitPointsMaximumBase = value
  
  // --------------------------------------------------------------------------
  override function getHitPointsMaximumBase() returns int
    return m_hitPointsMaximumBase
  
  // --------------------------------------------------------------------------
  override function setManaMaximum(int value)
    super.setManaMaximum(value)
    m_manaMaximum = value
  
  // --------------------------------------------------------------------------
  override function getMaximumMana() returns int
    return m_manaMaximum
    
  // --------------------------------------------------------------------------
  override function setAttack1AttackType(AttackType value)
    super.setAttack1AttackType(value)
    m_attack1AttackType = value

  // --------------------------------------------------------------------------
  override function getAttack1AttackType() returns AttackType
    return m_attack1AttackType

  // --------------------------------------------------------------------------
  override function setAttack1CooldownTime(real value)
    super.setAttack1CooldownTime(value)
    m_attack1CooldownTime = value
  
  // --------------------------------------------------------------------------
  override function getAttack1CooldownTime() returns real
    return m_attack1CooldownTime

  // --------------------------------------------------------------------------
  override function setAttacksEnabled(int value)
    super.setAttacksEnabled(value)
    m_attacksEnabled = value

  // --------------------------------------------------------------------------
  override function getAttacksEnabled() returns int
    return m_attacksEnabled

  // --------------------------------------------------------------------------
  override function setTooltipBasic(string value)
    super.setTooltipBasic(value)
    m_tooltipBasic = value
  
  // --------------------------------------------------------------------------
  override function getTooltipBasic() returns string
    return m_tooltipBasic

  // --------------------------------------------------------------------------
  override function setTooltipExtended(string value)
    super.setTooltipExtended(value)
    m_tooltipExtended = value
  
  // --------------------------------------------------------------------------
  override function getTooltipExtended() returns string
    return m_tooltipExtended

  // --------------------------------------------------------------------------
  override function getGoldCost() returns int
    return m_goldCost

  // --------------------------------------------------------------------------
  override function setGoldCost(int value)
    super.setGoldCost(value)
    m_goldCost = value

  // --------------------------------------------------------------------------
  override function getLumberCost() returns int
    return m_lumberCost

  // --------------------------------------------------------------------------
  override function setLumberCost(int value)
    super.setLumberCost(value)
    m_lumberCost = value

  // --------------------------------------------------------------------------
  override function getMaterialCost() returns int
    return getLumberCost()

  // --------------------------------------------------------------------------
  function setMaterialCost(int value)
    setLumberCost(value)
    
  // --------------------------------------------------------------------------
  function setRecycleGoldRewarded(int value)
    m_recycleGoldRewarded = value
    
  // --------------------------------------------------------------------------
  override function getRecycleGoldRewarded() returns int
    return m_recycleGoldRewarded
    
  // --------------------------------------------------------------------------
  function setRecycleLumberRewarded(int value)
    m_recycleLumberRewarded = value
  
  // --------------------------------------------------------------------------
  override function getRecycleLumberRewarded() returns int
    return m_recycleLumberRewarded

// ============================================================================
init
  g_unitIdToDefinitionMap = new HashMap<int, ITlsUnitDefinition>()