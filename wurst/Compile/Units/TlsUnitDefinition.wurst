package TlsUnitDefinition
import public UnitObjEditing
import public TlsUnitIds
import public ObjectIds
import public TlsAbilityIds
import public TlsObjEditingCommons
import public UnitIds
import HashMap
import UnitDefinitionInitModule
import ObjEditingNatives
import Dice
import Range
import LinkedList
import TargetsAllowedUtils
import Events
import HashList

// EHHHH
import initlater Reputation

public HashList<int> g_registeredUnitDefinitions = new HashList<int>()
public Event1<ITlsUnitDefinition> g_unitDefinitionRegistered = new Event1<ITlsUnitDefinition>()
HashMap<int, ITlsUnitDefinition> g_unitIdToDefinitionMap = new HashMap<int, ITlsUnitDefinition>()

// ============================================================================
public function registerUnitDefinition(int unitId, ITlsUnitDefinition def)
  g_registeredUnitDefinitions.add(unitId)
  g_unitIdToDefinitionMap.put(unitId, def)
  g_unitDefinitionRegistered.call(def)

// ============================================================================
public function getUnitDefinition(int unitId) returns ITlsUnitDefinition
  return g_unitIdToDefinitionMap.get(unitId)

// ============================================================================
public function unit.getUnitDefinition() returns ITlsUnitDefinition
  return getUnitDefinition(this.getTypeId())

// ============================================================================
public function unit.getRecycleGoldRewarded() returns int
  let def = getUnitDefinition(this.getTypeId())
  return def != null ? def.getRecycleGoldRewarded() : 0

// ============================================================================
public function unit.getRecycleLumberRewarded() returns int
  let def = getUnitDefinition(this.getTypeId())
  return def != null ? def.getRecycleLumberRewarded() : 0

// ============================================================================
public interface ITlsUnitDefinition
  function getNewId() returns int
  function getBaseId() returns int
  function getName() returns string
  function getModelFile() returns string
  function getArmorType() returns ArmorType
  function getAttack1DamageBase() returns int
  function getAttack1DamageNumberofDice() returns int
  function getAttack1DamageSidesperDie() returns int
  function getAttack1Range() returns int
  function getAttack1CooldownTime() returns real
  function getAttack1AttackType() returns AttackType
  function getAttack1TargetsAllowed() returns string
  function getAttack1Targets() returns LinkedList<string>
  function getHitPointsMaximumBase() returns int
  function getMaximumMana() returns int
  function getAttacksEnabled() returns int
  function getTooltipBasic() returns string
  function getTooltipExtended() returns string
  function setTooltipExtended(string value)
  function getGoldCost() returns int
  function getLumberCost() returns int
  function getMaterialCost() returns int
  function getRecycleGoldRewarded() returns int
  function getRecycleLumberRewarded() returns int

// ============================================================================
public function ITlsUnitDefinition.getApproxAttack1DPS() returns rangeReal
  let damageRange = this.getAttack1DamageRange()
  let min = I2R(damageRange.min) / this.getAttack1CooldownTime()
  let max = I2R(damageRange.max) / this.getAttack1CooldownTime()
  return rangeReal(min, max)

// ============================================================================
public function ITlsUnitDefinition.getApproxAttack1DPSString() returns string
  let range = this.getApproxAttack1DPS()
  return "{0} - {1} dps".format(I2S(R2I(range.min)), I2S(R2I(range.max)))

// ============================================================================
public function ITlsUnitDefinition.getAttack1DamageRangeString() returns string
  let range = this.getAttack1DamageRange()
  return "{0} - {1}".format(I2S(range.min), I2S(range.max))

// ============================================================================
public function UnitDefinition.setAttack1DamageRange(rangeInt range)
  this.setAttack1DamageDice(range.toDice())

// ============================================================================
public function BuildingDefinition.setAttack1DamageRange(rangeInt range)
  this.setAttack1DamageDice(range.toDice())

// ============================================================================
public function HeroDefinition.setAttack1DamageRange(rangeInt range)
  this.setAttack1DamageDice(range.toDice())

// ============================================================================
public function ITlsUnitDefinition.getAttack1DamageRange() returns rangeInt
  return this.getAttack1DamageDice().toRange()

// ============================================================================
public function UnitDefinition.setAttack1DamageDice(dice dice)
  this.setAttack1DamageBase(dice.base)
  this.setAttack1DamageNumberofDice(dice.numberOfDice)
  this.setAttack1DamageSidesperDie(dice.sidesPerDie)

// ============================================================================
public function BuildingDefinition.setAttack1DamageDice(dice dice)
  this.setAttack1DamageBase(dice.base)
  this.setAttack1DamageNumberofDice(dice.numberOfDice)
  this.setAttack1DamageSidesperDie(dice.sidesPerDie)

// ============================================================================
public function HeroDefinition.setAttack1DamageDice(dice dice)
  this.setAttack1DamageBase(dice.base)
  this.setAttack1DamageNumberofDice(dice.numberOfDice)
  this.setAttack1DamageSidesperDie(dice.sidesPerDie)

// ============================================================================
public function ITlsUnitDefinition.getAttack1DamageDice() returns dice
  return dice(this.getAttack1DamageBase(), this.getAttack1DamageNumberofDice(), this.getAttack1DamageSidesperDie())

// ============================================================================
public class TlsUnitDefinition extends UnitDefinition implements ITlsUnitDefinition
  private string m_name
  private string m_modelFile
  private ArmorType m_armorType
  private int m_attack1DamageBase
  private int m_attack1DamageNumberofDice
  private int m_attack1DamageSidesperDie
  private int m_attack1Range
  private int m_hitPointsMaximumBase
  private int m_manaMaximum
  private AttackType m_attack1AttackType
  private real m_attack1CooldownTime
  private string m_attack1TargetsAllowed
  private LinkedList<string> m_attack1Targets
  private int m_attacksEnabled
  private string m_tooltipBasic
  private string m_tooltipExtended
  private int m_goldCost
  private int m_lumberCost
  private int m_recycleGoldRewarded
  private int m_recycleLumberRewarded
  private string m_upgradesTo

  public use UnitDefinitionInitModule

  // --------------------------------------------------------------------------
  construct(int newId, int baseId)
    super(newId, baseId)
    m_attack1Targets = new LinkedList<string>()
    init_all()
    if (not compiletime)
      registerUnitDefinition(newId, this)

  // --------------------------------------------------------------------------
  override function getNewId() returns int
    return super.getNewId()

  // --------------------------------------------------------------------------
  override function getBaseId() returns int
    return super.getBaseId()

  // --------------------------------------------------------------------------
  override function setName(string value)
    super.setName(value)
    m_name = value

  // --------------------------------------------------------------------------    
  override function getName() returns string
    return m_name

  // --------------------------------------------------------------------------
  override function setModelFile(string value)
    super.setModelFile(value)
    m_modelFile = value

  // --------------------------------------------------------------------------    
  override function getModelFile() returns string
    return m_modelFile

  // --------------------------------------------------------------------------
  override function setArmorType(ArmorType armorType)
    super.setArmorType(armorType)
    m_armorType = armorType

  // --------------------------------------------------------------------------    
  override function getArmorType() returns ArmorType
    return m_armorType

  // --------------------------------------------------------------------------
  override function setAttack1DamageBase(int value)
    super.setAttack1DamageBase(value)
    m_attack1DamageBase = value

  // --------------------------------------------------------------------------
  override function getAttack1DamageBase() returns int
    return m_attack1DamageBase

  // --------------------------------------------------------------------------
  override function setAttack1DamageNumberofDice(int value)
    super.setAttack1DamageNumberofDice(value)
    m_attack1DamageNumberofDice = value

  // --------------------------------------------------------------------------
  override function getAttack1DamageNumberofDice() returns int
    return m_attack1DamageNumberofDice

  // --------------------------------------------------------------------------
  override function setAttack1DamageSidesperDie(int value)
    super.setAttack1DamageSidesperDie(value)
    m_attack1DamageSidesperDie = value

  // --------------------------------------------------------------------------
  override function getAttack1DamageSidesperDie() returns int
    return m_attack1DamageSidesperDie
  
  // --------------------------------------------------------------------------
  override function setAttack1Range(int value)
    super.setAttack1Range(value)
    m_attack1Range = value
  
  // --------------------------------------------------------------------------
  override function getAttack1Range() returns int
    return m_attack1Range
  
  // --------------------------------------------------------------------------
  override function setHitPointsMaximumBase(int value)
    super.setHitPointsMaximumBase(value)
    m_hitPointsMaximumBase = value
  
  // --------------------------------------------------------------------------
  override function getHitPointsMaximumBase() returns int
    return m_hitPointsMaximumBase
  
  // --------------------------------------------------------------------------
  override function setManaMaximum(int value)
    super.setManaMaximum(value)
    m_manaMaximum = value
  
  // --------------------------------------------------------------------------
  override function getMaximumMana() returns int
    return m_manaMaximum
    
  // --------------------------------------------------------------------------
  override function setAttack1AttackType(AttackType value)
    super.setAttack1AttackType(value)
    m_attack1AttackType = value

  // --------------------------------------------------------------------------
  override function getAttack1AttackType() returns AttackType
    return m_attack1AttackType

  // --------------------------------------------------------------------------
  override function setAttack1CooldownTime(real value)
    super.setAttack1CooldownTime(value)
    m_attack1CooldownTime = value
  
  // --------------------------------------------------------------------------
  override function getAttack1CooldownTime() returns real
    return m_attack1CooldownTime

  // --------------------------------------------------------------------------
  override function setAttack1TargetsAllowed(string data)
    super.setAttack1TargetsAllowed(data)
    m_attack1TargetsAllowed = data
    m_attack1Targets.clear()
    getTargetsAllowedPretty(data, m_attack1Targets)

  // --------------------------------------------------------------------------
  override function getAttack1TargetsAllowed() returns string
    return m_attack1TargetsAllowed

  // --------------------------------------------------------------------------
  override function getAttack1Targets() returns LinkedList<string>
    return m_attack1Targets

  // --------------------------------------------------------------------------
  override function setAttacksEnabled(int value)
    super.setAttacksEnabled(value)
    m_attacksEnabled = value

  // --------------------------------------------------------------------------
  override function getAttacksEnabled() returns int
    return m_attacksEnabled

  // --------------------------------------------------------------------------
  override function setTooltipBasic(string value)
    super.setTooltipBasic(value)
    m_tooltipBasic = value
  
  // --------------------------------------------------------------------------
  override function getTooltipBasic() returns string
    return m_tooltipBasic

  // --------------------------------------------------------------------------
  override function setTooltipExtended(string value)
    let tooltipExt = addReputationToUnitDefinitionTooltipExtended(getNewId(), value)
    super.setTooltipExtended(tooltipExt)
    m_tooltipExtended = tooltipExt
  
  // --------------------------------------------------------------------------
  override function getTooltipExtended() returns string
    return m_tooltipExtended

  // --------------------------------------------------------------------------
  override function getGoldCost() returns int
    return m_goldCost

  // --------------------------------------------------------------------------
  override function setGoldCost(int value)
    super.setGoldCost(value)
    m_goldCost = value

  // --------------------------------------------------------------------------
  override function getLumberCost() returns int
    return m_lumberCost

  // --------------------------------------------------------------------------
  override function setLumberCost(int value)
    super.setLumberCost(value)
    m_lumberCost = value

  // --------------------------------------------------------------------------
  override function getMaterialCost() returns int
    return getLumberCost()

  // --------------------------------------------------------------------------
  function setMaterialCost(int value)
    setLumberCost(value)
    
  // --------------------------------------------------------------------------
  function setRecycleGoldRewarded(int value)
    m_recycleGoldRewarded = value
    
  // --------------------------------------------------------------------------
  override function getRecycleGoldRewarded() returns int
    return m_recycleGoldRewarded
    
  // --------------------------------------------------------------------------
  function setRecycleLumberRewarded(int value)
    m_recycleLumberRewarded = value
  
  // --------------------------------------------------------------------------
  override function getRecycleLumberRewarded() returns int
    return m_recycleLumberRewarded

  // --------------------------------------------------------------------------
  function setUpgradesTo(string data)
    def.setString("uupt", data)
    m_upgradesTo = data
  
  // --------------------------------------------------------------------------
  function getUpgradesTo() returns string
    return m_upgradesTo

// ============================================================================
@compiletime
function init_compiletime()
  g_unitIdToDefinitionMap = new HashMap<int, ITlsUnitDefinition>()
  g_unitDefinitionRegistered = new Event1<ITlsUnitDefinition>()
  g_registeredUnitDefinitions = new HashList<int>()