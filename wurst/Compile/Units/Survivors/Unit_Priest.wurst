package Unit_Priest
import TlsUnitDefinition
import SurvivorUnitDefinition
import TlsUnitDefinitionBuilder
import Range
import AbilityObjEditing
import TlsUpgradeIds
import TlsUpgradeDefinition
import Icons
import RealExtensions
import Math
import PlayerExtensions
import RegisterEvents
import HumanPlayers

public SurvivorUnitDefinition g_priest1Definition

constant int PRIEST_ABILITY_MAX_LEVEL = 10

// ============================================================================
function calculateHealFactor(int lvl) returns real
  return 50.0 + (lvl - 1) * 25.0

// ============================================================================
function calculateSlowAttackRate(int lvl) returns real
  // using hill function that arrives at 90% by level 10, 99% by level 20
  let x = parameterize01(1, PRIEST_ABILITY_MAX_LEVEL, lvl)
  return 0.1 + hill01(x, 0.25)

// ============================================================================
function calculateSlowMoveRate(int lvl) returns real
  let x = parameterize01(1, PRIEST_ABILITY_MAX_LEVEL, lvl)
  return lerp(0.5, 1.0, x)

// ============================================================================
function calculateSlowDuration(int lvl) returns real
  let x = parameterize01(1, PRIEST_ABILITY_MAX_LEVEL, lvl)
  return lerp(10.0, 60.0, x)

// ============================================================================
function calculateInnerFireDamageIncrease01(int lvl) returns real
  return 0.1 + (lvl - 1) * 0.05

// ============================================================================
function calculateInnerFireDefenseIncrease(int lvl) returns int
  return 5 + (lvl - 1) * 2

// ============================================================================
function calculateInnerFireDuration(int lvl) returns real
  return 15.0 + (lvl - 1) * 5.0

// ============================================================================
@compiletime function createObjectDefinitions()

  g_priest1Definition = new SurvivorUnitDefinition(TlsUnitIds.Survivors.priest1, UnitIds.priest)
    ..setNormalAbilities(commaList(
      TlsAbilityIds.inventory2Slots,
      TlsAbilityIds.priestHeal,
      TlsAbilityIds.priestSlow,
      TlsAbilityIds.priestInnerFire))
    ..setUpgradesUsed(commaList(
      TlsUpgradeIds.survivorHpBonus,
      TlsUpgradeIds.priestNoviceTraining,
      TlsUpgradeIds.priestFurtherStudy))
    ..setAcquisitionRange(600.0)
    ..setArmorSoundType(ArmorSoundType.Flesh)
    ..setAttack1AttackType(AttackType.Magic)
    ..setAttack1DamageRange(rangeInt(160, 240))
    ..setAttack1CooldownTime(1.5)
    ..setAttack1Range(600)
    ..setAttack1WeaponSound(WeaponSound.Nothing)
    ..setAttack1WeaponType(WeaponType.Missile)
    ..setAttacksEnabled(1)
    ..setDeathType(DeathType.CanRaiseDoesDecay)
    ..setDefenseBase(0)
    ..setArmorType(ArmorType.Unarmored)
    ..setDefenseUpgradeBonus(1)
    ..setHitPointsRegenerationRate(0.25)
    ..setManaMaximum(100)
    ..setManaInitialAmount(100)
    ..setManaRegeneration(0.2)
    ..setSpeedBase(220)
    ..setName("Priest")
    ..setCasterUpgradeNames("Initiate,Adept,Master")
    ..setCasterUpgradeTips("- Heal,- Heal|n- Slow,- Heal|n- Slow|n- Inner Fire")
    ..setCasterUpgradeArt("UI\\Widgets\\Console\\Human\\infocard-priest.blp")
    ..addUnitClass(TlsUnitClassification.HUMAN)
    ..addUnitClass(TlsUnitClassification.MAGIC)
    ..build("Supporting spellcaster. Can initially cast Heal, which increases the life of wounded units. Can also learn Slow and Inner Fire.",
      tooltipBuilder -> begin
        let abilities = new TooltipItem("Abilities: ")..addValue("Heal")..addValue("Slow")..addValue("Inner Fire")
        tooltipBuilder.addItem(abilities)
      end)

  new AbilityDefinitionHeal(TlsAbilityIds.priestHeal)
    ..setLevels(PRIEST_ABILITY_MAX_LEVEL)
    ..setButtonPositionNormalX(0)
    ..setButtonPositionNormalY(2)
    ..setButtonPositionTurnOffX(0)
    ..setButtonPositionTurnOffY(2)
    ..presetHitPointsGained(lvl -> calculateHealFactor(lvl))
    ..presetBuffs(lvl -> "Bhea")
    ..presetCastRange(lvl -> 250.0)
    ..presetCooldown(lvl -> 1.0)
    ..presetManaCost(lvl -> 10)
    ..presetTargetsAllowed(lvl -> "air,friend,ground,invulnerable,neutral,nonancient,organic,self,vulnerable")
    ..presetTooltipNormal(lvl -> "Heal [|cffffcc00Level {0}|r]".format(lvl.toString()))
    ..presetTooltipNormalExtended(lvl -> "Heals a target friendly non-mechanical wounded unit for {0} hit points.".format(calculateHealFactor(lvl).round().toString()))
    ..presetTooltipTurnOff(lvl ->"|cffc3dbffRight-click to activate auto-casting.|r")
    ..presetTooltipTurnOffExtended(lvl ->"|cffc3dbffRight-click to deactivate auto-casting.|r")

  new AbilityDefinitionSlow(TlsAbilityIds.priestSlow)
    ..setLevels(PRIEST_ABILITY_MAX_LEVEL)
    ..setButtonPositionNormalX(1)
    ..setButtonPositionNormalY(2)
    ..setButtonPositionTurnOffX(1)
    ..setButtonPositionTurnOffY(2)
    ..setRequirements(commaList(TlsUpgradeIds.priestNoviceTraining))
    ..setRequirementsLevels("1")
    ..presetAttackSpeedFactor(lvl -> calculateSlowAttackRate(lvl))
    ..presetMovementSpeedFactor(lvl -> calculateSlowMoveRate(lvl))
    ..presetBuffs(lvl -> "Bslo")
    ..presetCastRange(lvl -> 700.0)
    ..presetCooldown(lvl -> 1.0)
    ..presetDurationHero(lvl -> calculateSlowDuration(lvl) / 2.0)
    ..presetDurationNormal(lvl -> calculateSlowDuration(lvl))
    ..presetManaCost(lvl -> 50)
    ..presetTargetsAllowed(lvl -> "air,ground,enemy")
    ..presetTooltipNormal(lvl -> "Slow [|cffffcc00Level {0}|r]".format(lvl.toString()))
    ..presetTooltipNormalExtended(lvl -> "Slows a target enemy unit's attack rate by {0} and movement speed by {1}. |nLasts {2} seconds.".format(
      calculateSlowAttackRate(lvl).toPercentageString01(),
      calculateSlowMoveRate(lvl).toPercentageString01(),
      calculateSlowDuration(lvl).floor().toString()))
    ..presetTooltipTurnOff(lvl ->"|cffc3dbffRight-click to activate auto-casting.|r")
    ..presetTooltipTurnOffExtended(lvl ->"|cffc3dbffRight-click to deactivate auto-casting.|r")

  new AbilityDefinitionInnerFire(TlsAbilityIds.priestInnerFire)
    ..setLevels(PRIEST_ABILITY_MAX_LEVEL)
    ..setButtonPositionNormalX(2)
    ..setButtonPositionNormalY(2)
    ..setButtonPositionTurnOffX(2)
    ..setButtonPositionTurnOffY(2)
    ..setRequirements(commaList(TlsUpgradeIds.priestNoviceTraining))
    ..setRequirementsLevels("2")
    ..presetAutocastRange(lvl -> 500.0)
    ..presetDamageIncrease(lvl -> calculateInnerFireDamageIncrease01(lvl))
    ..presetDefenseIncrease(lvl -> calculateInnerFireDefenseIncrease(lvl))
    // ..presetLifeRegenRate(lvl -> calculateInnferFireLifeRegenRate(lvl))
    ..presetBuffs(lvl -> "Binf")
    ..presetCastRange(lvl -> 500.0)
    ..presetCooldown(lvl -> 1.0)
    ..presetDurationHero(lvl -> calculateInnerFireDuration(lvl))
    ..presetDurationNormal(lvl -> calculateInnerFireDuration(lvl))
    ..presetTargetsAllowed(lvl -> "air,friend,ground,neutral,self")
    ..presetTooltipNormal(lvl -> "Inner Fire [|cffffcc00Level {0}|r]".format(lvl.toString()))
    ..presetTooltipNormalExtended(lvl -> "Increases a target friendly unit's damage by {0} and armor by {1}. |nLasts {2} seconds.".format(
      calculateInnerFireDamageIncrease01(lvl).toPercentageString01(),
      calculateInnerFireDefenseIncrease(lvl).toString(),
      calculateInnerFireDuration(lvl).floor().toString()))
    ..presetTooltipTurnOff(lvl ->"|cffc3dbffRight-click to activate auto-casting.|r")
    ..presetTooltipTurnOffExtended(lvl ->"|cffc3dbffRight-click to deactivate auto-casting.|r")

  new UpgradeDefinition(TlsUpgradeIds.priestNoviceTraining)
    ..setLevels(2)
    
    ..setName(1, "Priest Adept Training")
    ..setTooltip(1, "Priest Adept Training")
    ..setTooltipExtended(1, "Increases Priests' mana capacity, mana regeneration, attack damage and gives them the ability to cast Dispel Magic.")
    ..setIcon(1, Icons.bTNPriestAdept)
    ..setRequirements(1, "")
    
    ..setName(2, "Priest Master Training")
    ..setTooltip(2, "Priest Master Training")
    ..setTooltipExtended(2, "Increases Priests' mana capacity, mana regeneration, attack damage and gives them the ability to cast Inner Fire.")
    ..setIcon(2, Icons.bTNPriestMaster)
    ..setRequirements(2, commaList(TlsUnitIds.headquarters2))

    ..setButtonPositionX(0)
    ..setButtonPositionY(2)
    ..setGoldCostBase(1)
    ..setGoldCostIncrement(1)
    ..setLumberCostBase(600)
    ..setLumberCostIncrement(600)
    ..addEffectManaPointBonus(50, 50)
    ..addEffectManaRegeneration(0.0325, 0.0325)
    ..addEffectAttackDamageBonus(50, 50)
    ..setClass(UpgradeClass.Caster)
    ..setTimeBase(10)
    ..setTimeIncrement(5)

  new UpgradeDefinition(TlsUpgradeIds.priestFurtherStudy)
    ..setLevels(5)

    ..setName(1, "Priest Further Study I")
    ..setTooltip(1, "Priest Further Study I")
    ..setTooltipExtended(1, "Further increases Priests' attack damage and effectiveness of Heal, Dispel Magic and Inner Fire.")
    ..setIcon(1, Icons.bTNTome)
    ..setRequirements(1, commaList(TlsUpgradeIds.priestNoviceTraining))
    ..setRequirementsLevels(1, "2")
    
    ..setName(2, "Priest Further Study II")
    ..setTooltip(2, "Priest Further Study II")
    ..setTooltipExtended(2, "Further increases Priests' attack damage and effectiveness of Heal, Dispel Magic and Inner Fire.")
    ..setIcon(2, Icons.bTNTomeBrown)
    ..setRequirements(5, commaList(TlsUnitIds.headquarters3))
    
    ..setName(3, "Priest Further Study III")
    ..setTooltip(3, "Priest Further Study III")
    ..setTooltipExtended(3, "Further increases Priests' attack damage and effectiveness of Heal, Dispel Magic and Inner Fire.")
    ..setIcon(3, Icons.bTNTomeRed)
    
    ..setName(4, "Priest Further Study IV")
    ..setTooltip(4, "Priest Further Study IV")
    ..setTooltipExtended(4, "Further increases Priests' attack damage and effectiveness of Heal, Dispel Magic and Inner Fire.")
    ..setIcon(4, Icons.bTNSorceressAdept)
    ..setRequirements(5, commaList(TlsUnitIds.headquarters4))
    
    ..setName(5, "Priest Further Study V")
    ..setTooltip(5, "Priest Further Study V")
    ..setTooltipExtended(5, "Further increases Priests' attack damage and effectiveness of Heal, Dispel Magic and Inner Fire.")
    ..setIcon(5, Icons.bTNSorceressMaster)
    ..setRequirements(5, commaList(TlsUnitIds.headquarters5))
    
    ..setButtonPositionX(0)
    ..setButtonPositionY(2)
    ..setGoldCostBase(2)
    ..setGoldCostIncrement(0)
    ..setLumberCostBase(1200)
    ..setLumberCostIncrement(0)
    ..addEffectAttackDamageBonus(10, 10)
    ..addEffectAbilityLevelBonus(1, 1, TlsAbilityIds.priestHeal.toRawCode())
    ..addEffectAbilityLevelBonus(1, 1, TlsAbilityIds.priestSlow.toRawCode())
    ..addEffectAbilityLevelBonus(1, 1, TlsAbilityIds.priestInnerFire.toRawCode())
    ..setClass(UpgradeClass.NONE)
    ..setTimeBase(10)
    ..setTimeIncrement(5)

// ============================================================================
public function onResearchFinished()
  let researchTypeId = GetResearched()

  if (researchTypeId != TlsUpgradeIds.priestNoviceTraining)
    return

  let researchingUnit = GetResearchingUnit() 
  let owningPlayer = researchingUnit.getOwner()
  
  if (owningPlayer.getTechResearchLevel(researchTypeId) < 2)
    return

  owningPlayer.setTechAvailability(TlsUpgradeIds.priestFurtherStudy, true)

// ============================================================================
init
  if (g_priest1Definition == null)
    createObjectDefinitions()

  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_RESEARCH_FINISH, function onResearchFinished)

  for p in g_PlayingHumanPlayers
    p.setTechAvailability(TlsUpgradeIds.priestFurtherStudy, false)