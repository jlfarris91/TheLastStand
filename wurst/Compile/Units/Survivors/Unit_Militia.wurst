package Unit_Militia
import TlsUnitDefinition
import SurvivorUnitDefinition
import TlsUpgradeIds
import TlsUnitDefinitionBuilder
import ColorUtility
import Range
import Dice
import TlsUpgradeDefinition
import Icons
import AbilityObjEditing
import RealExtensions
import RegisterEvents
import PlayerExtensions
import HumanPlayers

public SurvivorUnitDefinition g_militia1Definition
public SurvivorUnitDefinition g_militia2Definition
public SurvivorUnitDefinition g_militia3Definition

public constant int MILITIA_ABILITY_MAX_LEVEL = 10

// ============================================================================
function calculateDefendChanceToDeflect(int level) returns real
  return 35.0 + (level - 1) * 5.0

// ============================================================================
function calculateDefendDamageDealt(int level) returns real
  return 1.0 + (level - 1) * 0.1

// ============================================================================
function calculateDefendDamageTaken(int level) returns real
  return 0.5 - (level - 1) * 0.025

// ============================================================================
function calculateDefendMagicDamageReduction01(int level) returns real
  return 0.5 - (level - 1) * 0.025

// ============================================================================
function calculateDefendMovementSpeedFactor01(int level) returns real
  return 0.3 - (level - 1) * 0.025

// ============================================================================
function calculateParryDamageDealttoAttackers(int level) returns real
  return 0.25 + (level - 1) * 0.05

// ============================================================================
function calculateCleaveDistributedDamageFactor(int level) returns real
  return 0.25 + (level - 1) * 0.5

// ============================================================================
function calculateCleaveAreaofEffect(int level) returns real
  return 150.0 + (level - 1) * 25.0

// ============================================================================
@compiletime function createObjectDefinitions()

  g_militia1Definition = new SurvivorUnitDefinition(TlsUnitIds.Survivors.militia1, UnitIds.militia)
    ..setNormalAbilities(commaList(
      TlsAbilityIds.inventory2Slots,
      TlsAbilityIds.militiaDefend,
      TlsAbilityIds.militiaParry,
      TlsAbilityIds.militiaCleave))
    ..setAcquisitionRange(300.0)
    ..setAttack1AttackType(AttackType.Normal)
    ..setAttack1CooldownTime(2.0)
    ..setAttack1DamageDice(rangeInt(180, 220).toDice())
    ..setAttack1TargetsAllowed("ground,structure,debris,item,ward")
    ..setAttack2TargetsAllowed("air,enemy")
    ..setAttack2ProjectileArt("Abilities\\Weapons\\swordmissile\\swordmissile1.mdl")
    ..setAttacksEnabled(1)
    ..setDeathType(DeathType.CanRaiseDoesDecay)
    ..setDefenseBase(15)
    ..setArmorType(ArmorType.Large)
    ..setDefenseUpgradeBonus(5)
    ..setSpeedBase(200)
    ..setHitPointsRegenerationRate(1.0)
    ..setManaInitialAmount(100)
    ..setManaMaximum(100)
    ..setManaRegeneration(0.01)
    ..setUpgradesUsed(commaList(
      TlsUpgradeIds.survivorHpBonus,
      TlsUpgradeIds.leatherWorking,
      TlsUpgradeIds.militiaNoviceTraining,
      TlsUpgradeIds.militiaFurtherStudy))
    ..setName("Militia")
    ..setCasterUpgradeNames("Initiate,Novice,Adept,Master")
    ..setCasterUpgradeTips("- None,- Defend,- Defend|n- Parry,- Defend|n- Parry|n- Cleaving Attack")
    ..setCasterUpgradeArt("UI\\Widgets\\Console\\Human\\infocard-militia.blp")
    ..addUnitClass(TlsUnitClassification.HUMAN)
    ..addUnitClass(TlsUnitClassification.MELEE)
    ..build("", tooltipBuilder -> begin
        let properties = new TooltipItem("Properties: ")
        ..addValue("High evasion".colorize(Colors.green))
        ..addValue("Strong against hordes".colorize(Colors.green))
        ..addValue("Can't attack air".colorize(Colors.red))
        tooltipBuilder.addItem(properties)
      end)

  g_militia2Definition = new SurvivorUnitDefinition(TlsUnitIds.Survivors.militia2, UnitIds.footman)
    ..setNormalAbilities(commaList(
      TlsAbilityIds.inventory4Slots,
      TlsAbilityIds.militiaDefend,
      TlsAbilityIds.militiaParry,
      TlsAbilityIds.militiaCleave))
    ..setAcquisitionRange(400.0)
    ..setAttack1AttackType(AttackType.Normal)
    ..setAttack1CooldownTime(1.5)
    ..setAttack1DamageDice(rangeInt(280, 320).toDice())
    ..setAttack1TargetsAllowed("ground,structure,debris,item,ward")
    ..setAttack2TargetsAllowed("air,enemy")
    ..setAttack2ProjectileArt("Abilities\\Weapons\\swordmissile\\swordmissile2.mdl")
    ..setAttacksEnabled(1)
    ..setDeathType(DeathType.CanRaiseDoesDecay)
    ..setDefenseBase(30)
    ..setArmorType(ArmorType.Large)
    ..setDefenseUpgradeBonus(5)
    ..setSpeedBase(225)
    ..setHitPointsRegenerationRate(2.0)
    ..setManaInitialAmount(100)
    ..setManaMaximum(100)
    ..setManaRegeneration(0.01)
    ..setUpgradesUsed(commaList(
      TlsUpgradeIds.survivorHpBonus,
      TlsUpgradeIds.leatherWorking,
      TlsUpgradeIds.militiaNoviceTraining,
      TlsUpgradeIds.militiaFurtherStudy))
    ..setName("Footman")
    ..setCasterUpgradeNames("Initiate,Novice,Adept,Master")
    ..setCasterUpgradeTips("- None,- Defend,- Defend|n- Parry,- Defend|n- Parry|n- Cleaving Attack")
    ..setCasterUpgradeArt("UI\\Widgets\\Console\\Human\\infocard-footman.blp")
    ..addUnitClass(TlsUnitClassification.HUMAN)
    ..addUnitClass(TlsUnitClassification.MELEE)
    ..build("", tooltipBuilder -> begin
        let properties = new TooltipItem("Properties: ")
        ..addValue("+15% chance to evade".colorize(Colors.green))
        ..addValue("+20% damage to non-elites".colorize(Colors.green))
        ..addValue("-10% damage to elites".colorize(Colors.red))
        tooltipBuilder.addItem(properties)
      end)

  g_militia3Definition = new SurvivorUnitDefinition(TlsUnitIds.Survivors.militia3, UnitIds.thecaptain)
    ..setNormalAbilities(commaList(
      TlsAbilityIds.inventory6Slots,
      TlsAbilityIds.militiaDefend,
      TlsAbilityIds.militiaParry,
      TlsAbilityIds.militiaCleave))
    ..setAcquisitionRange(500.0)
    ..setAttack1AttackType(AttackType.Normal)
    ..setAttack1CooldownTime(1.0)
    ..setAttack1DamageDice(rangeInt(380, 420).toDice())
    ..setAttack1TargetsAllowed("ground,structure,debris,item,ward")
    ..setAttack2TargetsAllowed("air,enemy")
    ..setAttack2ProjectileArt("Abilities\\Weapons\\swordmissile\\swordmissile3.mdl")
    ..setAttacksEnabled(1)
    ..setDeathType(DeathType.CanRaiseDoesDecay)
    ..setDefenseBase(45)
    ..setArmorType(ArmorType.Large)
    ..setDefenseUpgradeBonus(5)
    ..setSpeedBase(250)
    ..setHitPointsRegenerationRate(2.0)
    ..setManaInitialAmount(100)
    ..setManaMaximum(100)
    ..setManaRegeneration(0.01)
    ..setUpgradesUsed(commaList(
      TlsUpgradeIds.survivorHpBonus,
      TlsUpgradeIds.leatherWorking,
      TlsUpgradeIds.militiaNoviceTraining,
      TlsUpgradeIds.militiaFurtherStudy))
    ..setName("Knight")
    ..setCasterUpgradeNames("Initiate,Novice,Adept,Master")
    ..setCasterUpgradeTips("- None,- Defend,- Defend|n- Parry,- Defend|n- Parry|n- Cleaving Attack")
    ..setCasterUpgradeArt("UI\\Widgets\\Console\\Human\\infocard-captain.blp")
    ..addUnitClass(TlsUnitClassification.HUMAN)
    ..addUnitClass(TlsUnitClassification.MELEE)
    ..build("", tooltipBuilder -> begin
        let properties = new TooltipItem("Properties: ")
        ..addValue("+15% chance to evade".colorize(Colors.green))
        ..addValue("+20% damage to non-elites".colorize(Colors.green))
        ..addValue("-10% damage to elites".colorize(Colors.red))
        tooltipBuilder.addItem(properties)
      end)

  new AbilityDefinitionDefend(TlsAbilityIds.militiaDefend)
    ..setLevels(20)
    ..setButtonPositionNormalX(0)
    ..setButtonPositionNormalY(2)
    ..setHotkeyNormal("Q")
    ..setRequirements(commaList(TlsUpgradeIds.militiaNoviceTraining))
    ..setRequirementsLevels("1")
    ..presetAttackSpeedFactor((int lvl) -> 0.0)
    ..presetChancetoDeflect(lvl -> calculateDefendChanceToDeflect(lvl))
    ..presetDamageDealt(lvl -> calculateDefendDamageDealt(lvl))
    ..presetDamageTaken(lvl -> calculateDefendDamageTaken(lvl))
    ..presetDeflectDamageTakenPiercing((int lvl) -> 0.0)
    ..presetDeflectDamageTakenSpells((int lvl) -> 0.0)
    ..presetMagicDamageReduction(lvl -> calculateDefendMagicDamageReduction01(lvl))
    ..presetMovementSpeedFactor(lvl -> calculateDefendMovementSpeedFactor01(lvl))
    ..presetTooltipNormal(lvl -> "Defend [|cffffcc00Level {0}|r]".format(lvl.toString()))
    ..presetTooltipNormalExtended(lvl -> "Activate to have a {0} chance to reflect Piercing attacks upon the source, and to take only {1} of the damage from attacks that are not reflected. While Defend is active, move speed is reduced by {2}.".format(
      calculateDefendChanceToDeflect(lvl).toPercentageString(),
      calculateDefendDamageTaken(lvl).toPercentageString01(),
      calculateDefendMovementSpeedFactor01(lvl).toPercentageString01()))
    ..presetTooltipTurnOff(lvl -> "Stop Defend")
    ..presetTooltipTurnOffExtended(lvl -> "Deactivate to move at normal speed and take regular damage from Piercing attacks.")

  new AbilityDefinitionKeeperoftheGroveThornsAura(TlsAbilityIds.militiaParry)
    ..setLevels(20)
    ..setName("Parry")
    ..setButtonPositionNormalX(1)
    ..setButtonPositionNormalY(2)
    ..setHotkeyNormal("W")
    ..setArtTarget("")
    ..setHeroAbility(false)
    ..setRequirements(commaList(TlsUpgradeIds.militiaNoviceTraining))
    ..setRequirementsLevels("2")
    ..presetDamageDealttoAttackers(lvl -> calculateParryDamageDealttoAttackers(lvl))
    ..presetDamageisPercentReceived(lvl -> true)
    ..presetAreaofEffect(lvl -> 900.0)
    ..presetBuffs(lvl -> "")
    ..presetTargetsAllowed(lvl -> "self")
    ..presetTooltipNormal(lvl -> "Parry [|cffffcc00Level {0}|r]".format(lvl.toString()))
    ..presetTooltipNormalExtended(lvl -> "Deals {0} of an enemy unit's melee attack damage back to it.".format(
      calculateParryDamageDealttoAttackers(lvl).toPercentageString01()))

  new AbilityDefinitionPitLordCleavingAttack(TlsAbilityIds.militiaCleave)
    ..setName("Cleaving Attack")
    ..setLevels(20)
    ..setButtonPositionNormalX(2)
    ..setButtonPositionNormalY(2)
    ..setHotkeyNormal("E")
    ..setHeroAbility(false)
    ..setRequirements(commaList(TlsUpgradeIds.militiaNoviceTraining))
    ..setRequirementsLevels("3")
    ..presetDistributedDamageFactor((int lvl) -> calculateCleaveDistributedDamageFactor(lvl))
    ..presetAreaofEffect((int lvl) -> calculateCleaveAreaofEffect(lvl))
    ..presetTargetsAllowed(lvl -> "ground,enemy,neutral")
    ..presetTooltipNormal((int lvl) -> "Cleaving Attack [|cffffcc00Level {0}|r]".format(lvl.toString()))
    ..presetTooltipNormalExtended((int lvl) -> "The unit strikes with such force that {0} of his damage strikes through to enemies near the primary attacked unit.".format(
      calculateCleaveDistributedDamageFactor(lvl).toPercentageString01()))
  
  new UpgradeDefinition(TlsUpgradeIds.militiaNoviceTraining)
    ..setLevels(3)
    
    ..setName(1, "Militia Novice Training")
    ..setTooltip(1, "Militia Novice Training")
    ..setTooltipExtended(1, "Increases Militia attack speed, attack damage and gives them the Defend ability.")
    ..setIcon(1, Icons.bTNSteelMelee)
    ..setRequirements(1, "")
    
    ..setName(2, "Militia Adept Training")
    ..setTooltip(2, "Militia Adept Training")
    ..setTooltipExtended(2, "Increases Militia attack speed, attack damage and gives them the Parry ability.")
    ..setIcon(2, Icons.bTNThoriumMelee)
    ..setRequirements(2, commaList(TlsUnitIds.headquarters2))
    
    ..setName(3, "Militia Master Training")
    ..setTooltip(3, "Militia Master Training")
    ..setTooltipExtended(3, "Increases Militia attack speed, attack damage and gives them the Cleave ability.")
    ..setIcon(3, Icons.bTNThoriumMelee)
    ..setRequirements(3, commaList(TlsUnitIds.headquarters3))

    ..setButtonPositionX(0)
    ..setButtonPositionY(2)
    ..setGoldCostBase(1)
    ..setGoldCostIncrement(1)
    ..setLumberCostBase(600)
    ..setLumberCostIncrement(600)
    ..addEffectAttackSpeedBonus(0.1, 0.1)
    ..addEffectAttackDamageBonus(50, 50)
    ..setClass(UpgradeClass.Caster)
    ..setTimeBase(10)
    ..setTimeIncrement(5)

  new UpgradeDefinition(TlsUpgradeIds.militiaFurtherStudy)
    ..setLevels(5)

    ..setName(1, "Militia Further Study I")
    ..setTooltip(1, "Militia Further Study I")
    ..setTooltipExtended(1, "Further increases Militia attack damage and effectiveness of Defend, Parry and Cleave.")
    ..setIcon(1, Icons.bTNTome)
    ..setRequirements(1, commaList(TlsUpgradeIds.militiaNoviceTraining))
    ..setRequirementsLevels(1, "2")
    
    ..setName(2, "Militia Further Study II")
    ..setTooltip(2, "Militia Further Study II")
    ..setTooltipExtended(2, "Further increases Militia attack damage and effectiveness of Defend, Parry and Cleave.")
    ..setIcon(2, Icons.bTNTomeBrown)
    ..setRequirements(2, commaList(TlsUnitIds.headquarters4))
    
    ..setName(3, "Militia Further Study III")
    ..setTooltip(3, "Militia Further Study III")
    ..setTooltipExtended(3, "Further increases Militia attack damage and effectiveness of Defend, Parry and Cleave.")
    ..setIcon(3, Icons.bTNTomeRed)
    ..setRequirements(3, "")
    
    ..setName(4, "Militia Further Study IV")
    ..setTooltip(4, "Militia Further Study IV")
    ..setTooltipExtended(4, "Further increases Militia attack damage and effectiveness of Defend, Parry and Cleave.")
    ..setIcon(4, Icons.bTNSorceressAdept)
    ..setRequirements(4, commaList(TlsUnitIds.headquarters5))
    
    ..setName(5, "Militia Further Study V")
    ..setTooltip(5, "Militia Further Study V")
    ..setTooltipExtended(5, "Further increases Militia attack damage and effectiveness of Defend, Parry and Cleave.")
    ..setIcon(5, Icons.bTNSorceressMaster)
    ..setRequirements(5, "")
    
    ..setButtonPositionX(0)
    ..setButtonPositionY(2)
    ..setGoldCostBase(2)
    ..setGoldCostIncrement(0)
    ..setLumberCostBase(1200)
    ..setLumberCostIncrement(0)
    ..addEffectAttackDamageBonus(10, 10)
    ..addEffectAbilityLevelBonus(1, 1, TlsAbilityIds.militiaDefend.toRawCode())
    ..addEffectAbilityLevelBonus(1, 1, TlsAbilityIds.militiaParry.toRawCode())
    ..addEffectAbilityLevelBonus(1, 1, TlsAbilityIds.militiaCleave.toRawCode())
    ..setClass(UpgradeClass.NONE)
    ..setTimeBase(10)
    ..setTimeIncrement(5)

// ============================================================================
public function onResearchFinished()
  let researchTypeId = GetResearched()

  if (researchTypeId != TlsUpgradeIds.militiaNoviceTraining)
    return

  let researchingUnit = GetResearchingUnit() 
  let owningPlayer = researchingUnit.getOwner()
  
  if (owningPlayer.getTechResearchLevel(researchTypeId) < 3)
    return

  owningPlayer.setTechAvailability(TlsUpgradeIds.militiaFurtherStudy, true)

// ============================================================================
init
  if (g_militia1Definition == null)
    createObjectDefinitions()

  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_RESEARCH_FINISH, function onResearchFinished)

  for p in g_PlayingHumanPlayers
    p.setTechAvailability(TlsUpgradeIds.militiaFurtherStudy, false)