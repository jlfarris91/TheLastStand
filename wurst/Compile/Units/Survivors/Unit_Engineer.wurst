package Unit_Engineer
import TlsUnitDefinition
import SurvivorUnitDefinition
import TlsUnitDefinitionBuilder

public SurvivorUnitDefinition g_engineerDefinition

// ============================================================================
@compiletime function createObjectDefinitions()

  g_engineerDefinition = new SurvivorUnitDefinition(TlsUnitIds.Survivors.engineer, UnitIds.bloodelfengineer)
    ..setNormalAbilities(commaList(
      TlsAbilityIds.builderSkilledRepair,
      TlsAbilityIds.inventory2Slots))
    ..setDeathType(DeathType.CanRaiseDoesDecay)
    ..setDefenseBase(1)
    ..setArmorType(ArmorType.Medium)
    ..setDefenseUpgradeBonus(1)
    ..setHitPointsMaximumBase(100)
    ..setHitPointsRegenerationRate(1.0)
    ..setManaMaximum(0)
    ..setManaInitialAmount(0)
    ..setSpeedBase(250)
    ..setStructuresBuilt(commaList(
      TlsUnitIds.manualGenerator,
      TlsUnitIds.solarGenerator,
      TlsUnitIds.battery,
      TlsUnitIds.turretPhysical,
      TlsUnitIds.turretElemental))
    ..setName("Engineer")
    ..addUnitClass(TlsUnitClassification.HUMAN)
    ..addUnitClass(TlsUnitClassification.MELEE)
    ..build("The Engineer can construct more advanced camp structures and repair structures faster.",
      tooltipBuilder -> begin
        let abilities = new TooltipItem("Abilities: ")
        ..addValue("Repair x2")
        tooltipBuilder.addItem(abilities)
        let structuresBuilt = new TooltipItem("Can Build: ")
        ..addValue("Generator")
        tooltipBuilder.addItem(structuresBuilt)
      end)

// ============================================================================
init
  if (g_engineerDefinition == null)
    createObjectDefinitions()
    