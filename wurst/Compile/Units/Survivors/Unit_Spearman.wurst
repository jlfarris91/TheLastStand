package Unit_Spearman
import TlsUnitDefinition
import SurvivorUnitDefinition
import TlsUpgradeIds
import Range
import TlsUnitDefinitionBuilder
import ColorUtility
import Icons
import TlsUpgradeDefinition
import AbilityObjEditing
import BuffObjEditing
import ObjectIdGenerator
import PlayerExtensions
import RegisterEvents
import HumanPlayers

constant real AIR_DAMAGE_MULT = 1.20
constant int SPEARMEN_ABILITY_MAX_LEVELS = 10
constant int POISON_BUFF_ID = compiletime(BUFF_ID_GEN.next())
constant int HAWKEYE_BUFF_ID = compiletime(BUFF_ID_GEN.next())

public SurvivorUnitDefinition g_spearman1Definition
public SurvivorUnitDefinition g_spearman2Definition

// ============================================================================
function calculateEnsnareDuration(int lvl) returns real
  return 9.0 + (lvl - 1).toReal()

// ============================================================================
function calculateEnvenomedSpearsDamagePerSecond(int lvl) returns real
  return 4.0 + (lvl - 1).toReal() * 2.0

// ============================================================================
function calculateEnvenomedSpearsDuration(int lvl) returns real
  return 10.0 + (lvl - 1).toReal() * 2.0

// ============================================================================
function calculateHawkeyeDefenseReduction(int lvl) returns int
  return 4 + (lvl - 1)

// ============================================================================
function calculateHawkeyeDuration(int lvl) returns real
  return 10.0 + (lvl - 1) * 2.0

// ============================================================================
@compiletime function createObjectDefinitions()

  g_spearman1Definition = new SurvivorUnitDefinition(TlsUnitIds.Survivors.spearman1, UnitIds.brigand)
    ..setNormalAbilities(commaList(
      TlsAbilityIds.inventory2Slots,
      TlsAbilityIds.spearmanEnsnare,
      TlsAbilityIds.spearmanEnvenomedSpears,
      TlsAbilityIds.spearmanHawkeye))
    ..setAttack1AttackType(AttackType.Pierce)
    ..setAttack1CooldownTime(2)
    ..setAttack1DamageRange(rangeInt(220, 260))
    ..setAttack1Range(600)
    ..setAttacksEnabled(1)
    ..setDefenseBase(15)
    ..setArmorType(ArmorType.Medium)
    ..setDefenseUpgradeBonus(1)
    ..setManaInitialAmount(0)
    ..setManaMaximum(0)
    ..setSpeedBase(225)
    ..setUpgradesUsed(commaList(
      TlsUpgradeIds.survivorHpBonus,
      TlsUpgradeIds.leatherArmor,
      TlsUpgradeIds.spearmanNoviceTraining,
      TlsUpgradeIds.spearmanFurtherStudy))
    ..setName("Spearman")
    ..setCasterUpgradeNames("Initiate,Adept,Master")
    ..setCasterUpgradeTips("- Ensnare,- Ensnare|n- Envenomed Spears,- Ensnare|n- Envenomed Spears|n- Hawkeye")
    ..setCasterUpgradeArt("UI\\Widgets\\Console\\Human\\infocard-spearman.blp")
    ..addUnitClass(TlsUnitClassification.HUMAN)
    ..addUnitClass(TlsUnitClassification.RANGED)
    ..build("A medium ranged unit that excels at killing elite units. Can cast Ensnare, which forces air units to the ground. Can also learn Envenomed Spears and Hawkeye.",
      tooltipBuilder -> begin
        let properties = new TooltipItem("Properties: ")
        ..addValue("-10% damage to non-elites".colorize(Colors.red))
        ..addValue("+10% damage to elites".colorize(Colors.green))
        ..addValue("+20% damage to air".colorize(Colors.green))
        tooltipBuilder.addItem(properties)
      end)

  g_spearman2Definition = new SurvivorUnitDefinition(TlsUnitIds.Survivors.spearman2, UnitIds.assassin)
    ..setNormalAbilities(commaList(
      TlsAbilityIds.inventory4Slots,
      TlsAbilityIds.spearmanEnsnare,
      TlsAbilityIds.spearmanEnvenomedSpears,
      TlsAbilityIds.spearmanHawkeye))
    ..setIconGameInterface(Icons.bTNBanditSpearThrower)
    ..setIconGameInterfaceDisabled(Icons.dISBTNBanditSpearThrower)
    ..setModelFile("units\\creeps\\BanditSpearThrower\\BanditSpearThrower.mdl")
    ..setTintingColorRed(255)
    ..setTintingColorGreen(150)
    ..setTintingColorBlue(200)
    ..setScalingValue(1.2)
    ..setAttack1AttackType(AttackType.Pierce)
    ..setAttack1CooldownTime(1.5)
    ..setAttack1DamageRange(rangeInt(340, 380))
    ..setAttack1Range(600)
    ..setAttacksEnabled(1)
    ..setDefenseBase(25)
    ..setArmorType(ArmorType.Medium)
    ..setDefenseUpgradeBonus(1)
    ..setManaInitialAmount(0)
    ..setManaMaximum(0)
    ..setSpeedBase(250)
    ..setUpgradesUsed(commaList(
      TlsUpgradeIds.survivorHpBonus,
      TlsUpgradeIds.leatherArmor,
      TlsUpgradeIds.spearmanNoviceTraining,
      TlsUpgradeIds.spearmanFurtherStudy))
    ..setName("Assassin")
    ..setCasterUpgradeNames("Initiate,Adept,Master")
    ..setCasterUpgradeTips("- Ensnare,- Ensnare|n- Envenomed Spears,- Ensnare|n- Envenomed Spears|n- Hawkeye")
    ..setCasterUpgradeArt("UI\\Widgets\\Console\\Human\\infocard-assassin.blp")
    ..addUnitClass(TlsUnitClassification.HUMAN)
    ..addUnitClass(TlsUnitClassification.RANGED)
    ..build("A medium ranged unit that excels at killing elite units. Can cast Ensnare, which forces air units to the ground. Can also learn Envenomed Spears and Hawkeye.",
      tooltipBuilder -> begin
        let properties = new TooltipItem("Properties: ")
        ..addValue("-20% damage to non-elites".colorize(Colors.red))
        ..addValue("+20% damage to elites".colorize(Colors.green))
        ..addValue("+40% damage to air".colorize(Colors.green))
        tooltipBuilder.addItem(properties)
      end)

  new UpgradeDefinition(TlsUpgradeIds.spearmanNoviceTraining)
    ..setLevels(2)
    
    ..setName(1, "Spearmen Adept Training")
    ..setTooltip(1, "Spearmen Adept Training")
    ..setTooltipExtended(1, "Increases Spearmen attack speed, attack damage and gives them the Envenomed Spears ability.")
    ..setIcon(1, Icons.bTNSteelRanged)
    ..setRequirements(1, "")
    
    ..setName(2, "Spearmen Master Training")
    ..setTooltip(2, "Spearmen Master Training")
    ..setTooltipExtended(2, "Increases Spearmen attack speed, attack damage and gives them the ability to cast Hawkeye.")
    ..setIcon(2, Icons.bTNThoriumRanged)
    ..setRequirements(2, commaList(TlsUnitIds.headquarters2))

    ..setButtonPositionX(0)
    ..setButtonPositionY(2)
    ..setGoldCostBase(1)
    ..setGoldCostIncrement(1)
    ..setLumberCostBase(600)
    ..setLumberCostIncrement(600)
    ..addEffectAttackSpeedBonus(0.1, 0.1)
    ..addEffectAttackDamageBonus(50, 50)
    ..setClass(UpgradeClass.Caster)
    ..setTimeBase(10)
    ..setTimeIncrement(5)

  new UpgradeDefinition(TlsUpgradeIds.spearmanFurtherStudy)
    ..setLevels(5)

    ..setName(1, "Spearmen Further Study I")
    ..setTooltip(1, "Spearmen Further Study I")
    ..setTooltipExtended(1, "Increases Spearmen attack damage and the effectiveness of Ensnare, Envenomed Spears and Hawkeye.")
    ..setIcon(1, Icons.bTNTome)
    ..setRequirements(1, commaList(TlsUpgradeIds.spearmanNoviceTraining))
    ..setRequirementsLevels(1, "2")
    
    ..setName(2, "Spearmen Further Study II")
    ..setTooltip(2, "Spearmen Further Study II")
    ..setTooltipExtended(1, "Further increases Spearmen attack damage and the effectiveness of Ensnare, Envenomed Spears and Hawkeye.")
    ..setIcon(2, Icons.bTNTomeBrown)
    ..setRequirements(5, commaList(TlsUnitIds.headquarters3))
    
    ..setName(3, "Spearmen Further Study III")
    ..setTooltip(3, "Spearmen Further Study III")
    ..setTooltipExtended(1, "Further increases Spearmen attack damage and the effectiveness of Ensnare, Envenomed Spears and Hawkeye.")
    ..setIcon(3, Icons.bTNTomeRed)
    
    ..setName(4, "Spearmen Further Study IV")
    ..setTooltip(4, "Spearmen Further Study IV")
    ..setTooltipExtended(1, "Further increases Spearmen attack damage and the effectiveness of Ensnare, Envenomed Spears and Hawkeye.")
    ..setIcon(4, Icons.bTNSorceressAdept)
    ..setRequirements(5, commaList(TlsUnitIds.headquarters4))
    
    ..setName(5, "Spearmen Further Study V")
    ..setTooltip(5, "Spearmen Further Study V")
    ..setTooltipExtended(1, "Further increases Spearmen attack damage and the effectiveness of Ensnare, Envenomed Spears and Hawkeye.")
    ..setIcon(5, Icons.bTNSorceressMaster)
    ..setRequirements(5, commaList(TlsUnitIds.headquarters5))
    
    ..setButtonPositionX(0)
    ..setButtonPositionY(2)
    ..setGoldCostBase(3)
    ..setGoldCostIncrement(1)
    ..setLumberCostBase(1800)
    ..setLumberCostIncrement(600)
    ..addEffectAttackDamageBonus(25, 25)
    ..addEffectAbilityLevelBonus(1, 1, TlsAbilityIds.spearmanEnsnare.toRawCode())
    ..addEffectAbilityLevelBonus(1, 1, TlsAbilityIds.spearmanEnvenomedSpears.toRawCode())
    ..addEffectAbilityLevelBonus(1, 1, TlsAbilityIds.spearmanHawkeye.toRawCode())
    ..setClass(UpgradeClass.NONE)
    ..setTimeBase(10)
    ..setTimeIncrement(5)

  new AbilityDefinitionEnsnare(TlsAbilityIds.spearmanEnsnare)
    ..setLevels(10)
    ..setButtonPositionNormalX(0)
    ..setButtonPositionNormalY(2)
    ..setRequirements("")
    ..presetAirUnitHeight(lvl -> 200.0)
    ..presetAirUnitLowerDuration(lvl -> 0.6)
    ..presetMeleeAttackRange(lvl -> 128.0)
    ..presetBuffs(lvl -> "Bena,Beng")
    ..presetCastRange(lvl -> 500.0)
    ..presetCooldown(lvl -> 15.0)
    ..presetDurationHero(lvl -> calculateEnsnareDuration(lvl) / 2.0)
    ..presetDurationNormal(lvl -> calculateEnsnareDuration(lvl))
    ..presetTargetsAllowed(lvl -> "air,ground,enemy,neutral")
    ..presetTooltipNormal(lvl -> "Ensnare [|cffffcc00Level {0}|r]".format(lvl.toString()))
    ..presetTooltipNormalExtended(lvl -> "Causes a target enemy unit to be bound to the ground so that it cannot move for {0} seconds. Air units that are ensnared can be attacked as though they were land units.".format(calculateEnsnareDuration(lvl).floor().toString()))

  new AbilityDefinitionVenomSpears(TlsAbilityIds.spearmanEnvenomedSpears)
    ..setLevels(10)
    ..setButtonPositionNormalX(1)
    ..setButtonPositionNormalY(2)
    ..setRequirements(commaList(TlsUpgradeIds.spearmanNoviceTraining))
    ..setRequirementsLevels("1")
    ..presetAttackSpeedFactor(lvl -> 0.0)
    ..presetDamageperSecond(lvl -> calculateEnvenomedSpearsDamagePerSecond(lvl))
    ..presetMovementSpeedFactor(lvl -> 0.0)
    ..presetStackingType(StackingType.DAMAGE, true)
    ..presetBuffs(lvl -> "Bpoi,Bpsd")
    ..presetDurationHero(lvl -> 1.0)
    ..presetDurationNormal(lvl -> calculateEnvenomedSpearsDuration(lvl))
    ..presetTargetsAllowed(lvl -> "air,ground,enemy,organic")
    ..presetTooltipNormal(lvl -> "Envenomed Spears [|cffffcc00Level {0}|r]".format(lvl.toString()))
    ..presetTooltipNormalExtended(lvl -> "Deals {0} poison damage per second. |nLasts {1} seconds.".format(
      calculateEnvenomedSpearsDamagePerSecond(lvl).floor().toString(),
      calculateEnvenomedSpearsDuration(lvl).floor().toString()))

  new BuffDefinition(HAWKEYE_BUFF_ID, 'Bfae')
    ..setTooltipNormal("Hawkeye")
    ..setTooltipNormalExtended("This unit is being watched by a Spearman; it has reduced armor and can be seen by the enemy.")
    ..setIcon(Icons.bTNScout)
    ..setArtTarget("Abilities\\Marked\\Marked.mdl")
    ..setTargetAttachmentPoint0("overhead")

  new AbilityDefinitionFaerieFire(TlsAbilityIds.spearmanHawkeye)
    ..setIconNormal("ReplaceableTextures\\CommandButtons\\BTNHawkeyeOn.blp")
    ..setIconTurnOff("ReplaceableTextures\\CommandButtons\\BTNHawkeyeOff.blp")
    ..setButtonPositionNormalX(2)
    ..setButtonPositionNormalY(2)
    ..setButtonPositionTurnOffX(2)
    ..setButtonPositionTurnOffY(2)
    ..setRequirements(commaList(TlsUpgradeIds.spearmanNoviceTraining))
    ..setRequirementsLevels("2")
    ..presetAlwaysAutocast(lvl -> false)
    ..presetDefenseReduction(lvl -> calculateHawkeyeDefenseReduction(lvl))
    ..presetBuffs(lvl -> HAWKEYE_BUFF_ID.toRawCode())
    ..presetCastRange(lvl -> 700.0)
    ..presetCooldown(lvl -> 15.0)
    ..presetDurationHero(lvl -> calculateHawkeyeDuration(lvl) / 2.0)
    ..presetDurationNormal(lvl -> calculateHawkeyeDuration(lvl))
    ..presetManaCost(lvl -> 0)
    ..presetTargetsAllowed(lvl -> "air,ground,enemy,neutral")
    ..presetTooltipNormal(lvl -> "Hawkeye [|cffffcc00Level {0}|r]".format(lvl.toString()))
    ..presetTooltipNormalExtended(lvl -> "Reduces a target enemy unit's armor by {0} and gives vision of that unit. |nLasts {1} seconds.".format(
      calculateHawkeyeDefenseReduction(lvl).toString(),
      calculateHawkeyeDuration(lvl).floor().toString()))
    ..presetTooltipTurnOff(lvl ->"|cffc3dbffRight-click to activate auto-casting.|r")
    ..presetTooltipTurnOffExtended(lvl ->"|cffc3dbffRight-click to deactivate auto-casting.|r")

// ============================================================================
public function onResearchFinished()
  let researchTypeId = GetResearched()

  if (researchTypeId != TlsUpgradeIds.spearmanNoviceTraining)
    return

  let researchingUnit = GetResearchingUnit() 
  let owningPlayer = researchingUnit.getOwner()
  
  if (owningPlayer.getTechResearchLevel(researchTypeId) < 2)
    return

  owningPlayer.setTechAvailability(TlsUpgradeIds.spearmanFurtherStudy, true)

// ============================================================================
init
  if (g_spearman1Definition == null)
    createObjectDefinitions()

  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_RESEARCH_FINISH, function onResearchFinished)

  for p in g_PlayingHumanPlayers
    p.setTechAvailability(TlsUpgradeIds.spearmanFurtherStudy, false)