package Unit_Medic
import TlsUnitDefinition
import Units
import SurvivorJobHeroDefinition
import Soundsets
import SurvivorJobs
import TlsUnitTooltipBuilder
import Range

public MedicDefinition g_medicDefinition

// ============================================================================
public class MedicDefinition extends SurvivorJobHeroDefinition
  construct(int newId)
    super(newId, UnitIds.paladin)

  // --------------------------------------------------------------------------
  protected override function init_abilities()
    super.init_abilities()

    setNormalAbilities(commaList(
      TlsAbilityIds.unassignJob,
      TlsAbilityIds.survivorInventory2Slots,
      TlsAbilityIds.heal))

  // --------------------------------------------------------------------------
  protected override function init_art()
    super.init_art()

    setSelectionScale(1.0)
    setAnimationBlendTimeseconds(0.15)
    setAnimationCastBackswing(0.510)
    setAnimationCastPoint(0.3)
    setAnimationRunSpeed(270.0)
    setAnimationWalkSpeed(270.0)
    setDeathTimeseconds(3.0)
    setElevationSamplePoints(0)
    setElevationSampleRadius(50.0)
    setIconGameInterface("ReplaceableTextures\\CommandButtons\\BTNApprenticeWizard.blp")
    setModelFile(Units.humanMage1)
    setProjectileImpactZ(65.0)
    setScalingValue(1.0)
    setSelectionScale(1.0)

    setShadowImageCenterX(30)
    setShadowImageCenterY(30)
    setShadowImageWidth(80)
    setShadowImageHeight(80)

    setUnitSoundSet(Soundsets.priest)

  // --------------------------------------------------------------------------
  protected override function init_combat()
    super.init_combat()

    setAcquisitionRange(600.0)
    setArmorSoundType(ArmorSoundType.Flesh)

    setAttack1AnimationBackswingPoint(0.580)
    setAttack1AnimationDamagePoint(0.590)
    setAttack1AreaofEffectFullDamage(0)
    setAttack1AreaofEffectMediumDamage(0)
    setAttack1AreaofEffectSmallDamage(0)
    setAttack1AreaofEffectTargets("_")
    setAttack1AttackType(AttackType.Magic)
    setAttack1CooldownTime(2)
    this.setAttack1DamageRange(rangeInt(60, 66))
    setAttack1DamageFactorMedium(0)
    setAttack1DamageFactorSmall(0)
    setAttack1DamageLossFactor(0)
    setAttack1DamageSpillDistance(0)
    setAttack1DamageSpillRadius(0)
    setAttack1DamageUpgradeAmount(0)
    setAttack1MaximumNumberofTargets(1)
    setAttack1ProjectileArc(0.0)
    setAttack1ProjectileArt("Abilities\\Weapons\\PriestMissile\\PriestMissile.mdl")
    setAttack1ProjectileHomingEnabled(false)
    setAttack1ProjectileSpeed(900)
    setAttack1Range(600)
    setAttack1RangeMotionBuffer(250.0)
    setAttack1ShowUI(true)
    setAttack1TargetsAllowed(commaList(
      TargetsAllowed.debris,
      TargetsAllowed.ground,
      TargetsAllowed.air,
      TargetsAllowed.structure,
      TargetsAllowed.ward))
    setAttack1WeaponSound(WeaponSound.Nothing)
    setAttack1WeaponType(WeaponType.Missile)

    setAttacksEnabled(1)
    setDeathType(DeathType.CanRaiseDoesDecay)
    setDefenseBase(0)
    setArmorType(ArmorType.Unarmored)
    setDefenseUpgradeBonus(2)
    setMinimumAttackRange(0)
    setTargetedAs("ground")

  // --------------------------------------------------------------------------
  protected override function init_stats()
    super.init_stats()

    setSpeedBase(250)

    setHitPointsMaximumBase(100)
    setManaInitialAmount(100)
    setManaMaximum(100)
    setManaRegeneration(0.2)

    setPrimaryAttribute("INT")

    setStartingStrength(10)
    setStrengthPerLevel(5)

    setStartingAgility(10)
    setAgilityPerLevel(6)

    setStartingIntelligence(40)
    setIntelligencePerLevel(10)

  // --------------------------------------------------------------------------
  protected override function init_techtree()
    super.init_techtree()
    
    setUpgradesUsed("")

  // --------------------------------------------------------------------------
  protected override function init_text()
    super.init_text()
    setName(SurvivorJobs.medic.getTitle())

    let tooltipBuilder = TlsUnitTooltipBuilder.createDefault(this,
      "The Medic can heal other survivors.")

    let structuresBuilt = new TooltipItem("Abilities: ")
    ..addValue("Heal")
    tooltipBuilder.addItem(structuresBuilt)

    setTooltipBasic(tooltipBuilder.getTooltipBasic())
    setTooltipExtended(tooltipBuilder.getTooltipExtended())

    destroy tooltipBuilder

// ============================================================================
@compiletime function createMedic()
  g_medicDefinition = new MedicDefinition(TlsUnitIds.Survivors.survivorMedic)

// ============================================================================
init
  if (g_medicDefinition == null)
    createMedic()