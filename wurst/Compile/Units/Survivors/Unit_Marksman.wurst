package Unit_Marksman
import Units
import Icons
import Abilities
import TlsUnitDefinition
import SurvivorJobHeroDefinition
import Soundsets
import SurvivorJobs
import TlsUnitTooltipBuilder
import ColorUtility
import Range
import TlsUpgradeIds

public MarksmanDefinition g_marksmanDefinition

// ============================================================================
public class MarksmanDefinition extends SurvivorJobHeroDefinition
  construct(int newId)
    super(newId, UnitIds.paladin)

  // --------------------------------------------------------------------------
  protected override function init_abilities()    
    super.init_abilities()

    setNormalAbilities(commaList(
      TlsAbilityIds.unassignJob,
      TlsAbilityIds.inventory4Slots))

  // --------------------------------------------------------------------------
  protected override function init_art()
    super.init_art()

    setModelFile(Units.rifleman1)
    setIconGameInterface(Icons.bTNRifleman)
    setIconGameInterfaceDisabled(Icons.dISBTNRifleman)

    setSelectionScale(1.0)
    setAnimationBlendTimeseconds(0.15)
    setAnimationCastBackswing(0.510)
    setAnimationCastPoint(0.3)
    setAnimationRunSpeed(270.0)
    setAnimationWalkSpeed(270.0)
    setDeathTimeseconds(1.7)
    setElevationSamplePoints(0)
    setElevationSampleRadius(20.0)
    setOrientationInterpolation(0)
    setScalingValue(0.8)

    setShadowImageCenterX(40)
    setShadowImageCenterY(40)
    setShadowImageWidth(90)
    setShadowImageHeight(90)

    setUnitSoundSet(Soundsets.rifleman)

  // --------------------------------------------------------------------------
  protected override function init_combat()
    super.init_combat()

    setAcquisitionRange(600.0)
    setArmorSoundType(ArmorSoundType.Flesh)

    setAttack1AnimationBackswingPoint(0.700)
    setAttack1AnimationDamagePoint(0.170)
    setAttack1AreaofEffectFullDamage(0)
    setAttack1AreaofEffectMediumDamage(0)
    setAttack1AreaofEffectSmallDamage(0)
    setAttack1AreaofEffectTargets("_")
    setAttack1AttackType(AttackType.Chaos)
    setAttack1CooldownTime(1.5)
    setAttack1DamageBase(10)
    setAttack1DamageFactorMedium(0)
    setAttack1DamageFactorSmall(0)
    setAttack1DamageLossFactor(0)
    setAttack1DamageNumberofDice(2)
    setAttack1DamageSidesperDie(6)
    setAttack1DamageSpillDistance(0)
    setAttack1DamageSpillRadius(0)
    setAttack1DamageUpgradeAmount(0)
    setAttack1MaximumNumberofTargets(1)
    setAttack1ProjectileArc(0)
    setAttack1ProjectileArt(Abilities.wardenMissile)
    setAttack1ProjectileHomingEnabled(false)
    setAttack1ProjectileSpeed(1900)
    setAttack1Range(600)
    setAttack1RangeMotionBuffer(250.0)
    setAttack1ShowUI(true)
    setAttack1TargetsAllowed(commaList(
      TargetsAllowed.air,
      TargetsAllowed.debris,
      TargetsAllowed.ground,
      TargetsAllowed.structure,
      TargetsAllowed.ward))
    setAttack1WeaponSound(WeaponSound.Nothing)
    setAttack1WeaponType(WeaponType.Missile)
    
    setAttacksEnabled(1)
    setDeathType(DeathType.CanRaiseDoesDecay)
    setDefenseBase(0)
    setArmorType(ArmorType.Medium)
    setDefenseUpgradeBonus(1)
    setMinimumAttackRange(0)
    setTargetedAs("ground")

  // --------------------------------------------------------------------------
  protected override function init_movement()
    super.init_movement()

    setSpeedBase(250)

  // --------------------------------------------------------------------------
  protected override function init_stats()
    super.init_stats()

    setSpeedBase(250)

    setHitPointsMaximumBase(100)
    setHitPointsRegenerationRate(0.25)

    setManaInitialAmount(100)
    setManaMaximum(100)
    setManaRegeneration(0.01)

    setPrimaryAttribute("AGI")

    setStartingStrength(20)
    setStrengthPerLevel(5)

    setStartingAgility(30)
    setAgilityPerLevel(5)

    setStartingIntelligence(20)
    setIntelligencePerLevel(1)
  
  // --------------------------------------------------------------------------
  protected override function init_techtree()
    super.init_techtree()
    
    setUpgradesUsed(commaList(
      TlsUpgradeIds.marksmanLongRange,
      TlsUpgradeIds.marksmanAttackSpeed))

  // --------------------------------------------------------------------------
  protected override function init_text()
    super.init_text()

    setName(SurvivorJobs.marksman.getTitle())

// ============================================================================
public class Marksman1Definition extends MarksmanDefinition

  // --------------------------------------------------------------------------
  construct(int newId)
    super(newId)

  // --------------------------------------------------------------------------
  override protected function init_art()
    super.init_art()
    setIconGameInterface(Icons.bTNRifleman)
    setModelFile(Units.rifleman1)

  // --------------------------------------------------------------------------
  protected override function init_combat()
    super.init_combat()
    setAttack1CooldownTime(4)
    this.setAttack1DamageRange(rangeInt(200, 220))

  // --------------------------------------------------------------------------
  protected override function init_techtree()
    super.init_techtree()
    setUpgradesTo("")

  // --------------------------------------------------------------------------
  protected override function init_stats()
    super.init_stats()

    setHitPointsMaximumBase(100)
    setHitPointsRegenerationRate(0.25)

    setManaInitialAmount(100)
    setManaMaximum(100)
    setManaRegeneration(0.01)

    setPrimaryAttribute("AGI")

    setStartingStrength(20)
    setStrengthPerLevel(5)

    setStartingAgility(30)
    setAgilityPerLevel(5)

    setStartingIntelligence(20)
    setIntelligencePerLevel(1)

  // --------------------------------------------------------------------------
  protected override function init_text()
    super.init_text()

    setName(SurvivorJobs.marksman.getTitle())

    let tooltipBuilder = TlsUnitTooltipBuilder.createDefault(this,
      "The Marksman can hit targets at a long range and does extra damage to bosses.")

    let properties = new TooltipItem("Properties: ")
    ..addValue("+10% damage to elites".colorize(Colors.green))
    ..addValue("+20% damage to bosses".colorize(Colors.green))
    ..addValue("+50% crit chance".colorize(Colors.green))
    ..addValue("+4x crit damage multiplier".colorize(Colors.green))
    tooltipBuilder.addItem(properties)

    setTooltipBasic(tooltipBuilder.getTooltipBasic())
    setTooltipExtended(tooltipBuilder.getTooltipExtended())

    destroy tooltipBuilder

// ============================================================================
@compiletime function createSurvivorMarksman()
  g_marksmanDefinition = new MarksmanDefinition(TlsUnitIds.Survivors.survivorMarksman)

// ============================================================================
init
  if (g_marksmanDefinition == null)
    createSurvivorMarksman()