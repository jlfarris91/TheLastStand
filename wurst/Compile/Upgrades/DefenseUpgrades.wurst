package DefenseUpgrades
import TlsUpgradeDefinition
import Icons
import TlsUnitIds
import ObjectIds
import TlsUpgradeIds
import RealExtensions
import ColorUtility

// ============================================================================
@compiletime function createUpgrade_defenseResearch()
  let def = new TlsUpgradeDefinition(TlsUpgradeIds.defenseResearch, 2)
    ..setButtonPositionX(0)
    ..setButtonPositionY(0)
    ..setGoldCostBase(10)
    ..setGoldCostIncrement(10)
    ..setRace(Race.Human)
    ..setTimeBase(30)
    ..setTimeIncrement(15)

  // Level 1
  def.setName(1, "Defense Focus I")
  def.setTooltip(1, "Defense Focus I")
  def.setTooltipExtended(1, "Unlocks the defense tech tree.")
  def.setIcon(1, Icons.bTNStoneArchitecture)
  def.setRequirements(1, commaList(TlsUnitIds.headquarters1, TlsUpgradeIds.limitPrimaryResearch))

  // Level 2
  def.setName(2, "Defense Focus II")
  def.setTooltip(2, "Defense Focus II")
  def.setTooltipExtended(2, "Unlocks more of the defense tech tree.")
  def.setIcon(2, Icons.bTNArcaniteArchitecture)
  def.setRequirements(2, commaList(TlsUnitIds.headquarters3, TlsUpgradeIds.limitPrimaryResearch))

constant real LUMBER_REBATE_VALUE_BASE = 0.1
constant real LUMBER_REBATE_VALUE_INC = 0.1

// ============================================================================
public function getLumberRefundPerc01(int level) returns real
  return LUMBER_REBATE_VALUE_BASE + (LUMBER_REBATE_VALUE_INC * max(level - 1, 0))

// ============================================================================
@compiletime function createUpgrade_lumberRefund()
  let def = new TlsUpgradeDefinition(TlsUpgradeIds.lumberRefund, 3)
    ..setButtonPositionX(0)
    ..setButtonPositionY(0)
    ..setGoldCostBase(3)
    ..setGoldCostIncrement(1)
    ..setRace(Race.Human)
    ..setTimeBase(30)
    ..setTimeIncrement(15)

  def.presetTooltipExtended(lvl -> "Receive a refund of {0} of the lumber spent on a building when its construction is completed.".format((getLumberRefundPerc01(lvl)).toPercentageString01().colorize(Colors.gold)))

  // Level 1
  def.setName(1, "Careful Planning I")
  def.setTooltip(1, "Careful Planning I")
  def.setIcon(1, Icons.bTNStoneArchitecture)
  def.setRequirements(1, commaList(TlsUnitIds.headquarters1, TlsUpgradeIds.defenseResearch))

  // Level 2
  def.setName(2, "Careful Planning II")
  def.setTooltip(2, "Careful Planning II")
  def.setIcon(2, Icons.bTNArcaniteArchitecture)
  def.setRequirements(2, commaList(TlsUnitIds.headquarters3, TlsUpgradeIds.defenseResearch))

  // Level 3
  def.setName(3, "Careful Planning III")
  def.setTooltip(3, "Careful Planning III")
  def.setIcon(3, Icons.bTNArcaniteArchitecture)
  def.setRequirements(3, commaList(TlsUnitIds.headquarters3, TlsUpgradeIds.defenseResearch))


constant real SPIKE_STUN_CHANCE_VALUE_BASE = 0.1
constant real SPIKE_STUN_CHANCE_VALUE_INC = 0.05
constant real SPIKE_STUN_DURATION_VALUE_BASE = 1.0
constant real SPIKE_STUN_DURATION_VALUE_INC = 2.0

// ============================================================================
public function getSpikeStunChance01(int level) returns real
  return SPIKE_STUN_CHANCE_VALUE_BASE + (SPIKE_STUN_CHANCE_VALUE_INC * max(level - 1, 0))

// ============================================================================
public function getSpikeStunDuration(int level) returns real
  return SPIKE_STUN_DURATION_VALUE_BASE + (SPIKE_STUN_DURATION_VALUE_INC * max(level - 1, 0))

// ============================================================================
@compiletime function createUpgrade_SpikeStunChance()
  let def = new TlsUpgradeDefinition(TlsUpgradeIds.spikeStunChance, 3)
    ..setButtonPositionX(0)
    ..setButtonPositionY(0)
    ..setGoldCostBase(2)
    ..setGoldCostIncrement(2)
    ..setRace(Race.Human)
    ..setTimeBase(30)
    ..setTimeIncrement(15)

  def.presetTooltipExtended(lvl -> "Spikes have a {0}/{1}/{2} chance to stun enemies for {3}/{4}/{5} seconds.".format(
    getSpikeStunChance01(1).toPercentageString01().colorize(Colors.gold),
    getSpikeStunChance01(2).toPercentageString01().colorize(Colors.gold),
    getSpikeStunChance01(3).toPercentageString01().colorize(Colors.gold), 
    getSpikeStunDuration(1).toInt().toString().colorize(Colors.gold),
    getSpikeStunDuration(2).toInt().toString().colorize(Colors.gold),
    getSpikeStunDuration(3).toInt().toString().colorize(Colors.gold)))

  // Level 1
  def.setName(1, "Stunning Spikes I")
  def.setTooltip(1, "Stunning Spikes I")
  def.setIcon(1, Icons.bTNStun)
  def.setRequirements(1, commaList(TlsUnitIds.headquarters1, TlsUpgradeIds.defenseResearch))

  // Level 2
  def.setName(2, "Stunning Spikes II")
  def.setTooltip(2, "Stunning Spikes II")
  def.setIcon(2, Icons.bTNStun)
  def.setRequirements(2, commaList(TlsUnitIds.headquarters2, TlsUpgradeIds.defenseResearch))

  // Level 3
  def.setName(3, "Stunning Spikes III")
  def.setTooltip(3, "Stunning Spikes III")
  def.setIcon(3, Icons.bTNStun)
  def.setRequirements(3, commaList(TlsUnitIds.headquarters3, TlsUpgradeIds.defenseResearch))

constant real MARKED_TARGET_DAMAGE_SCALE_PERC_VALUE_BASE = 0.1
constant real MARKED_TARGET_DAMAGE_SCALE_PERC_VALUE_INC = 0.1

// ============================================================================
public function getMarkedTargetDamageScalePerc01(int level) returns real
  return MARKED_TARGET_DAMAGE_SCALE_PERC_VALUE_BASE + (MARKED_TARGET_DAMAGE_SCALE_PERC_VALUE_INC * max(level - 1, 0))

// ============================================================================
@compiletime function createUpgrade_MarkedTargetDamageScale()
  let def = new TlsUpgradeDefinition(TlsUpgradeIds.scoutTowerMarkTargets, 3)
    ..setButtonPositionX(1)
    ..setButtonPositionY(0)
    ..setGoldCostBase(2)
    ..setGoldCostIncrement(2)
    ..setRace(Race.Human)
    ..setTimeBase(30)
    ..setTimeIncrement(15)

  def.presetTooltipExtended(lvl -> "Scout Towers can now cast Mark Target while operated. Marked targets receive {0}/{1}/{2} more damage from attackers while marked.".format(
    getMarkedTargetDamageScalePerc01(1).toPercentageString01().colorize(Colors.gold),
    getMarkedTargetDamageScalePerc01(2).toPercentageString01().colorize(Colors.gold),
    getMarkedTargetDamageScalePerc01(3).toPercentageString01().colorize(Colors.gold)))

  // Level 1
  def.setName(1, "Mark Target I")
  def.setTooltip(1, "Mark Target I")
  def.setIcon(1, Icons.bTNReveal)
  def.setRequirements(1, commaList(TlsUnitIds.headquarters1, TlsUpgradeIds.defenseResearch))

  // Level 2
  def.setName(2, "Mark Target II")
  def.setTooltip(2, "Mark Target II")
  def.setIcon(2, Icons.bTNReveal)
  def.setRequirements(2, commaList(TlsUnitIds.headquarters2, TlsUpgradeIds.defenseResearch))

  // Level 3
  def.setName(3, "Mark Target III")
  def.setTooltip(3, "Mark Target III")
  def.setIcon(3, Icons.bTNReveal)
  def.setRequirements(3, commaList(TlsUnitIds.headquarters3, TlsUpgradeIds.defenseResearch))