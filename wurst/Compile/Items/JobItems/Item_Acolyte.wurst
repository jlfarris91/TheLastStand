package Item_Acolyte
import JobItemDefinition
import Unit_SurvivorMale
import Ability_BaseApplyJobItem
import TlsUnitDefinition
import ItemBuildUnitDefinition
import BuildItems
import TlsJobItemIds
import JobItemTooltipBuilder
import Unit_Acolyte
import GameConstants

public JobItemDefinition g_acolyte1JobItemDefinition

// ============================================================================
@compiletime function createObjectDefinitions()
  
  new BaseApplyJobItemAbilityDefinition(TlsAbilityIds.equipJobItem_Acolyte)

  let description = "Consists of a crimson robe, a ceremonial dagger and a binding of scrolls used by Acolytes to perform the unholy rituals."

  let builder = JobItemTooltipBuilder.createDefault(
    g_survivorDefinition,
    g_acolyteDefinition,
    description)

  g_acolyte1JobItemDefinition = new JobItemDefinition(TlsJobItemIds.acolyte, TlsAbilityIds.equipJobItem_Acolyte)
  ..setName("Acolyte's Equipment")
  ..setTooltipBasic("Acolyte's Equipment")
  ..setDescription(builder.getDescription())
  ..setTooltipExtended(builder.getTooltipExtended())
  ..setInterfaceIcon("ReplaceableTextures\\CommandButtons\\BTNSacrificialDagger.blp")
  ..setGoldCost(0)
  ..setLumberCost(0)
  ..setStockInitial(1)
  ..setStockMaximum(3)
  ..setStockStartDelay(0)
  ..setStockReplenishInterval(120)

  destroy builder

  new ItemBuildUnitDefinition(TlsUnitIds.BuildItemUnits.acolyte)
  ..setName(g_acolyte1JobItemDefinition.getName())
  ..setTooltipBasic("Build " + g_acolyte1JobItemDefinition.getName())
  ..setTooltipExtended(g_acolyte1JobItemDefinition.getTooltipExtended())
  ..setDescription(g_acolyte1JobItemDefinition.getDescription())
  ..setGoldCost(0)
  ..setLumberCost(0)
  ..setIconGameInterface(g_acolyte1JobItemDefinition.getInterfaceIcon())
  ..setBuildTime(BUILD_TIME_ITEM)
  ..setButtonPositionX(1)
  ..setButtonPositionY(0)
  ..setRequirements("")

// ============================================================================
init
  if (g_acolyte1JobItemDefinition == null)
    createObjectDefinitions()

  BuildItems.register(TlsJobItemIds.acolyte, TlsUnitIds.BuildItemUnits.acolyte)