package Item_Dagger
import JobItemDefinition
import Unit_Acolyte
import Unit_SurvivorMale
import Ability_BaseApplyJobItem
import TlsUnitDefinition
import ItemBuildUnitDefinition
import BuildItems
import TlsJobItemIds
import JobItemTooltipBuilder

public JobItemDefinition g_daggerDefinition

// ============================================================================
@compiletime function createItemAbility()
  new BaseApplyJobItemAbilityDefinition(TlsAbilityIds.applyJob_Acolyte)

// ============================================================================
@compiletime function createItem()

  let description = "A dagger used in ceremonial sacrifices."

  let builder = JobItemTooltipBuilder.createDefault(
    g_survivorDefinition,
    g_acolyteDefinition,
    description)

  g_daggerDefinition = new JobItemDefinition(TlsJobItemIds.acolyte1, TlsAbilityIds.applyJob_Acolyte)
  ..setName("Ceremonial Dagger")
  ..setTooltipBasic("Ceremonial Dagger")
  ..setDescription(builder.getDescription())
  ..setTooltipExtended(builder.getTooltipExtended())
  ..setInterfaceIcon("ReplaceableTextures\\CommandButtons\\BTNSacrificialDagger.blp")
  ..setGoldCost(0)
  ..setLumberCost(600)
  ..setStockInitial(1)
  ..setStockMaximum(3)
  ..setStockStartDelay(0)
  ..setStockReplenishInterval(120)

  destroy builder

// ============================================================================
@compiletime function createItemBuildUnit()

  new ItemBuildUnitDefinition(TlsUnitIds.BuildItemUnits.acolyte1)
  ..setName(g_daggerDefinition.getName())
  ..setTooltipBasic("Build " + g_daggerDefinition.getName())
  ..setTooltipExtended(g_daggerDefinition.getTooltipExtended())
  ..setDescription(g_daggerDefinition.getDescription())
  ..setGoldCost(0)
  ..setLumberCost(600)
  ..setIconGameInterface(g_daggerDefinition.getInterfaceIcon())
  ..setBuildTime(15)
  ..setButtonPositionX(0)
  ..setButtonPositionY(0)
  ..setRequirements("")

// ============================================================================
init
  if (g_daggerDefinition == null)
    createItem()

  BuildItems.register(TlsJobItemIds.acolyte1, TlsUnitIds.BuildItemUnits.acolyte1)