package Item_Headquarters
import TlsItemDefinition
import ItemBuildUnitDefinition
import BuildItems
import RegisterEvents
import Unit_CampHeadquarters
import TlsBuildingDefinition
import Icons

public TlsItemDefinition g_headquarters1ItemDefinition
public TlsItemDefinition g_headquarters2ItemDefinition
public TlsItemDefinition g_headquarters3ItemDefinition

// ============================================================================
@compiletime function createItems()
  g_headquarters1ItemDefinition = createItem(g_headquarters1Definition, TlsItemIds.headquarters1, TlsAbilityIds.buildHeadquarters1, HEADQUARTERS1_ICON)
  g_headquarters2ItemDefinition = createItem(g_headquarters2Definition, TlsItemIds.headquarters2, TlsAbilityIds.buildHeadquarters2, HEADQUARTERS2_ICON)
  g_headquarters3ItemDefinition = createItem(g_headquarters3Definition, TlsItemIds.headquarters3, TlsAbilityIds.buildHeadquarters3, HEADQUARTERS3_ICON)

// ============================================================================
function createItem(TlsBuildingDefinition def, int itemId, int abilId, string icon) returns TlsItemDefinition
  return new TlsItemDefinition(itemId, 'tbsm')
  ..setName(def.getName())
  ..setDescription("Constructs a {0} at a chosen location.".format(def.getName()))
  ..setTooltipBasic("Assemble {0}".format(def.getName()))
  ..setTooltipExtended("Constructs a {0} at a chosen location.|n|n{1}".format(def.getName(), def.getTooltipExtended()))
  ..setAbilities(commaList(abilId))
  ..setInterfaceIcon(icon)
  ..setGoldCost(0)
  ..setLumberCost(0)
  ..setCanBeDropped(false)
  ..setCanBeSoldByMerchants(false)
  ..setCanBeSoldToMerchants(false)
  ..setNumberofCharges(1)

// ============================================================================
@compiletime function createItemBuildUnits()
  createItemBuildUnit(TlsUnitIds.BuildItemUnits.headquarters1, g_headquarters1ItemDefinition)
  createItemBuildUnit(TlsUnitIds.BuildItemUnits.headquarters2, g_headquarters2ItemDefinition)
  createItemBuildUnit(TlsUnitIds.BuildItemUnits.headquarters3, g_headquarters3ItemDefinition)

// ============================================================================
function createItemBuildUnit(int unitId, TlsItemDefinition itemDef)
  new ItemBuildUnitDefinition(unitId)
  ..setName("Disassemble Tent")
  ..setTooltipBasic("Disassemble Tent")
  ..setTooltipExtended("Disassemble the tent in order to move it to a new location.")
  ..setDescription(itemDef.getDescription())
  ..setGoldCost(0)
  ..setLumberCost(0)
  ..setIconGameInterface(Icons.bTNPillage)
  ..setBuildTime(30)
  ..setButtonPositionX(3)
  ..setButtonPositionY(2)
  ..setRequirements("")

// ============================================================================
function onUnitTrained()
  let trainedUnit = GetTrainedUnit()
  let trainingUnit = GetTriggerUnit()
  let trainedUnitId = trainedUnit.getTypeId()

  // The player is moving the tent so remove it
  if ((trainedUnitId == TlsUnitIds.BuildItemUnits.headquarters1 or
      trainedUnitId == TlsUnitIds.BuildItemUnits.headquarters2 or
      trainedUnitId == TlsUnitIds.BuildItemUnits.headquarters3) and
      trainingUnit.isCampHeadquarters())
    trainingUnit.remove()

// ============================================================================
init
  if (g_headquarters1ItemDefinition == null)
    createItems()

  BuildItems.register(TlsItemIds.headquarters1, TlsUnitIds.BuildItemUnits.headquarters1)
  BuildItems.register(TlsItemIds.headquarters2, TlsUnitIds.BuildItemUnits.headquarters2)
  BuildItems.register(TlsItemIds.headquarters3, TlsUnitIds.BuildItemUnits.headquarters3)
  
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_TRAIN_FINISH, function onUnitTrained)