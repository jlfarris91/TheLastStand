package Waygates
import GroupUtils
import TlsUnitIds
import ErrorHandling
import Math

unit array[4] g_waygates

enum Quadrant
  NE
  SE
  SW
  NW

// ============================================================================
public function vec2.getQuadrant() returns Quadrant
  if (this.x >= 0 and this.y >= 0)
    return Quadrant.NE
  if (this.x >= 0 and this.y < 0)
    return Quadrant.SE
  if (this.x < 0 and this.y < 0)
    return Quadrant.SW
  if (this.x < 0 and this.y >= 0)
    return Quadrant.NW
  error("invalid pos")
  return Quadrant.NE

// ============================================================================
public function unit.getQuadrant() returns Quadrant
  return this.getPos().getQuadrant()

// ============================================================================
public function getNextWaygateClockwise(unit waygateUnit) returns unit
  let quadrant = waygateUnit.getQuadrant()
  let nextWaygateIndex = wrap((quadrant castTo int) + 1, 0, 3)
  return g_waygates[nextWaygateIndex]

// ============================================================================
public function getNextWaygateCounterClockwise(unit waygateUnit) returns unit
  let quadrant = waygateUnit.getQuadrant()
  let nextWaygateIndex = wrap((quadrant castTo int) - 1, 0, 3)
  return g_waygates[nextWaygateIndex]

// ============================================================================
function initializeWaygates()
  let temp = getGroup()
  temp.enumUnitsOfType(TlsUnitIds.waygate, null)
  for _unit in temp
    let quadrant = _unit.getPos().getQuadrant()
    g_waygates[quadrant castTo int] = _unit
  temp.release()

  let waygateNE = g_waygates[Quadrant.NE castTo int]
  let waygateSE = g_waygates[Quadrant.SE castTo int]
  let waygateSW = g_waygates[Quadrant.SW castTo int]
  let waygateNW = g_waygates[Quadrant.NW castTo int]

  WaygateSetDestination(waygateNE, waygateSW.getX(), waygateSW.getY())
  WaygateActivate(waygateNE, true)

  WaygateSetDestination(waygateSW, waygateNE.getX(), waygateNE.getY())
  WaygateActivate(waygateSW, true)

  WaygateSetDestination(waygateSE, waygateNW.getX(), waygateNW.getY())
  WaygateActivate(waygateSE, true)
  
  WaygateSetDestination(waygateNW, waygateSE.getX(), waygateSE.getY())
  WaygateActivate(waygateNW, true)

// ============================================================================
init
  initializeWaygates()