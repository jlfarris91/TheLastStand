package LinqTests
import LinkedList
import Linq

class TestInt
  int value

// ============================================================================
/*
	You encountered a bug in the interpreter: java.lang.ClassCastException
  at D:\Projects\WarcraftIII\TheLastStand\wurst\Utility\Enumerable\LinqTests.wurst line 32
... when calling linq_for_CompilerBug() in LinqTests.wurst:16
*/
// ============================================================================
@test function linq_for_CompilerBug()
  // arrange
  let list = new LinkedList<int>()
  let enumerable = list.asEnumerable()

  for i = 0 to 10
    list.add(i)

  // act
  let results = enumerable.where() (int i) ->
    return i > 3

  // assert
  assertNotNull(results)

  var j = 4
  for a in results
    assertTrue(a == j)
    j++

  destroy results

// ============================================================================
@test function linq_where_ReturnsCorrectResults()
  // arrange
  let list = new LinkedList<int>()
  let enumerable = list.asEnumerable()

  for i = 0 to 10
    list.add(i)

  // act
  let results = enumerable.where() (int i) ->
    return i > 3

  // assert
  assertNotNull(results)

  results.forEach() (j, element) ->
    assertTrue(element == 4 + j)

  destroy results

// ============================================================================
@test function linq_where_DestroysChildren()
  // arrange
  let list = new LinkedList<int>()
  let enumerable = list.asEnumerable()

  for i = 0 to 10
    list.add(i)

  // act
  let results = enumerable.where() (int i) ->
    return i > 3

  // assert
  assertNotNull(results)

  results.forEach() (j, element) ->
    assertTrue(element == 4 + j)

  destroy results

// ============================================================================
@test function linq_select_TransformsElements()
  // arrange
  let list = new LinkedList<int>()
  let enumerable = list.asEnumerable()

  for i = 0 to 10
    list.add(i)

  // act
  let results = enumerable.select() (int i) ->
    return I2S(i)

  // assert
  assertNotNull(results)

  results.forEach() (j, element) ->
    assertTrue(S2I(element) == j)

  destroy results

// ============================================================================
@test function linq_select_ChainSelects()
  // arrange
  let list = new LinkedList<int>()
  let enumerable = list.asEnumerable()

  for i = 0 to 10
    list.add(i)

  let stringResults = enumerable.select() (int i) ->
    return I2S(i)

  // act
  let realResults = stringResults.select() (string i) ->
    return S2R(i)

  // assert
  assertNotNull(enumerable)
  assertNotNull(stringResults)
  assertNotNull(realResults)

  realResults.forEach() (j, element) ->
    assertTrue(R2I(element) == j)

  destroy realResults


// ============================================================================
@test function linq_selectMany_ChainSelects()
  // arrange
  let list = new LinkedList<int>()
  let enumerable = list.asEnumerable()

  for i = 0 to 10
    list.add(i)

  let stringResults = enumerable.select() (int i) ->
    return I2S(i)

  // act
  let realResults = stringResults.select() (string i) ->
    return S2R(i)

  // assert
  assertNotNull(enumerable)
  assertNotNull(stringResults)
  assertNotNull(realResults)

  realResults.forEach() (j, element) ->
    assertTrue(R2I(element) == j)

  destroy realResults