package RealTime
import ClosureTimers

int g_realTimeSeconds

// ============================================================================
public function getRealTimeSeconds() returns int
  return g_realTimeSeconds

// ============================================================================
public function getRealTimeMinutes() returns real
  return getRealTimeSeconds() / 60.0

// ============================================================================
public function getRealTimeHours() returns real
  return getRealTimeMinutes() / 60.0

// ============================================================================
public function getRealTimeString() returns string
  let hours = R2I(getRealTimeHours())
  let hoursStr = hours < 10 ? "0" + hours.toString() : hours.toString()
  let minutes = R2I(getRealTimeMinutes() - R2I(R2I(getRealTimeHours()) * 60.0))
  let minutesStr = minutes < 10 ? "0" + minutes.toString() : minutes.toString()
  let seconds = R2I(getRealTimeSeconds().toReal() - R2I(R2I(getRealTimeMinutes()) * 60.0))
  let secondsStr = seconds < 10 ? "0" + seconds.toString() : seconds.toString()
  return "{0}:{1}:{2}".format(hoursStr, minutesStr, secondsStr)

// ============================================================================
init
  doPeriodically(1.0) (CallbackPeriodic cb) ->
    g_realTimeSeconds++
  
// ============================================================================
@test function realTimeString()
  g_realTimeSeconds = 3
  getRealTimeString().assertEquals("00:00:03")

  g_realTimeSeconds = 63
  getRealTimeString().assertEquals("00:01:03")

  g_realTimeSeconds = 3603
  getRealTimeString().assertEquals("01:00:03")