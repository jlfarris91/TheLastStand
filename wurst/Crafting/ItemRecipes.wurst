package ItemRecipes
import Crafting
import TlsItemDefinition
import HashList
import LinkedList
import ObjectIdGenerator

import Item_Armor
import Item_RawMeat
import Item_StaminaPotion

public LinkedList<ItemRecipeBook> g_recipeBooks
public ItemRecipeBook g_forgeRecipeBook
public ItemRecipeBook g_cookingPotRecipeBook

// ============================================================================
class ItemRecipeObjectDefs
  
  // Forge
  protected static constant itemRecipeDefinition armor2     = itemRecipeDefinition(g_itemDef_armor2,      compiletime(UNIT_ID_GEN.next()), compiletime(ABIL_ID_GEN.next()))
  protected static constant itemRecipeDefinition armor3     = itemRecipeDefinition(g_itemDef_armor3,      compiletime(UNIT_ID_GEN.next()), compiletime(ABIL_ID_GEN.next()))
  protected static constant itemRecipeDefinition manaPot2   = itemRecipeDefinition(g_itemDef_manaPot2,    compiletime(UNIT_ID_GEN.next()), compiletime(ABIL_ID_GEN.next()))
  protected static constant itemRecipeDefinition manaPot3   = itemRecipeDefinition(g_itemDef_manaPot3,    compiletime(UNIT_ID_GEN.next()), compiletime(ABIL_ID_GEN.next()))
  
  // Camp fire
  protected static constant itemRecipeDefinition cookedMeat = itemRecipeDefinition(g_itemDef_cookedMeat,  compiletime(UNIT_ID_GEN.next()), compiletime(ABIL_ID_GEN.next()))

// ============================================================================
@compiletime function createRecipes()

  g_recipeBooks = new LinkedList<ItemRecipeBook>()

  g_forgeRecipeBook = new ItemRecipeBook()..setDefaultVerb("Forge")
  g_forgeRecipeBook.addRecipe(ItemRecipeObjectDefs.armor2)..addComponent(g_itemDef_armor1, 3)..setGoldCost(0)..setLumberCost(50)
  g_forgeRecipeBook.addRecipe(ItemRecipeObjectDefs.armor3)..addComponent(g_itemDef_armor2, 3)..setGoldCost(1)..setLumberCost(250)
  g_forgeRecipeBook.addRecipe(ItemRecipeObjectDefs.manaPot2)..addComponent(g_itemDef_manaPot1, 2)..setGoldCost(0)..setLumberCost(0)
  g_forgeRecipeBook.addRecipe(ItemRecipeObjectDefs.manaPot3)..addComponent(g_itemDef_manaPot2, 2)..setGoldCost(0)..setLumberCost(0)
  g_forgeRecipeBook.compile()
  g_recipeBooks.add(g_forgeRecipeBook)

  g_cookingPotRecipeBook = new ItemRecipeBook()..setDefaultVerb("Cook")
  g_cookingPotRecipeBook.addRecipe(ItemRecipeObjectDefs.cookedMeat).addComponent(g_itemDef_rawMeat, 1)
  g_cookingPotRecipeBook.compile()
  g_recipeBooks.add(g_cookingPotRecipeBook)

// ============================================================================
init
  if (g_forgeRecipeBook == null)
    createRecipes()

// ============================================================================
@test function validateRecipeIds()

  createRecipes()

  let allIds = new HashList<int>()

  for recipeBook in g_recipeBooks
    for recipe in recipeBook
      let hashCode = recipe.getHashCode()
      Log.info(recipe.getItemDefinition().getName() + ": " + hashCode.toString())
      allIds.has(hashCode).assertFalse()
      hashCode.assertEquals(recipe.getHashCode())
      allIds.add(hashCode)