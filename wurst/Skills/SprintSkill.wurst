package SprintSkill
import Skills
import UnitMetadata
import TlsAbilityIds
import Icons
import Composition
import SkillsComponent
import SprintComponent
import MovementComponent
import Events
import Type

// ============================================================================
public class SprintSkillDefinition extends SkillDefinition
  private real array[5] _staminaCosts
  private real array[5] _speeds

  // --------------------------------------------------------------------------
  function getStaminaCost(int level) returns real
    return _staminaCosts[level]

  // --------------------------------------------------------------------------
  function setStaminaCost(int level, real staminaCost)
    _staminaCosts[level] = staminaCost

  // --------------------------------------------------------------------------
  function getSpeed(int level) returns real
    return _speeds[level]

  // --------------------------------------------------------------------------
  function setSpeed(int level, real speed)
    _speeds[level] = speed

  // --------------------------------------------------------------------------
  override function createInstance(IUnitMetadata u) returns ISkill
    return new SprintSkill(this, u)

// ============================================================================
public class SprintSkill extends SkillBase
  private SprintComponent _sprintComponent
  private MovementComponent _movementComponent
  private Action1<SprintComponent> _startedSprintingHandler
  private Action1<SprintComponent> _stoppedSprintingHandler
  private Action2<MovementComponent, real> _onUnitMovedHandler

  // --------------------------------------------------------------------------
  construct(SprintSkillDefinition skill, IUnitMetadata u)
    super(skill, u)

    _sprintComponent = u.getOrAddSprintComponent()
    _movementComponent = u.getOrAddMovementComponent()

  // --------------------------------------------------------------------------
  override function onEnabled()
    super.onEnabled()

    listenToStartedSprintingEvent()
    listenToStoppedSprintingEvent()

    updateSprintComponent()

  // --------------------------------------------------------------------------
  override function onDisabled()
    super.onDisabled()

    unlistenToStartedSprintingEvent()
    unlistenToStoppedSprintingEvent()
    unlistenToUnitMovedEvent()

  // --------------------------------------------------------------------------
  override function onLevelUp()
    super.onLevelUp()
    let u = _unit.getUnit()
    u.setAbilityLevel(TlsAbilityIds.sprintSkill, _level)
    u.setAbilityLevel(TlsAbilityIds.sprint, _level)
    updateSprintComponent()

  // --------------------------------------------------------------------------
  override function onReset()
    super.onReset()
    let u = _unit.getUnit()
    u.setAbilityLevel(TlsAbilityIds.sprintSkill, 1)
    u.setAbilityLevel(TlsAbilityIds.sprint, 1)
    updateSprintComponent()

  // --------------------------------------------------------------------------
  private function onStartedSprinting()
    listenToUnitMovedEvent()

  // --------------------------------------------------------------------------
  private function onStoppedSprinting()
    unlistenToUnitMovedEvent()

  // --------------------------------------------------------------------------
  private function onUnitMoved(real distanceInMeters)
    incrementExperience(distanceInMeters)

  // --------------------------------------------------------------------------
  private function updateSprintComponent()
    let sprintSkill = _skill castTo SprintSkillDefinition
    _sprintComponent.setSprintSpeed(sprintSkill.getSpeed(_level))
    _sprintComponent.setStaminaCost(sprintSkill.getStaminaCost(_level))

  // --------------------------------------------------------------------------
  private function listenToUnitMovedEvent()
    unlistenToUnitMovedEvent()
    _onUnitMovedHandler = _movementComponent.getUnitMovedEvent().add() (MovementComponent sender, real distanceInMeters) ->
      onUnitMoved(distanceInMeters)

  // --------------------------------------------------------------------------
  private function unlistenToUnitMovedEvent()
    if (_onUnitMovedHandler != null)
      _movementComponent.getUnitMovedEvent().remove(_onUnitMovedHandler)
      destroy _onUnitMovedHandler
      _onUnitMovedHandler = null

  // --------------------------------------------------------------------------
  private function listenToStartedSprintingEvent()
    unlistenToStartedSprintingEvent()
    _startedSprintingHandler = _sprintComponent.startedSprintingEvent.add((SprintComponent sender) -> onStartedSprinting())

  // --------------------------------------------------------------------------
  private function unlistenToStartedSprintingEvent()
    if (_startedSprintingHandler != null)
      _sprintComponent.startedSprintingEvent.remove(_startedSprintingHandler)
      destroy _startedSprintingHandler
      _startedSprintingHandler = null

  // --------------------------------------------------------------------------
  private function listenToStoppedSprintingEvent()
    unlistenToStoppedSprintingEvent()
    _stoppedSprintingHandler = _sprintComponent.stoppedSprintingEvent.add((SprintComponent sender) -> onStoppedSprinting())

  // --------------------------------------------------------------------------
  private function unlistenToStoppedSprintingEvent()
    if (_stoppedSprintingHandler != null)
      _sprintComponent.stoppedSprintingEvent.remove(_stoppedSprintingHandler)
      destroy _stoppedSprintingHandler
      _stoppedSprintingHandler = null

// ============================================================================
public function SkillsComponent.getOrAddSprintSkill() returns SprintSkill
  var sprintSkill = this.getSkill(Type(SprintSkill.typeId)) castTo SprintSkill
  if (sprintSkill == null)
    sprintSkill = this.addSkill(Skills.sprint.createInstance(this.getOwner() castTo IUnitMetadata)) castTo SprintSkill
  return sprintSkill

// ============================================================================
init

  let sprint = new SprintSkillDefinition()
  ..setName("Sprint")
  ..setIconPath(Icons.bTNBootsOfSpeed)
  ..setUnits("meters")
  ..setMaxLevel(4)
  ..setLevelRequirement(1, 0)
  ..setLevelRequirement(2, 500.0)
  ..setLevelRequirement(3, 1500.0)
  ..setLevelRequirement(4, 3000.0)
  ..setStaminaCost(1, 2.4)
  ..setStaminaCost(2, 1.8)
  ..setStaminaCost(3, 1.2)
  ..setStaminaCost(4, 0.6)
  ..setSpeed(1, 100.0)
  ..setSpeed(2, 100.0)
  ..setSpeed(3, 100.0)
  ..setSpeed(4, 100.0)

  Skills.sprint = sprint