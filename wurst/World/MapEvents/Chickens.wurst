package Chickens
import MapEvents
import GroupUtils
import HumanPlayers
import GameConstants
import Math
import Jobs
import Range
import HashList
import UnitExtensions
import CancellationToken
import Time
import RegisterEvents
import ItemType
import TlsItemIds
import TlsUnitDefinition

MapEvent g_chickensMapEvent

constant string CHICKENS_MAP_EVENT_ID = "world_chickens"

// ============================================================================
public class ChickensMapEvent extends MapEvent
  private group m_spawnedUnits = getGroup()
  private MapEventTemplate m_mapEventTemplate
  private MapEventInstance m_mapEventInstance
  private CancellationToken m_ct

  // --------------------------------------------------------------------------
  construct()
    super(CHICKENS_MAP_EVENT_ID)
    m_mapEventTemplate = MapEventTemplate.getTemplate(CHICKENS_MAP_EVENT_ID)
    m_ct = new CancellationToken()..acquire()

  // --------------------------------------------------------------------------
  ondestroy
    m_spawnedUnits.release()
    m_spawnedUnits = null

    if (m_ct != null)
      m_ct.cancelAndRelease()
      m_ct = null

  // --------------------------------------------------------------------------
  override protected function onStarted()

    m_ct = new CancellationToken()..acquire()

    m_mapEventInstance = m_mapEventTemplate.createInstance()

    let playerCountT = parameterize01(1, MAX_PLAYER_COUNT, g_PlayingHumanPlayerCount)
    let chickenSpawnCount = CHICKEN_SPAWN_COUNT_RANGE.lerp(playerCountT).floor()

    let unitSpawners = new HashList<UnitSpawner>()

    for i = 0 to m_mapEventTemplate.getUnitSpawnerCount() - 1
      let unitSpawner = m_mapEventTemplate.getUnitSpawner(i)
      unitSpawners.add(unitSpawner)
      
    let spawnJob = m_mapEventInstance.getUnitSpawnThread().repeat("SpawnChickens", m_ct, chickenSpawnCount) (integer i) ->
    //{
      let randomIndex = GetRandomInt(0, unitSpawners.size() - 1)
      let spawner = unitSpawners.get(randomIndex)
      m_mapEventInstance.spawnUnitNow(spawner, PLAYER_ENVIRONMENT)
      unitSpawners.removeAt(randomIndex)
    //}

    spawnJob.setCancellationToken(m_ct)
    spawnJob.onCompleted().register() (Job job) ->
      destroy unitSpawners

  // --------------------------------------------------------------------------
  override protected function onCompleted()
    super.onCompleted()

    if (m_ct != null)
      m_ct.cancelAndRelease()
      m_ct = null

    if (m_mapEventInstance != null)
      destroy m_mapEventInstance
      m_mapEventInstance = null

// ============================================================================
function createMapEventTemplate()

  let mapEventTemplate = MapEventTemplate.createMapEventTemplate(CHICKENS_MAP_EVENT_ID)

  let chickenSpawnerUnits = getGroup()
  chickenSpawnerUnits.enumUnitsOfType(TlsUnitIds.chickenSpawner, null)

  for chickenSpawnerUnit in chickenSpawnerUnits
    mapEventTemplate.registerUnitSpawner(TlsUnitIds.chicken, chickenSpawnerUnit.getPos().toVec3(), chickenSpawnerUnit.getFacingAngle())
      ..setUseRecycler(true)
      ..setFadeInDuration(UNIT_FADE_DURATION)
      ..setFadeOutToRandomPos(UNIT_FADE_DURATION)
    chickenSpawnerUnit.remove()

  chickenSpawnerUnits.release()

// ============================================================================
function onDayStart()

  if (g_chickensMapEvent != null)
    g_chickensMapEvent.start()

// ============================================================================
function onNightStart()
  
  if (g_chickensMapEvent != null)
    g_chickensMapEvent.complete()

// ============================================================================
function onUnitKilled()
  let dyingUnit = GetDyingUnit()
  if (dyingUnit.getTypeId() == TlsUnitIds.chicken)
    ItemType.createItem(TlsItemIds.chicken, dyingUnit.getPos())

// ============================================================================
@compiletime function createObjectDefinitions()
  new TlsUnitDefinition(TlsUnitIds.chicken, UnitIds.chicken)

// ============================================================================
init
  createObjectDefinitions()

  createMapEventTemplate()

  MapEvent.registerMapEventFactory(CHICKENS_MAP_EVENT_ID, () -> new ChickensMapEvent())
  g_chickensMapEvent = MapEvent.createMapEvent(CHICKENS_MAP_EVENT_ID)

  registerDayEvent(function onDayStart)
  registerNightEvent(function onNightStart)
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_DEATH, function onUnitKilled)