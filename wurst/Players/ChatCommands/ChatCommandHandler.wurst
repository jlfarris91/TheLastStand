package ChatCommandHandler
import IChatCommandHandler
import HashMap

// ============================================================================
public class ChatCommandHandler implements IChatCommandHandler
  private HashMap<string, trigger> m_commandTriggerMap

  // --------------------------------------------------------------------------
  construct()
    m_commandTriggerMap = new HashMap<string, trigger>()

  // --------------------------------------------------------------------------
  ondestroy
    destroy m_commandTriggerMap
    m_commandTriggerMap = null

  // --------------------------------------------------------------------------
  function addHandler(string command, trigger handler)
    m_commandTriggerMap.put(command, handler)

  // --------------------------------------------------------------------------
  function getHandler(string command) returns trigger
    return m_commandTriggerMap.get(command)
  
  // ============================================================================
  function registerHandlerAction(string command, code action)
    var handler = getHandler(command)
    if (handler == null)
      handler = CreateTrigger()
      addHandler(command, handler)
    handler.addCondition(Filter(action))

  // --------------------------------------------------------------------------
  override function handleChatCommand(player p, string command) returns bool

    let handler = getHandler(command)
    if (handler != null)
      handler.evaluate()
      return true      

    return false