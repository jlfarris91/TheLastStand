package HumanPlayers
import PlayerExtensions
import HashList

public force g_HumanPlayers
public force g_PlayingHumanPlayers
HashList<int> g_HumanPlayerSlotIds

// ============================================================================
public function updateHumanPlayersForce()
  g_PlayingHumanPlayers.clear()
  for p in g_HumanPlayers
    if (p.isPlaying())
      g_PlayingHumanPlayers.addPlayer(p)
      Log.debug("Player {0} {1} is playing".format(p.getId().toString(), p.getName()))

// ============================================================================
function initializeHumanPlayersForce()
  for id in g_HumanPlayerSlotIds
    let p = Player(id)
    if (p.isHumanPlayer() or p.isBotPlayer())
      g_HumanPlayers.addPlayer(p)

// ============================================================================
public function player.isHumanPlayer() returns bool
  return g_HumanPlayerSlotIds.has(this.getId())

// ============================================================================
public function player.isPlayingHumanPlayer() returns bool
  return this.isPlaying() and this.isHumanPlayer()

// ============================================================================
public function player.isBotPlayer() returns bool
  return this.isHumanPlayer() and this.isControlledByComputer()

// ============================================================================
init
  g_HumanPlayers = CreateForce()
  g_PlayingHumanPlayers = CreateForce()
  
  // This needs to match the human slots in the wurst.build file
  g_HumanPlayerSlotIds = new HashList<int>()
  ..add(0)
  ..add(1)
  ..add(2)
  ..add(3)
  ..add(4)
  ..add(5)
  ..add(6)
  ..add(9)

  initializeHumanPlayersForce()
  updateHumanPlayersForce()

  Log.debug("Number of human players: " + I2S(g_HumanPlayers.count()) + " playing: " + I2S(g_PlayingHumanPlayers.count()))