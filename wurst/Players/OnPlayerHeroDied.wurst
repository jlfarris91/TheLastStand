package OnPlayerHeroDied
import GameSettings
import DisplayTextToPlayer
import GameConstants
import Camp
import HumanPlayerMetadata
import UnitMetadata
import GroupUtils
import UnitExtensions
import Survivors
import HumanPlayers
import ClosureEvents

// ============================================================================
function disableFogOfWarForPlayer(player p)
  CreateFogModifierRectBJ(true, p, FOG_OF_WAR_VISIBLE, GetPlayableMapRect())

// ============================================================================
function onPlayerHeroDied(HumanPlayerMetadata playerMetadata)
  playerMetadata.setDisplayName("<Deceased>")

  let p = playerMetadata.getPlayer()

  if (GameSettings.allowRespawn)
    displayMessageToPlayer(p, "You will be respawned at the start of the next day")
  else
    disableFogOfWarForPlayer(p)

  giveAllUnitsToVillagersPlayer(p)

  playerMetadata.reset()
  playerMetadata.getCamp().reset()

// ============================================================================
function onPlayerUnitDied()
  let dyingUnit = GetDyingUnit()
  let owner = dyingUnit.getOwner()
  let playerMetadata = owner.getMetadata() castTo HumanPlayerMetadata

  if (playerMetadata == null)
    return

  let hero = playerMetadata.getHero()
  if (hero == null)
    return

  let heroUnit = hero.getUnit()
  if (heroUnit == null)
    return

  if (dyingUnit == heroUnit)
    onPlayerHeroDied(playerMetadata)

// ============================================================================
function onPlayerLeftGame()
  let leavingPlayer = GetTriggerPlayer()
  let metadata = leavingPlayer.getHumanMetadata()
  if (metadata == null)
    return

  g_PlayingHumanPlayers.remove(leavingPlayer)

  let hero = metadata.getHero()
  if (hero != null)
    let heroUnit = hero.getUnit()
    if (heroUnit != null)
      heroUnit.remove()

  let camp = metadata.getCamp()
  if (camp != null)
    let campTent = camp.getCampTent()
    if (campTent != null)
      campTent.kill()
  
  giveAllUnitsToVillagersPlayer(PLAYER_VILLAGERS)

// ============================================================================
function giveAllUnitsToVillagersPlayer(player p)
  let playerMetadata = p.getHumanMetadataRequired()
  let playerHero = playerMetadata.getHero()
  let playerHeroUnit = playerHero.getUnit()
  let tempGroup = getGroup()
  tempGroup.enumUnitsOfPlayer(p, null)
  for u from tempGroup
    if (u.isStructure())
      u.setOwner(PLAYER_VILLAGERS, true)
    else if (u != playerHeroUnit)
      banishSurvivor(u)
  tempGroup.release()

// ============================================================================
init
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_DEATH, function onPlayerUnitDied)
  EventListener.add(EVENT_PLAYER_LEAVE, () -> onPlayerLeftGame())