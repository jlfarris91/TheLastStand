package PlayerCommands
import ChatCommands
import Bases
import DisplayTextToPlayer

constant string COMMAND_BASES = "bases"
constant string COMMAND_CLEAR = "clear"

ChatCommandHandler g_playerChatCommandHandler

// ============================================================================
function showPlayerBasesCommand()

  let command = getChatCommand()
  let commandPlayer = getChatCommandPlayer()

  var difficultyStr = "all"
  BaseDifficulty difficulty = BaseDifficulty.ALL
  let difficultyArg = command.getArgument(0)
  if (difficultyArg != null)
    difficultyStr = difficultyArg.getString()
    if (difficultyStr == "easy")
      difficulty = BaseDifficulty.EASY
    if (difficultyStr == "medium")
      difficulty = BaseDifficulty.MEDIUM
    if (difficultyStr == "hard")
      difficulty = BaseDifficulty.HARD

  showPlayerBases(commandPlayer, difficulty, 30.0)
  displayMessageToPlayer(commandPlayer, "Showing {0} bases for 15 seconds".format(difficultyStr))

// ============================================================================
function clearText()
  let commandPlayer = getChatCommandPlayer()
  let playerForce = CreateForce()..addPlayer(commandPlayer)
  ClearTextMessagesBJ(playerForce)
  playerForce.destr()

// ============================================================================
init
  g_playerChatCommandHandler = new ChatCommandHandler("Player")

  g_playerChatCommandHandler.registerCommandDefinition(COMMAND_BASES, function showPlayerBasesCommand)
    ..setDescription("Shows the player available bases and their difficulties. Optionally add 'easy', 'medium' or 'hard' to filter the bases.")
    ..addArgument(new ChatCommandArgument("DIFFICULTY", ChatCommandArgumentType.STRING, true)
      ..setStringOptions("easy", "medium", "hard")
      ..setDescription("Only show 'easy', 'medium' or 'hard' bases."))

  g_playerChatCommandHandler.registerCommandDefinition(COMMAND_CLEAR, function clearText)
    ..setDescription("Clears the screen of all text.")

  registerChatCommandHandler(g_playerChatCommandHandler, 1)