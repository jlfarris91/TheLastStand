package PlayerMetadata
import HashMap
import HashList
import HumanPlayers

HashMap<player, PlayerMetadata> g_PlayerMetadata

class PlayerMetadata
  player p
  unit hero
  int kills
  bool isDeceased

  construct(player p)
    this.p = p
    this.reset()

  function reset() 
    this.kills = 0

/**
*   Gets the PlayerMetadata instance registered for player p or creates a new PlayerMetadata instance if
*   one has not been registered yet.
*/
@inline function getPlayerMetadata(player p) returns PlayerMetadata
  return g_PlayerMetadata.get(p)

public function player.getHeroUnit() returns unit
  return getPlayerMetadata(this).hero

public function player.setHeroUnit(unit u)
  getPlayerMetadata(this).hero = u

public function player.isHeroDead() returns bool
  return getPlayerMetadata(this).isDeceased

public function player.setIsDeceased(bool isDeceased)
  getPlayerMetadata(this).isDeceased = isDeceased

public function player.getMaterials() returns int
  return GetPlayerState(this, PLAYER_STATE_RESOURCE_GOLD)
  
public function player.setMaterials(int materials)
  SetPlayerState(this, PLAYER_STATE_RESOURCE_GOLD, materials)

public function player.addMaterials(int materials)
  this.setMaterials(this.getMaterials() + materials)

public function player.removeMaterials(int materials)
  this.setMaterials(IMaxBJ(this.getMaterials() - materials, 0))

/** Gets the player's current number of kills */
public function player.getKills() returns int
  return getPlayerMetadata(this).kills

public function player.incrementKills()
  getPlayerMetadata(this).kills++

public function player.resetPlayerMetadata()
  getPlayerMetadata(this).reset()

function createPlayerMetadata(player p)
  var data = new PlayerMetadata(p)
  g_PlayerMetadata.put(p, data)

function initializePlayerMetadata(player p)
  createPlayerMetadata(p)

init
  g_PlayerMetadata = new HashMap<player, PlayerMetadata>()

  for p in g_PlayingHumanPlayers
    initializePlayerMetadata(p)