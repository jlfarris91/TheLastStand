package MemoryTrackingMultiboard
import ClosureTimers
import TimerUtils
import Reflection
import LinkedList

import UnitMetadata
import InfectedComponent
import SurvivorComponent
import Zombie
import CampUnit
import SurvivorData

MemoryTrackingMultiboard g_memoryTrackingMultiboard
LinkedList<int> g_sortedTypeIds

// ============================================================================
public class MemoryTrackingMultiboard
  private constant int NUMBER_OF_COLUMNS = 2
  private constant int PAGE_SIZE = 20
  private constant int COLUMN_TITLE = 0
  private constant int COLUMN_VALUE = 1
  private constant string TITLE = "Memory Tracker"

  private multiboard m_multiboard
  private timer m_timer
  private int m_pageIndex
  private int m_pageCount

  // --------------------------------------------------------------------------
  construct()
    g_memoryTrackingMultiboard = this
    m_multiboard = CreateMultiboardBJ(NUMBER_OF_COLUMNS, 0, TITLE)
    hide()

  // --------------------------------------------------------------------------
  ondestroy
    hide()

    DestroyMultiboard(m_multiboard)
    m_multiboard = null

  // --------------------------------------------------------------------------
  function setTitle(string title)
    m_multiboard.setTitle(title)

  // --------------------------------------------------------------------------
  function isShowing() returns bool
    return m_multiboard.isDisplayed()

  // --------------------------------------------------------------------------
  function getPageIndex() returns int
    return m_pageIndex

  // --------------------------------------------------------------------------
  function setPageIndex(int index)
    m_pageIndex = min(index, getPageCount() - 1)

  // --------------------------------------------------------------------------
  function getPageCount() returns int
    return m_pageCount

  // --------------------------------------------------------------------------
  function getPageSize() returns int
    return min(getItemCount() - getPageOffset(), PAGE_SIZE)

  // --------------------------------------------------------------------------
  function getPageMaxSize() returns int
    return PAGE_SIZE

  // --------------------------------------------------------------------------
  function getPageOffset() returns int
    return m_pageIndex * PAGE_SIZE

  // --------------------------------------------------------------------------
  function getItemCount() returns int
    return g_sortedTypeIds.size()

  // --------------------------------------------------------------------------
  function show()
    m_multiboard.show()

    if (m_timer == null)
      m_timer = getTimer()
      m_timer.doPeriodically(0.1) (CallbackPeriodic cb) ->
        update()

  // --------------------------------------------------------------------------
  function hide()
    m_multiboard.hide()

    if (m_timer != null)
      m_timer.release()
      m_timer = null

  // --------------------------------------------------------------------------
  function update()

    var row = 0
    for i = 0 to getPageSize() - 1
      let index = getPageOffset() + i
      let typeid = g_sortedTypeIds.get(index)
      updateRow(row, typeid)
      row++

  // --------------------------------------------------------------------------
  function updateMultiboardRows()

    g_sortedTypeIds.sortWith() (integer o1, integer o2) ->
      return instanceCount(o2) - instanceCount(o1)

    if (g_sortedTypeIds.isEmpty())
      m_pageCount = 0
    else
      m_pageCount = (g_sortedTypeIds.size().toReal() / PAGE_SIZE.toReal()).ceil()

    // clamp to fit page size
    setPageIndex(getPageIndex())

    m_multiboard.setTitle(TITLE + " " + (getPageIndex() + 1).toString() + "/" + getPageCount().toString())

    m_multiboard.setRowCount(getPageSize())
    m_multiboard.setColumnWidth(COLUMN_TITLE, 0.3)
    m_multiboard.setColumnWidth(COLUMN_VALUE, 0.1)

    MultiboardSetItemStyleBJ(m_multiboard, COLUMN_TITLE + 1, 0, true, false)
    MultiboardSetItemStyleBJ(m_multiboard, COLUMN_VALUE + 1, 0, true, false)

    update()

  // --------------------------------------------------------------------------
  private function updateRow(int row, int typeid)
    m_multiboard.setItemValue(row, COLUMN_TITLE, typeIdToTypeName(typeid))
    m_multiboard.setItemValue(row, COLUMN_VALUE, instanceCount(typeid).toString() + "/" + maxInstanceCount(typeid).toString())

// ============================================================================
init
  g_sortedTypeIds = new LinkedList<int>()
  
  g_sortedTypeIds.add(UnitMetadata.typeId)
  g_sortedTypeIds.add(InfectedComponent.typeId)
  g_sortedTypeIds.add(SurvivorComponent.typeId)
  g_sortedTypeIds.add(Zombie.typeId)
  g_sortedTypeIds.add(CampUnit.typeId)
  g_sortedTypeIds.add(SurvivorData.typeId)