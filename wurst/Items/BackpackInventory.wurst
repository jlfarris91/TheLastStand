package BackpackInventory
import Math
import HashMap

public constant int BACKPACK_MAX_CAPACITY = 6

HashMap<item, BackpackInventory> g_itemInventoryMap

// ============================================================================
public class BackpackInventory
  private item array[BACKPACK_MAX_CAPACITY] m_storedItems
  private int m_capacity
  private int m_count

  // --------------------------------------------------------------------------
  construct()
    m_capacity = 1
    m_count = 0

  // --------------------------------------------------------------------------
  function setCapacity(int capacity)
    m_capacity = clamp(capacity, 1, BACKPACK_MAX_CAPACITY)

  // --------------------------------------------------------------------------
  function getCapacity() returns int
    return m_capacity

  // --------------------------------------------------------------------------
  function getCount() returns int
    return m_count

  // --------------------------------------------------------------------------
  function removeItemFromSlot(int slot) returns item
    let itm = m_storedItems[slot]
    m_storedItems[slot] = null
    m_count--
    return itm

// ============================================================================
public function getOrCreateBackpackInventory(item backpack) returns BackpackInventory
  if (g_itemInventoryMap.has(backpack))
    return g_itemInventoryMap.get(backpack)

  let inventory = new BackpackInventory()
  ..setCapacity(6)

  g_itemInventoryMap.put(backpack, inventory)
  return inventory  

// ============================================================================
init
  g_itemInventoryMap = new HashMap<item, BackpackInventory>()