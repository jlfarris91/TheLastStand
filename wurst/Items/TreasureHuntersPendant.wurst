package TreasureHuntersPendant
import UnitMetadata
import ItemEffectComponent
import TlsItemDefinition
import Icons
import UnitPropertiesComponent
import Handle

// ============================================================================
class TreasureHuntersPendantComponent extends ItemEffectComponent
  private _handle m_affector

  // --------------------------------------------------------------------------
  construct (IUnitMetadata owner)
    super(owner)

    setMode(ItemEffectApplication.ACQUIRED)
    setItemTypeId(TlsItemIds.treasureHuntersPendant)
    setDestroyOnDrop(true)
  
  // --------------------------------------------------------------------------
  override function onApplied(int stacks)
    super.onApplied(stacks)

    let itemFindQualityProp = getOwnerUnit().getProperty(UnitProperty.LOOT_ITEM_FIND_QUALITY)
    if (itemFindQualityProp != null)

      if (m_affector != INVALID_HANDLE)
        itemFindQualityProp.removeAffector(m_affector)
        m_affector = INVALID_HANDLE

      m_affector = itemFindQualityProp.affectAdd(0.2)

  // --------------------------------------------------------------------------
  override function onReverted(int stacks)
    super.onReverted(stacks)

    if (m_affector != INVALID_HANDLE)
      let itemFindQualityProp = getOwnerUnit().getProperty(UnitProperty.LOOT_ITEM_FIND_QUALITY)
      if (itemFindQualityProp != null)
        itemFindQualityProp.removeAffector(m_affector)
      m_affector = INVALID_HANDLE

// ============================================================================
@compiletime function createItem()

  new TlsItemDefinition(TlsItemIds.treasureHuntersPendant, 'gmfr')
  ..setName("Treasure Hunter's Pendant")
  ..setDescription("Increases the chances to find higher quality items when looting.")
  ..setTooltipBasic("Purchase Treasure Hunter's Pendant")
  ..setTooltipExtended("Increases the wearer's chances to find higher quality items when looting. Does not stack.")
  ..setInterfaceIcon(Icons.bTNGem)
  ..setGoldCost(2)
  ..setLumberCost(1200)
  ..setStockInitial(0)
  ..setStockMaximum(1)
  ..setStockStartDelay(60)
  ..setStockReplenishInterval(120)
  ..addTlsUnitClassifications(TlsUnitClassification.HUMAN)
  ..build()

// ============================================================================
init
  if (not compiletime)
    createItem()

  ItemEffectComponent.registerComponentFactory(TlsItemIds.treasureHuntersPendant) (_unit) ->
  //{
    let metadata = _unit.getMetadata()
    ItemEffectComponent comp = null
    if (metadata != null)
      comp = metadata.getComponent(TreasureHuntersPendantComponent.typeId) castTo TreasureHuntersPendantComponent
      if (comp == null)
        comp = metadata.addComponent(new TreasureHuntersPendantComponent(metadata)) castTo TreasureHuntersPendantComponent
    return comp
  //}