package LightningRod
import ItemEffectComponent
import UnitMetadata
import TlsItemIds
import DamageEvent
import GameConstants
import Math
import Damage
import DummyCaster
import TlsAbilityIds
import Orders
import ExperienceComponent
import ClosureTimers

// ============================================================================
class LightningRodComponent extends ItemEffectComponent

  // --------------------------------------------------------------------------
  construct (IUnitMetadata owner)
    super(owner)

    setMode(ItemEffectApplication.ACQUIRED)
    setItemTypeId(TlsItemIds.lightningRod)
    setDestroyOnDrop(true)

  // --------------------------------------------------------------------------
  function onDamageDealt()
    let damageTarget = DamageEvent.getTarget()
    if (damageTarget.getOwner() != PLAYER_UNDEAD)
      return

    let chanceToCastChainLightning = 0.1 + getStacks() * 0.05
    if (not passesChanceCheck01(chanceToCastChainLightning))
      return
    
    let ownerUnit = getOwnerUnit()

    let caster = new DummyCaster()
      ..origin(damageTarget.getPos())
      ..delay(10.0)
      ..owner(ownerUnit.getOwner())

    let casterUnit = caster.castTarget(
          TlsAbilityIds.Items.lightningRodChainLighting,
          getStacks(),
          OrderIds.chainlightning,
          damageTarget)

    if (casterUnit == null)
      Log.debug("Failed to cast Lightning Rod chain lightning")
      return

    // Give xp gained to the unit carrying the lightning rod
    casterUnit.setXpTarget(ownerUnit)
    doAfter(10.0) ->
      casterUnit.clearXpTarget()

// ============================================================================
function IUnitMetadata.getLightningRodComponent() returns LightningRodComponent
  return this.getComponent(LightningRodComponent.typeId) castTo LightningRodComponent

// ============================================================================
function IUnitMetadata.getOrAddLightningRodComponent() returns LightningRodComponent
  var component = this.getLightningRodComponent()
  if (component == null)
    component = this.addComponent(new LightningRodComponent(this)) castTo LightningRodComponent
  return component

// ============================================================================
function onUnitDamageDealt()
  let source = DamageEvent.getSource()

  let metadata = source.getMetadata()
  if (metadata == null)
    return

  let comp = metadata.getLightningRodComponent()
  if (comp == null)
    return

  comp.onDamageDealt()

// ============================================================================
init
  ItemEffectComponent.registerComponentFactory(TlsItemIds.lightningRod) (_unit) -> 
  //{
    let metadata = _unit.getMetadata()
    ItemEffectComponent comp = null
    if (metadata != null)
      comp = metadata.getOrAddLightningRodComponent()
    return comp
  //}

  DamageEvent.addListener(DAMAGE_EVENT_PRIO_FINAL, () -> onUnitDamageDealt())