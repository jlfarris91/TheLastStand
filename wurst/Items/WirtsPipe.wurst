package WirtsPipe
import TlsItemIds
import UnitMetadata
import UnitPropertiesComponent
import ItemEffectComponent

constant real CRIT_CHANCE = 10.0

// ============================================================================
public class WirtsPipeItemEffectComponent extends ItemEffectComponent

  // --------------------------------------------------------------------------
  construct (IUnitMetadata owner)
    super(owner)

    setMode(ItemEffectApplication.ACQUIRED)
    setItemTypeId(TlsItemIds.wirtsPipe)
    setDestroyOnDrop(true)

  // --------------------------------------------------------------------------
  protected override function onApplied(int stacks)
    super.onApplied(stacks)

    if (stacks == 0)
      return

    let comp = getOwner().getOrAddUnitPropertiesComponent()
    comp.setCritChancePercentage(comp.getCritChancePercentage() + stacks * CRIT_CHANCE)

  // --------------------------------------------------------------------------
  protected override function onReverted(int stacks)
    super.onReverted(stacks)

    if (stacks == 0)
      return

    let comp = getOwner().getOrAddUnitPropertiesComponent()
    comp.setCritChancePercentage(comp.getCritChancePercentage() - stacks * CRIT_CHANCE)

// ============================================================================
function IUnitMetadata.getWirtsPipeItemEffectComponent() returns WirtsPipeItemEffectComponent
  return this.getComponent(WirtsPipeItemEffectComponent.typeId) castTo WirtsPipeItemEffectComponent

// ============================================================================
function IUnitMetadata.getOrAddWirtsPipeItemEffectComponent() returns WirtsPipeItemEffectComponent
  var component = this.getWirtsPipeItemEffectComponent()
  if (component == null)
    component = this.addComponent(new WirtsPipeItemEffectComponent(this)) castTo WirtsPipeItemEffectComponent
  return component

// ============================================================================
init
  g_itemIdToComponentFactoryMap.put(TlsItemIds.wirtsPipe) _unit ->
  //{
    let metadata = _unit.getMetadata()
    ItemEffectComponent comp = null
    if (metadata != null)
      comp = metadata.getOrAddWirtsPipeItemEffectComponent()
    return comp
  //}