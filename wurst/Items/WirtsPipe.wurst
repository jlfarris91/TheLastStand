package WirtsPipe
import UnitMetadata
import UnitPropertiesComponent
import ItemEffectComponent
import ItemAcquiredPropertyAffectComponent
import SmartValue
import StringBuilder
import TlsItemDefinition
import ColorUtility
import Icons

constant real CRIT_CHANCE = 0.1

// ============================================================================
class WirtsPipeItemEffectComponent extends ItemAcquiredPropertyAffectComponent

  // --------------------------------------------------------------------------
  construct (IUnitMetadata owner)
    super(owner, TlsItemIds.wirtsPipe, UnitProperty.CRIT_CHANCE_01, AffectorType.BASE)
  
  // --------------------------------------------------------------------------
  override function getUnitPropertyAffectorValue(int stacks) returns real
    return stacks * CRIT_CHANCE

// ============================================================================
@compiletime function createItem()

  let sb = new StringBuilder()
  sb.appendLine("Increases critical strike chance by 10% per stack.")
  sb.appendLine()
  sb.append("Each additional stack increases critical strike chance by 10%.".colorize(Colors.gold))
  let tooltipExtended = sb.toStringAndDestroy()

  new TlsItemDefinition(TlsItemIds.wirtsPipe, 'wtlg')
  ..setName("Wirt's Pipe")
  ..setDescription("A pipe crafted with masterful ability from thousand year old Elven oak and intricately woven threads of gold. A puff from this pipe can focus even the most scrambled of minds.")
  ..setTooltipBasic("Purchase Wirt's Pipe")
  ..setTooltipExtended(tooltipExtended)
  ..setAbilities("")
  ..setInterfaceIcon(Icons.bTNPipeOfInsight)
  ..setGoldCost(0)
  ..setLumberCost(350)
  ..setStockMaximum(3)
  ..setNumberofCharges(1)
  ..addTlsUnitClassifications(TlsUnitClassification.HUMAN)
  ..build()

// ============================================================================
init
  if (not compiletime)
    createItem()

  ItemEffectComponent.registerComponentFactory(TlsItemIds.wirtsPipe) _unit ->
  //{
    let metadata = _unit.getMetadata()
    ItemEffectComponent comp = null
    if (metadata != null)
      comp = metadata.getComponent(WirtsPipeItemEffectComponent.typeId) castTo WirtsPipeItemEffectComponent
      if (comp == null)
        comp = metadata.addComponent(new WirtsPipeItemEffectComponent(metadata)) castTo WirtsPipeItemEffectComponent
    return comp
  //}