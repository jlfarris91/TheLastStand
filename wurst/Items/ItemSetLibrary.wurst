package ItemSetLibrary
import WeightedItemSetSet
import ItemSet
import ItemType
import WeightedSet

// ============================================================================
public class ItemSetLibrary
  protected WeightedItemSetSet itemSets

  // --------------------------------------------------------------------------
  construct()
    this.itemSets = new WeightedItemSetSet()

  // --------------------------------------------------------------------------
  ondestroy
    destroy this.itemSets

  // --------------------------------------------------------------------------
  function add(ItemSet itemSet, real weight)
    this.itemSets.add(itemSet, weight)
  
  // --------------------------------------------------------------------------
  function remove(ItemSet itemSet)
    this.itemSets.remove(itemSet)

  // --------------------------------------------------------------------------
  function getRandomItemSet() returns ItemSet
    return this.itemSets.getRandom()

  // --------------------------------------------------------------------------
  function getRandomItemType() returns ItemType
    let itemSet = this.getRandomItemSet()
    return itemSet.getRandomItemType()

  // --------------------------------------------------------------------------
  function createRandomItem(vec2 pos) returns item
    let itemSet = this.getRandomItemSet()
    return itemSet.createRandomItem(pos)

  // --------------------------------------------------------------------------
  function getItemTypeChance(int id) returns real
    for itemSet in this.itemSets
      if (itemSet.has(id))
        return itemSet.getChance(id)
    return 0.0

  // --------------------------------------------------------------------------
  function getOverallItemTypeChance(int id) returns real
    for itemSet in this.itemSets
      if (itemSet.has(id))
        return itemSet.getChance(id) * this.itemSets.getChance(itemSet)
    return 0.0

  // --------------------------------------------------------------------------
  function iterator() returns WeightedSetIterator<ItemSet>
    return this.itemSets.iterator()
