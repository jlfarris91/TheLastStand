package OperationsManual
import ItemEffectComponent
import UnitComponent
import TlsItemDefinition
import Icons
import ItemAcquiredPropertyAffectComponent
import UnitPropertiesComponent
import SmartValue

// ============================================================================
class OperationsManual1Component extends ItemAcquiredPropertyAffectComponent

  // --------------------------------------------------------------------------
  construct (IUnitMetadata owner)
    super(owner, TlsItemIds.operationsManual1, UnitProperty.OPERATOR_LEVEL, AffectorType.ABSOLUTE)
  
  // --------------------------------------------------------------------------
  override function getUnitPropertyAffectorValue(int stacks) returns real
    return stacks * 1.0

// ============================================================================
class OperationsManual2Component extends ItemAcquiredPropertyAffectComponent

  // --------------------------------------------------------------------------
  construct (IUnitMetadata owner)
    super(owner, TlsItemIds.operationsManual2, UnitProperty.OPERATOR_LEVEL, AffectorType.ABSOLUTE)
  
  // --------------------------------------------------------------------------
  override function getUnitPropertyAffectorValue(int stacks) returns real
    return stacks * 2.0

// ============================================================================
class OperationsManual3Component extends ItemAcquiredPropertyAffectComponent

  // --------------------------------------------------------------------------
  construct (IUnitMetadata owner)
    super(owner, TlsItemIds.operationsManual3, UnitProperty.OPERATOR_LEVEL, AffectorType.ABSOLUTE)
  
  // --------------------------------------------------------------------------
  override function getUnitPropertyAffectorValue(int stacks) returns real
    return stacks * 3.0

// ============================================================================
@compiletime function createCompileObjects()

  new TlsItemDefinition(TlsItemIds.operationsManual1, 'mcou')
  ..setName("Basic Operations Manual")
  ..setDescription("A manual for the basic operation of machinery.")
  ..setTooltipBasic("Purchase Basic Operations Manual")
  ..setTooltipExtended("Increases the operator level of the carrier by 1.")
  ..setAbilities("")
  ..setInterfaceIcon(Icons.bTNTome)
  ..setGoldCost(1)
  ..setLumberCost(300)
  ..setNumberofCharges(1)
  ..addTlsUnitClassifications(TlsUnitClassification.HUMAN)
  ..build()

  new TlsItemDefinition(TlsItemIds.operationsManual2, 'mcou')
  ..setName("Intermediate Operations Manual")
  ..setDescription("A manual containing the knowledge of operating machinery at an intermediate level.")
  ..setTooltipBasic("Purchase Intermediate Operations Manual")
  ..setTooltipExtended("Increases the operator level of the carrier by 2.")
  ..setAbilities("")
  ..setInterfaceIcon(Icons.bTNTome)
  ..setGoldCost(1)
  ..setLumberCost(600)
  ..setNumberofCharges(1)
  ..addTlsUnitClassifications(TlsUnitClassification.HUMAN)
  ..build()  

  new TlsItemDefinition(TlsItemIds.operationsManual3, 'mcou')
  ..setName("Advanced Operations Manual")
  ..setDescription("A manual containing the knowledge of operating machinery at an advanced level.")
  ..setTooltipBasic("Purchase Advanced Operations Manual")
  ..setTooltipExtended("Increases the operator level of the carrier by 3.")
  ..setAbilities("")
  ..setInterfaceIcon(Icons.bTNTome)
  ..setGoldCost(1)
  ..setLumberCost(900)
  ..setNumberofCharges(1)
  ..addTlsUnitClassifications(TlsUnitClassification.HUMAN)
  ..build()

// ============================================================================
init

  ItemEffectComponent.registerComponentFactory(TlsItemIds.operationsManual1) (unit _unit) ->
    let metadata = _unit.getMetadata()
    ItemEffectComponent comp = null
    if (metadata != null)
      comp = metadata.getComponent(OperationsManual1Component.typeId) castTo OperationsManual1Component
      if (comp == null)
        comp = metadata.addComponent(new OperationsManual1Component(metadata)) castTo OperationsManual1Component
    return comp

  ItemEffectComponent.registerComponentFactory(TlsItemIds.operationsManual2) (unit _unit) ->
    let metadata = _unit.getMetadata()
    ItemEffectComponent comp = null
    if (metadata != null)
      comp = metadata.getComponent(OperationsManual2Component.typeId) castTo OperationsManual2Component
      if (comp == null)
        comp = metadata.addComponent(new OperationsManual2Component(metadata)) castTo OperationsManual2Component
    return comp

  ItemEffectComponent.registerComponentFactory(TlsItemIds.operationsManual3) (unit _unit) ->
    let metadata = _unit.getMetadata()
    ItemEffectComponent comp = null
    if (metadata != null)
      comp = metadata.getComponent(OperationsManual3Component.typeId) castTo OperationsManual3Component
      if (comp == null)
        comp = metadata.addComponent(new OperationsManual3Component(metadata)) castTo OperationsManual3Component
    return comp