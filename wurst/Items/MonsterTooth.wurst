package MonsterTooth
import UnitMetadata
import UnitPropertiesComponent
import ItemEffectComponent
import ItemAcquiredPropertyAffectComponent
import SmartValue
import TlsItemDefinition
import Icons
import RealExtensions

constant real LIFESTEAL_AMOUNT = 0.1

// ============================================================================
class MonsterToothComponent extends ItemAcquiredPropertyAffectComponent

  // --------------------------------------------------------------------------
  construct (IUnitMetadata owner)
    super(owner, TlsItemIds.monsterTooth, UnitProperty.LIFE_STEAL_PERC, AffectorType.ABSOLUTE)
  
  // --------------------------------------------------------------------------
  override function getUnitPropertyAffectorValue(int stacks) returns real
    return stacks * LIFESTEAL_AMOUNT

// ============================================================================
@compiletime function createItem()

  new TlsItemDefinition(TlsItemIds.monsterTooth, 'kybl')
  ..setName("Monster Tooth")
  ..setDescription("It's huge and stained with blood.")
  ..setTooltipBasic("Purchase Monster Tooth")
  ..setTooltipExtended("The holder of this item recovers hit points equal to {0} of attack damage dealt per stack.".format(LIFESTEAL_AMOUNT.toPercentageString01()))
  ..setAbilities("")
  ..setInterfaceIcon(Icons.bTNVampiricAura)
  ..setGoldCost(6)
  ..setNumberofCharges(1)
  ..addTlsUnitClassifications(TlsUnitClassification.HUMAN)
  ..build()

// ============================================================================
init
  if (not compiletime)
    createItem()

  ItemEffectComponent.registerComponentFactory(TlsItemIds.monsterTooth) _unit ->
  //{
    let metadata = _unit.getMetadata()
    ItemEffectComponent comp = null
    if (metadata != null)
      comp = metadata.getComponent(MonsterToothComponent.typeId) castTo MonsterToothComponent
      if (comp == null)
        comp = metadata.addComponent(new MonsterToothComponent(metadata)) castTo MonsterToothComponent
    return comp
  //}