package HeroHeart
import TlsItemIds
import HashMap
import ItemEvents
import TlsUnitIds
import ClosureTimers
import DisplayTextToPlayer
import ItemType
import HumanPlayerComponent

HashMap<player, item> g_playerToHeart = new HashMap<player, item>()
HashMap<item, player> g_heartToPlayer = new HashMap<item, player>()

// ============================================================================
public function createHeartItemForHero(unit hero) returns item

  let heroOwner = hero.getOwner()

  var heartItem = getHeartItem(heroOwner)
  if (heartItem == null)
    heartItem = ItemType.createItem(TlsItemIds.heart, hero.getPos())
    if (heartItem == null)
      Log.debug("Could not create heart item for hero")
      return null

  heartItem.setPos(hero.getPos())
  heartItem.setUserData(hero.getHandleId())

  g_playerToHeart.put(heroOwner, heartItem)
  g_heartToPlayer.put(heartItem, heroOwner)

  return heartItem

// ============================================================================
public function getHeartItem(player _player) returns item
  return g_playerToHeart.get(_player)

// ============================================================================
public function getHeartOwner(item heartItem) returns player
  return g_heartToPlayer.get(heartItem)

// ============================================================================
public function getHeartHero(item heartItem) returns unit
  let owner = g_heartToPlayer.get(heartItem)
  let comp = owner.getHumanPlayerComponent()
  if (comp == null)
    return null
  return comp.getHero()

// ============================================================================
public function destroyHeroHeartItem(item heartItem)
  let heartOwner = getHeartOwner(heartItem)
  g_playerToHeart.remove(heartOwner)
  g_heartToPlayer.remove(heartItem)
  heartItem.remove()

// ============================================================================
function onHeartAcquired(unit manipulatingUnit, item manipulatedItem)
  let heartOwner = getHeartOwner(manipulatedItem)
  let manOwner = manipulatingUnit.getOwner()
  let manipulatingUnitIsAltar = manipulatingUnit.getTypeId() == TlsUnitIds.altar

  if (not manipulatingUnitIsAltar or not manOwner.isAllyOf(heartOwner))
    displayMessageToPlayer(manOwner, "Only friendly units can pick up a hero's heart")
    nullTimer(() -> manipulatingUnit.dropItemPoint(manipulatedItem, manipulatingUnit.getPos()))
    return

// ============================================================================
init
  registerItemAcquiredEvent(TlsItemIds.heart, (u, i) -> onHeartAcquired(u, i))