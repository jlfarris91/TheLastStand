package StateMachine
import UnitMetadata

// ============================================================================
public interface IStateMachine
  function transitionToState(string stateName)
  function getState(string stateName) returns IStateMachineState
  function addState(IStateMachineState state)
  function getUnit() returns IUnitMetadata

// ============================================================================
public interface IStateMachineState
  function getName() returns string
  function getMachine() returns IStateMachine
  function enter()
  function update(real dt)
  function exit()

// ============================================================================
public abstract class BaseStateMachineState implements IStateMachineState
  protected IStateMachine _machine

  // --------------------------------------------------------------------------
  construct(IStateMachine machine)
    _machine = machine

  // --------------------------------------------------------------------------
  override function getMachine() returns IStateMachine
    return _machine

  // --------------------------------------------------------------------------
  override function enter()
    skip

  // --------------------------------------------------------------------------
  override function update(real dt)
    skip

  // --------------------------------------------------------------------------
  override function exit()
    skip