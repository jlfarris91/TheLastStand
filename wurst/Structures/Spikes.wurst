package Spikes
import Camp
import FX
import ClosureTimers
import Events

// ============================================================================
public class Spikes extends CampUnit
  private Action m_unitConstructedEventHandler

  // --------------------------------------------------------------------------
  construct(ICamp camp)
    super(camp)
    listenToUnitDamagedEvent()
    listenToUnitConstructedEvent()

  // --------------------------------------------------------------------------
  ondestroy
    unlistenToUnitConstructedEvent()

  // --------------------------------------------------------------------------
  protected override function onDamaged()
    super.onDamaged()

    let spikesUnit = getUnit()
    let damagedUnit = GetTriggerUnit()

    spikesUnit.subHP(GetEventDamage())

    let spikesPos = spikesUnit.getPos()
    let damagedPos = damagedUnit.getPos()
    
    let fxPos = ((spikesPos + damagedPos) / 2.0)

    let fx = FX.createEffect("Abilities\\Weapons\\Rifle\\RifleImpact.mdl", fxPos)
    fx.setAlpha(255)
    fx.setColor(255, 255, 255)
    fx.setScale(0.8)
    doAfter(2) ->
      DestroyEffect(fx)

  // --------------------------------------------------------------------------
  private function onConstructed()
    //getUnit().addAbility(AbilityIds.invulnerable)

  // --------------------------------------------------------------------------
  private function listenToUnitConstructedEvent()
    unlistenToUnitConstructedEvent()
    if (m_unitConstructedEventHandler == null)
      m_unitConstructedEventHandler = PlayerUnitEvents.unitConstructed.add() -> 
        if (GetConstructedStructure() == getUnit())
          onConstructed()

  // --------------------------------------------------------------------------
  private function unlistenToUnitConstructedEvent()
    if (m_unitConstructedEventHandler != null)
      PlayerUnitEvents.unitConstructed.remove(m_unitConstructedEventHandler)
      destroy m_unitConstructedEventHandler
      m_unitConstructedEventHandler = null