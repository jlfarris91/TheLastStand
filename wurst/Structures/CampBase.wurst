package CampBase
import Camp
import HumanPlayerMetadata
import HostileCircularCachedSpawnManager
import FriendlyCircularCachedSpawnManager

// ============================================================================
public class CampBase extends CampUnit

  // --------------------------------------------------------------------------
  construct (ICamp camp)
    super(camp)

  // --------------------------------------------------------------------------
  override function onUnitChanged(unit oldUnit, unit newUnit)
    super.onUnitChanged(oldUnit, newUnit)

    if (oldUnit != null)
      let oldPlayerMetadata = oldUnit.getOwnerHumanMetadata()
      let oldCamp = oldPlayerMetadata.getCamp()
      oldCamp.setCampTent(null)

    if (newUnit != null)
      let newPlayerMetadata = newUnit.getOwnerHumanMetadata()
      let newCamp = newPlayerMetadata.getCamp()
      newCamp.setCampTent(newUnit)

    // Invalidate the cache
    let oldUnitPlayer = oldUnit != null ? oldUnit.getOwner() : null
    let newUnitPlayer = newUnit != null ? newUnit.getOwner() : null
    let p = oldUnitPlayer != null ? oldUnitPlayer : newUnitPlayer

    let hostileSpawnManager = getPlayerCachedHostileSpawnManager(p)
    let friendlySpawnManager = getPlayerCachedFriendlySpawnManager(p)

    // Enable/disable the spawn manager based on if the camp unit exists
    hostileSpawnManager.setIsEnabled(newUnit != null)
    friendlySpawnManager.setIsEnabled(newUnit != null)

    if (newUnit != null)
      hostileSpawnManager.setCenter(newUnit.getPos())
      friendlySpawnManager.setCenter(newUnit.getPos())

  // --------------------------------------------------------------------------
  override function onKilled()
    let newPlayerMetadata = getUnit().getOwnerHumanMetadata()
    let newCamp = newPlayerMetadata.getCamp()
    newCamp.setCampTent(null)