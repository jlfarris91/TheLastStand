package Heroes
import HumanPlayers
import SurvivorSpawnPoints
import ErrorHandling
import TlsUnitIds
import HumanPlayerMetadata
import UnitMetadata

// ============================================================================
public function spawnHeroForPlayer(player p, vec2 pos)
  let playerMetadata = p.getHumanMetadataRequired()

  unit hero

  let heroMetadata = playerMetadata.getHero()

  if (heroMetadata != null)
    heroMetadata.getUnit().remove()
    hero = createUnitTLS(heroMetadata, p, TlsUnitIds.hero, pos.x, pos.y, GetRandomDirectionDeg())
  else
    hero = createUnitTLS(p, TlsUnitIds.hero, pos.x, pos.y, GetRandomDirectionDeg())

  // Reset player's camera to look at new hero
  if (p == GetLocalPlayer())
    PanCameraToTimedForPlayer(p, pos.x, pos.y, 0)
  
  SelectUnitForPlayerSingle(hero, p)

// ============================================================================
public function spawnHeroForPlayerAtRandomPoint(player p)
  var sp = g_SurvivorSpawnPointManager.getRandomSpawnPoint()
  if (sp == null)
    error("Could not find a safe spawn point to spawn hero for player " + p.getName())
  spawnHeroForPlayer(p, sp.getPos())

  // Set player name back to normal if they were deceased
  p.setDisplayName(p.getName())

// ============================================================================
public function spawnHeroesForPlayers()
  print("spawning heroes for players")
  g_SurvivorSpawnPointManager.updateSpawnPointsNow()
  for p in g_PlayingHumanPlayers
    spawnHeroForPlayerAtRandomPoint(p)