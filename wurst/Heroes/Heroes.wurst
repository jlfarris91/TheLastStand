package Heroes
import ErrorHandling
import TlsUnitIds
import HumanPlayerComponent
import UnitMetadata
import GameSettings
import Orders
import TlsItemIds
import GameConstants
import InvulnerableComponent
import Spawning
import PlayerSetup
import TlsJobItemIds
import ItemType

// ============================================================================
public function spawnHeroForPlayer(player p, vec2 pos, bool firstTime) returns unit
  let playerMetadata = p.getMetadata()
  let playerComp = playerMetadata.getHumanPlayerComponent()

  unit hero = playerComp.getHero()
  let firstTimeSpawned = hero == null

  // This is the first time the hero has been spawned for the player
  // new hero metadata will be automatically generated
  if (firstTimeSpawned)
    hero = createUnitTLS(p, playerComp.getHeroTypeId(), pos, 270.0.asAngleDegrees())
    PlayerSetup.getSetupForPlayer(p).setupHero(hero)
  else
    hero.revive(pos, false)

  // Reset player's camera to look at new hero
  if (p == localPlayer)
    PanCameraToTimedForPlayer(p, pos.x, pos.y, 0)
  
  SelectUnitForPlayerSingle(hero, p)

  // Set player name back to normal if they were deceased
  playerMetadata.resetDisplayName()

  // Give starting items
  if (playerComp.getObelisk() == null)
    ItemType.createItemForUnit(TlsItemIds.obelisk, hero)

  if (firstTimeSpawned)
    ItemType.createItemForUnit(TlsJobItemIds.priest2, hero)
    ItemType.createItemForUnit(TlsItemIds.flintAndTinder, hero)

  // Make hero invulnerable for a short period of time
  if (not firstTime)
    hero.makeInvulnerable(HERO_RESPAWN_INVULNERABLE_DURATION)

  return hero

// ============================================================================
public function spawnInitialPlayerUnitsAtRandomPoint(player p, bool _firstTime)
  let sp = getDynamicFriendlySpawnPointProvider(p).getRandomSpawnPointInPlayableMap()
  if (not sp.succeeded)
    error("Could not find a safe spawn point to spawn hero for player " + p.getName())
    return

  // let hero = spawnHeroForPlayer(p, sp.spawnPoint, firstTime)
  
  // Create survivors for the player to start with
  // spawnInitialSurvivorsForPlayer(p, hero)

  createUnitTLS(p, TlsUnitIds.wisp, sp.spawnPoint, 270.0.asAngleDegrees())

  // Reset player's camera to look at new hero
  if (p == localPlayer)
    PanCameraToTimedForPlayer(p, sp.spawnPoint.x, sp.spawnPoint.y, 0)

// ============================================================================
function spawnInitialSurvivorsForPlayer(player p, unit hero)
  let pos = hero.getPos()
  for i = 1 to GameSettings.startingSurvivors
    let survivor = createUnitTLS(p, TlsUnitIds.Survivors.survivorMale, pos, GetRandomDirectionDeg().asAngleDegrees())
    survivor.issueTargetOrderById(OrderIds.move, hero)