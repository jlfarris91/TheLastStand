package WaveDebugger
import WaveSpawning
import Frame
import Wave
import GameInstance
import Time
import SpawnWave
import Math
import RealExtensions
import ProjectConstants
import DebuggerDialog
import Host
import PlayerExtensions

// ============================================================================
class SpawnWaveDebugger extends DebuggerRealtimeUpdateFrame

  // --------------------------------------------------------------------------
  construct()
    super(createFrame("TEXTAREA", "WaveDebugger", GAME_UI, "", 0))

  // --------------------------------------------------------------------------
  private function getWave(player selectedPlayer) returns Wave
    if (selectedPlayer == null)
      return null
    
    let waves = g_GameInstance.getWaves()
    if (waves == null)
      return null

    let playerWaves = waves.getOrCreatePlayerWaves(selectedPlayer)

    if (isDay())
      let dayWaves = playerWaves.getDayWaves()
      return dayWaves.getLatestWave(g_GameInstance.getDay())
    
    if (isNight())
      let nightWaves = playerWaves.getNightWaves()
      return nightWaves.getLatestWave(g_GameInstance.getNight())
    
    return null

  // --------------------------------------------------------------------------
  override function realtimeUpdate(real _)

    let frameHandle = getFrameHandle()

    let selectedUnit = g_HostPlayer.getFirstSelectedUnit()

    if (selectedUnit == null)
      BlzFrameSetText(frameHandle, "Select a unit")
      return

    let selectedPlayer = selectedUnit.getOwner()

    BlzFrameSetText(frameHandle, "Selected Player: " + selectedPlayer.getName())
    
    let wave = getWave(selectedPlayer)
    if (wave == null)
      BlzFrameAddText(frameHandle, "No Wave found")
      return

    printWaveInfo(wave)

    for spawnWave in wave.getSpawnWaves()
      printSpawnWaveInfo(spawnWave)    

  // --------------------------------------------------------------------------
  function printWaveInfo(Wave wave)
    let frameHandle = getFrameHandle()

    BlzFrameAddText(frameHandle, "===== {0} {1} =====".format(wave.getId(), wave.getStatusString()))
    BlzFrameAddText(frameHandle, "Progress: " + wave.getProgress().toPercentageString01())
    BlzFrameAddText(frameHandle, "Wave Rewards: " + wave.getXpReward().toString() + "xp " + wave.getGoldReward().toString() + "g " + wave.getMatsReward().toString() + "l")

  // --------------------------------------------------------------------------
  function printSpawnWaveInfo(SpawnWave spawnWave)
    let frameHandle = getFrameHandle()

    let context = spawnWave.getContext()
    let numSpawned = spawnWave.getSpawnedCount()

    let definition = spawnWave.getDefinition()
    let spawnCountMax = definition.getMaxSpawnCount(context)
    let aliveCountMax = definition.getMaxAliveCount(context)
    let numAlive = spawnWave.getAliveCount()
    let spawnGroupSize = definition.getGroupSize(context)
    let numGroupsStr = spawnCountMax != UNLIMITED ? (spawnCountMax / max(spawnGroupSize, 1)).toString() : "UNLIMITED"
    let spawnsPerGoldDrop = definition.getSpawnsPerGoldDrop(context)
    let spawnsPerGoldDropMax = (definition.getMaxSpawnCount(context) / max(spawnsPerGoldDrop, 1)).floor()
    let goldRewardBase = definition.getGoldReward(context)
    let goldPerDrop = definition.getGoldDropAmount(context)

    BlzFrameAddText(frameHandle, "=== {0} {1} ===".format(definition.getName(), spawnWave.getStatusString()))
    BlzFrameAddText(frameHandle, "Progress: " + context.waveProgress.toPercentageString01())
    BlzFrameAddText(frameHandle, "Spawns: " + I2S(numSpawned) + "/" + (spawnCountMax == UNLIMITED ? "Unlimited" : I2S(spawnCountMax)))
    BlzFrameAddText(frameHandle, "Alive: " + I2S(numAlive) + "/" + (aliveCountMax == UNLIMITED ? "Unlimited" : I2S(aliveCountMax)))
    BlzFrameAddText(frameHandle, "Groups: " + numGroupsStr + " Size: " + I2S(spawnGroupSize))
    BlzFrameAddText(frameHandle, "Gold: " + goldRewardBase.toString() + " + " + context.goldAvailable.toString() + " gd: " + context.goldDrops.toString() + "/" + spawnsPerGoldDropMax.toString() + " gpd: " + goldPerDrop.toString() )
    BlzFrameAddText(frameHandle, "Difficulty Coeff: " + context.getDifficultyCoeff().toString())
    BlzFrameAddText(frameHandle, "Tier Chances: {0} {1} {2}".format(context.getTierChance(0).toPercentageString01(), context.getTierChance(1).toPercentageString01(), context.getTierChance(2).toPercentageString01()))
    BlzFrameAddText(frameHandle, "State: " + spawnWave.getDebugState())
    BlzFrameAddText(frameHandle, "")

// ============================================================================
init
  if (DEV_ENVIRONMENT)
    DebuggerDialog.registerFrame("WAVES", () -> new SpawnWaveDebugger())