package PlayerWaves
import HashMap
import NightWaveCollection
import DayWaveCollection
import DayNightWaveRunner

// ============================================================================
public class PlayerWaves
  private NightWaveCollection m_nightWaves
  private DayWaveCollection m_dayWaves
  private DayNightWaveRunner m_runner

  // --------------------------------------------------------------------------
  construct(player p)
    m_nightWaves = new NightWaveCollection(p)
    m_dayWaves = new DayWaveCollection(p)
    m_runner = new DayNightWaveRunner(p, m_nightWaves, m_dayWaves)

  // --------------------------------------------------------------------------
  ondestroy
    destroy m_runner
    destroy m_nightWaves
    destroy m_dayWaves

  // --------------------------------------------------------------------------
  function getNightWaves() returns NightWaveCollection
    return m_nightWaves

  // --------------------------------------------------------------------------
  function getDayWaves() returns DayWaveCollection
    return m_dayWaves

  // --------------------------------------------------------------------------
  function getRunner() returns DayNightWaveRunner
    return m_runner

// ============================================================================
public class PlayerWavesMap extends HashMap<int, PlayerWaves>

  // ============================================================================
  function getOrCreatePlayerWaves(player p) returns PlayerWaves
    let key = GetPlayerId(p)
    PlayerWaves waves
    if (has(key))
      waves = get(key)
    else
      waves = new PlayerWaves(p)
      put(key, waves)
    return waves