package LootUndeadCard
import Lootables
import SpawnUndeadUnitDirector
import Func

// ============================================================================
public class LootUndeadCard extends LootCard
  private Func2<unit, unit, SpawnUndeadUnitDirector> array[3] m_spawnDirectorFactories

  // --------------------------------------------------------------------------
  construct(string id)
    super(id)

  // --------------------------------------------------------------------------
  ondestroy
  
    for i = 0 to 2
      if (m_spawnDirectorFactories[i] != null)
        m_spawnDirectorFactories[i].release()
        m_spawnDirectorFactories[i] = null

  // ----------------------------------------------------------------------------
  override function getDiscardOnActivate() returns bool
    return true

  // ----------------------------------------------------------------------------
  function getSpawnDirectorFactory(int tier) returns Func2<unit, unit, SpawnUndeadUnitDirector>
    return m_spawnDirectorFactories[tier]
  
  // ----------------------------------------------------------------------------
  function setSpawnDirectorFactory(int tier, Func2<unit, unit, SpawnUndeadUnitDirector> value)
    value.acquire()
    if (m_spawnDirectorFactories[tier] != null)
      m_spawnDirectorFactories[tier].release()
    m_spawnDirectorFactories[tier] = value

  // ----------------------------------------------------------------------------
  override function getTierCount() returns int
    return 3

  // ----------------------------------------------------------------------------
  override function getTierValueMultiplier(int tier) returns real
    return (tier + 1).toReal()

  // --------------------------------------------------------------------------
  override function activateCard(int tier) returns bool
    
    let lootable = getLootable()
    let looter = getLooter()

    let spawnDirectorFactory = getSpawnDirectorFactory(tier)
    if (spawnDirectorFactory == null)
      Log.error("No spawn director factory exists for tier " + tier.toString())
      return false

    let director = spawnDirectorFactory.call(lootable, looter)
    director.setEnabled(true)

    return true