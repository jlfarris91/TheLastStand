package LootablesNearCamps
import GroupUtils
import UnitIndexer
import UnitExtensions
import GameConstants
import UnitMetadata
import LootableComponent
import LootableTypes

constant real LOOTABLE_REFRESH_RANGE = 512.0
constant real LOOTABLE_CAMP_RANGE = 512.0

// ============================================================================
function refreshLootablesInRange(vec2 pos, real radius)
  let temp = getGroup()
  temp.enumUnitsInRange(pos, radius)
  for _unit in temp
    if (_unit.isLootable())
      refreshLootable(_unit)
  temp.release()

// ============================================================================
function refreshLootable(unit lootableUnit)

  let metadata = lootableUnit.getMetadata()
  if (metadata == null)
    return

  let comp = metadata.getLootableComponent()
  if (comp == null)
    return

  bool foundCooldownAffector = false
  let temp = getGroup()
  temp.enumUnitsInRange(lootableUnit.getPos(), LOOTABLE_CAMP_RANGE)
  for _unit in temp
    if (unitAffectsLootableCooldown(_unit))
      foundCooldownAffector = true
      break
  temp.release()

  comp.setCooldownDaysRange(foundCooldownAffector ? LOOTABLES_NEARCAMP_COOLDOWN_RANGE : LOOTABLES_DEFAULT_COOLDOWN_RANGE)

// ============================================================================
function unitAffectsLootableCooldown(unit _unit) returns bool
  return _unit.isStructure() and
         not _unit.isLootable() and
         _unit.getOwner() != PLAYER_VILLAGERS and
         _unit.isAllyOf(PLAYER_VILLAGERS)

// ============================================================================
function onUnitIndexDeindexed()
  refreshLootablesInRange(getIndexingUnit().getPos(), LOOTABLE_REFRESH_RANGE)

// ============================================================================
init
  onUnitIndex(() -> onUnitIndexDeindexed())
  onUnitDeindex(() -> onUnitIndexDeindexed())