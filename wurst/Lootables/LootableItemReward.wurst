package LootableItemReward
import LootableReward
import FX
import LootableComponent
import ColorUtility
import SoundUtils
import ItemType
import Notifications
import TlsItemLibrary
import Difficulties
import GameInstance
import LootItemLibrary
import ErrorHandling

SoundDefinition g_lootRewardSound

// ============================================================================
public class LootableItemReward implements ILootableReward
  private itemChances m_itemChancesStart
  private itemChances m_itemChancesEnd

  // --------------------------------------------------------------------------
  construct(itemChances chancesStart, itemChances chancesEnd)
    m_itemChancesStart = chancesStart
    m_itemChancesEnd = chancesEnd

  // --------------------------------------------------------------------------
  override function getStopsRetrigger() returns bool
    return false

  // --------------------------------------------------------------------------
  override function giveReward(LootableComponent lootable, unit looter) returns bool

    let ownerPlayer = looter.getOwner()

    let itemFindQualityT = DifficultyScaling.getCombinedItemFindQuality01(ownerPlayer, looter, g_GameInstance.getGameProgress01())
    let itemChances = lerp(m_itemChancesStart, m_itemChancesEnd, itemFindQualityT)

    let itm = g_LootItemLibrary.giveRandomItemToUnit(looter, itemChances)
    if (itm == null or itm.getTypeId() == 0)
      error("No item could be found in loot item library")
      return false

    let itemTypeId = itm.getTypeId()
    
    let itemType = ItemType.getItemType(itemTypeId)
    if (itemType == null)
      error("No ItemType could be found for item with type id " + itemTypeId.toString())
      return false

    FX.createFoundItemTag(looter.getPos(), ownerPlayer)

    let itemRarity = itemType.getRarity()

    let notification = new LootRewardNotification(
      NotificationManager.nextNotificationId(),
      ownerPlayer,
      looter.getPos(),
      g_lootRewardSound)
    ..setMessage("Found item " + itm.getName().colorize(itemRarity.getColor()))
    ..setIconPath(itm.getIconPath())

    lootable.showLootRewardNotification(ownerPlayer, notification)

    return true

// ============================================================================
init

  g_lootRewardSound = new SoundDefinition("sound\\interface\\pickupitem.flac", false, false)
  g_lootRewardSound.volume = 126