package LootSurvivorCard
import Lootables
import SurvivorJobs
import Action
import LootableComponent
import Survivors
import GameConstants
import UnitExtensions
import Orders
import FX
import Notifications
import ColorUtility
import HashMap
import WeightedSet
import SoundUtils
import TlsUnitIds
import UnitMetadata

HashMap<int, WeightedSet<SoundDefinition>> g_lootFinishedSoundMap

// ============================================================================
public class LootSurvivorCard extends LootCard
  private SurvivorJobType m_jobType
  private Action1<unit> m_modifier

  // --------------------------------------------------------------------------
  construct(string id, SurvivorJobType jobType, Action1<unit> modifier)
    super(id)
    m_jobType = jobType
    m_modifier = modifier.acquire()

  // ----------------------------------------------------------------------------
  ondestroy
    m_modifier.release()
    m_modifier = null

  // --------------------------------------------------------------------------
  override function giveReward(unit lootable, unit looter) returns bool
    let owner = looter.getOwner()
    let lootableComp = lootable.getMetadata().getLootableComponent()
    let spawnPos = lootableComp.getSpawnPosition()
    
    let survivor = SurvivorUtility.spawnSurvivorWithJob(PLAYER_VILLAGERS, spawnPos, m_jobType)
    survivor.fadeIn(color(150, 150, 150))
    survivor.issuePointOrderById(OrderIds.move, looter.getPos())

    FX.createFoundSurvivorTag(spawnPos, owner)

    m_modifier.call(survivor)
    
    let job = SurvivorJobs.getJobDefinitionForUnitType(survivor.getTypeId())

    let notification = new LootRewardNotification(
      NotificationManager.nextNotificationId(),
      owner,
      looter.getPos(),
      getSoundDefinition(survivor.getTypeId()))
    ..setMessage("Found " + "{0} {1}".format(job.getTitle(survivor.getTypeId()), survivor.getProperName()).gold())
    ..setIconPath(survivor.getIconPath())

    lootableComp.showLootRewardNotification(owner, notification)
    return true

// ============================================================================
function registerSoundDefinition(int unitTypeId, string soundPath, int volume, real weight)
  var sounds = g_lootFinishedSoundMap.get(unitTypeId)
  if (sounds == null)
    sounds = new WeightedSet<SoundDefinition>()
    g_lootFinishedSoundMap.put(unitTypeId, sounds)
  let definition = new SoundDefinition(soundPath, false, false)
  definition.volume = volume
  sounds.add(definition, weight)

// ============================================================================
function getSoundDefinition(int unitTypeId) returns SoundDefinition
  var sounds = g_lootFinishedSoundMap.get(unitTypeId)
  if (sounds == null)
    sounds = g_lootFinishedSoundMap.get(TlsUnitIds.Survivors.survivorMale)
  return sounds.getRandom()

// ============================================================================
init

  g_lootFinishedSoundMap = new HashMap<int, WeightedSet<SoundDefinition>>()

  registerSoundDefinition(TlsUnitIds.Survivors.survivorMale, "units\\critters\\villagerman\\villagerm1.flac", 64, 2)
  registerSoundDefinition(TlsUnitIds.Survivors.survivorMale, "units\\critters\\villagerman\\villagerm3.flac", 64, 1)

  registerSoundDefinition(TlsUnitIds.Survivors.builder, "units\\human\\peasant\\peasantready1.flac", 64, 1)
  
  registerSoundDefinition(TlsUnitIds.Survivors.militia1, "units\\human\\peasant\\peasantready1.flac", 64, 1)
  
  registerSoundDefinition(TlsUnitIds.Survivors.militia2, "units\\human\\footman\\footmanwhat1.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.militia2, "units\\human\\footman\\footmanwhat2.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.militia2, "units\\human\\footman\\footmanwhat3.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.militia2, "units\\human\\footman\\footmanwhat4.flac", 64, 1)

  registerSoundDefinition(TlsUnitIds.Survivors.militia3, "units\\human\\thecaptain\\captainwhat1.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.militia3, "units\\human\\thecaptain\\captainwhat2.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.militia3, "units\\human\\thecaptain\\captainwhat3.flac", 64, 1)
  
  registerSoundDefinition(TlsUnitIds.Survivors.spearman1, "units\\creeps\\bandit\\banditwhat1.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.spearman1, "units\\creeps\\bandit\\banditwhat2.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.spearman1, "units\\creeps\\bandit\\banditwhat3.flac", 64, 1)
  
  registerSoundDefinition(TlsUnitIds.Survivors.spearman2, "units\\creeps\\bandit\\banditwhat1.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.spearman2, "units\\creeps\\bandit\\banditwhat2.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.spearman2, "units\\creeps\\bandit\\banditwhat3.flac", 64, 1)
  
  registerSoundDefinition(TlsUnitIds.Survivors.priest1, "units\\human\\priest\\priestwhat1.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.priest1, "units\\human\\priest\\priestwhat2.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.priest1, "units\\human\\priest\\priestwhat3.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.priest1, "units\\human\\priest\\priestwhat4.flac", 64, 1)
  
  registerSoundDefinition(TlsUnitIds.Survivors.acolyte, "units\\undead\\acolyte\\acolytewhat2.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.acolyte, "units\\undead\\acolyte\\acolytewhat3.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.acolyte, "units\\undead\\acolyte\\acolytewhat4.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.acolyte, "units\\undead\\acolyte\\acolytewhat5.flac", 64, 1)
  
  registerSoundDefinition(TlsUnitIds.Survivors.marksman1, "units\\human\\rifleman\\riflemanwhat1.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.marksman1, "units\\human\\rifleman\\riflemanwhat2.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.marksman1, "units\\human\\rifleman\\riflemanwhat3.flac", 64, 1)
  
  registerSoundDefinition(TlsUnitIds.Survivors.marksman2, "units\\human\\rifleman\\riflemanwhat1.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.marksman2, "units\\human\\rifleman\\riflemanwhat2.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.marksman2, "units\\human\\rifleman\\riflemanwhat3.flac", 64, 1)
  
  registerSoundDefinition(TlsUnitIds.Survivors.marksman3, "units\\human\\rifleman\\riflemanwhat1.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.marksman3, "units\\human\\rifleman\\riflemanwhat2.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.marksman3, "units\\human\\rifleman\\riflemanwhat3.flac", 64, 1)
  
  registerSoundDefinition(TlsUnitIds.Survivors.engineer, "units\\human\\peasant\\peasantready1.flac", 64, 1)