package LootableSurvivorReward
import LootableReward
import GameConstants
import FX
import Orders
import LootableComponent
import ColorUtility
import SurvivorJobs
import WeightedSet
import Survivors
import SoundUtils
import HashMap
import TlsUnitIds
import Notifications
import UnitExtensions

WeightedSet<SurvivorJobType> g_weightedSurvivorJobSet
HashMap<int, WeightedSet<SoundDefinition>> g_lootFinishedSoundMap

// ============================================================================
public class LootableSurvivorReward implements ILootableReward

  // --------------------------------------------------------------------------
  override function getStopsRetrigger() returns bool
    return true

  // --------------------------------------------------------------------------
  override function giveReward(LootableComponent lootable, unit looter) returns bool
    spawnSurvivor(lootable, looter)
    return true

  // --------------------------------------------------------------------------
  function spawnSurvivor(LootableComponent lootable, unit looter)
    let owner = looter.getOwner()
    let spawnPos = lootable.getSpawnPosition()
    
    let survivor = SurvivorUtility.spawnSurvivorWithRandomJob(PLAYER_VILLAGERS, spawnPos, g_weightedSurvivorJobSet)
    survivor.fadeIn()
    survivor.issuePointOrderById(OrderIds.move, looter.getPos())

    FX.createFoundSurvivorTag(spawnPos, owner)
    
    let job = SurvivorJobs.getJobDefinitionForUnitType(survivor.getTypeId())

    let notification = new LootRewardNotification(
      NotificationManager.nextNotificationId(),
      owner,
      looter.getPos(),
      getSoundDefinition(survivor.getTypeId()))
    ..setMessage("Found " + "{0} {1}".format(job.getTitle(survivor.getTypeId()), survivor.getProperName()).colorize(Colors.gold))
    ..setIconPath(survivor.getIconPath())

    lootable.showLootRewardNotification(owner, notification)

// ============================================================================
function registerSoundDefinition(int unitTypeId, string soundPath, int volume, real weight)
  var sounds = g_lootFinishedSoundMap.get(unitTypeId)
  if (sounds == null)
    sounds = new WeightedSet<SoundDefinition>()
    g_lootFinishedSoundMap.put(unitTypeId, sounds)
  let definition = new SoundDefinition(soundPath, false, false)
  definition.volume = volume
  sounds.add(definition, weight)

// ============================================================================
function getSoundDefinition(int unitTypeId) returns SoundDefinition
  var sounds = g_lootFinishedSoundMap.get(unitTypeId)
  if (sounds == null)
    sounds = g_lootFinishedSoundMap.get(TlsUnitIds.Survivors.survivorMale)
  return sounds.getRandom()

// ============================================================================
init
  
  g_weightedSurvivorJobSet = new WeightedSet<SurvivorJobType>()
    ..add(SurvivorJobType.None, 50)
    ..add(SurvivorJobType.Builder, 5)
    ..add(SurvivorJobType.Militia, 3)
    ..add(SurvivorJobType.Spearman, 3)
    ..add(SurvivorJobType.Priest, 3)
    ..add(SurvivorJobType.Marksman, 1)
    ..add(SurvivorJobType.Acolyte, 1)
    // ..add(SurvivorJobs.engineer, 1)

  g_lootFinishedSoundMap = new HashMap<int, WeightedSet<SoundDefinition>>()

  registerSoundDefinition(TlsUnitIds.Survivors.survivorMale, "units\\critters\\villagerman\\villagerm1.flac", 64, 2)
  registerSoundDefinition(TlsUnitIds.Survivors.survivorMale, "units\\critters\\villagerman\\villagerm3.flac", 64, 1)

  registerSoundDefinition(TlsUnitIds.Survivors.builder1, "units\\human\\peasant\\peasantready1.flac", 64, 1)
  
  registerSoundDefinition(TlsUnitIds.Survivors.militia1, "units\\human\\peasant\\peasantready1.flac", 64, 1)
  
  registerSoundDefinition(TlsUnitIds.Survivors.militia2, "units\\human\\footman\\footmanwhat1.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.militia2, "units\\human\\footman\\footmanwhat2.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.militia2, "units\\human\\footman\\footmanwhat3.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.militia2, "units\\human\\footman\\footmanwhat4.flac", 64, 1)

  registerSoundDefinition(TlsUnitIds.Survivors.militia3, "units\\human\\thecaptain\\captainwhat1.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.militia3, "units\\human\\thecaptain\\captainwhat2.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.militia3, "units\\human\\thecaptain\\captainwhat3.flac", 64, 1)
  
  registerSoundDefinition(TlsUnitIds.Survivors.spearman1, "units\\creeps\\bandit\\banditwhat1.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.spearman1, "units\\creeps\\bandit\\banditwhat2.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.spearman1, "units\\creeps\\bandit\\banditwhat3.flac", 64, 1)
  
  registerSoundDefinition(TlsUnitIds.Survivors.spearman2, "units\\creeps\\bandit\\banditwhat1.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.spearman2, "units\\creeps\\bandit\\banditwhat2.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.spearman2, "units\\creeps\\bandit\\banditwhat3.flac", 64, 1)
  
  registerSoundDefinition(TlsUnitIds.Survivors.priest1, "units\\human\\priest\\priestwhat1.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.priest1, "units\\human\\priest\\priestwhat2.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.priest1, "units\\human\\priest\\priestwhat3.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.priest1, "units\\human\\priest\\priestwhat4.flac", 64, 1)
  
  registerSoundDefinition(TlsUnitIds.Survivors.marksman1, "units\\human\\rifleman\\riflemanwhat1.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.marksman1, "units\\human\\rifleman\\riflemanwhat2.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.marksman1, "units\\human\\rifleman\\riflemanwhat3.flac", 64, 1)
  
  registerSoundDefinition(TlsUnitIds.Survivors.marksman2, "units\\human\\rifleman\\riflemanwhat1.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.marksman2, "units\\human\\rifleman\\riflemanwhat2.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.marksman2, "units\\human\\rifleman\\riflemanwhat3.flac", 64, 1)
  
  registerSoundDefinition(TlsUnitIds.Survivors.marksman3, "units\\human\\rifleman\\riflemanwhat1.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.marksman3, "units\\human\\rifleman\\riflemanwhat2.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.marksman3, "units\\human\\rifleman\\riflemanwhat3.flac", 64, 1)
  
  registerSoundDefinition(TlsUnitIds.Survivors.acolyte1, "units\\undead\\acolyte\\acolytewhat2.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.acolyte1, "units\\undead\\acolyte\\acolytewhat3.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.acolyte1, "units\\undead\\acolyte\\acolytewhat4.flac", 64, 1)
  registerSoundDefinition(TlsUnitIds.Survivors.acolyte1, "units\\undead\\acolyte\\acolytewhat5.flac", 64, 1)