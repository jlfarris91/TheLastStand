package LootableZombieReward

import LootableReward
import UnitMetadata
import GameConstants
import TlsUnitIds
import ErrorHandling
import MainItemLibrary
import Orders
import LootableComponent
import ColorUtility
import ClosureTimers
import GameInstance
import Action
import UndeadTargetingComponent
import SoundUtils
import Notifications
import Icons

constant real ZOMBIE_SPAWN_INTERVAL = 0.8
SoundDefinition g_zombieSpawnSound

// ============================================================================
public class LootableZombieReward implements ILootableReward
  private int m_minZombies
  private int m_maxZombies
  private ItemChances m_itemChancesStart
  private ItemChances m_itemChancesEnd
  private Action2<unit, real> m_zombieModifier

  // --------------------------------------------------------------------------
  ondestroy

    if (m_zombieModifier != null)
      m_zombieModifier.release()
      m_zombieModifier = null

  // --------------------------------------------------------------------------
  override function getStopsRetrigger() returns bool
    return true

  // --------------------------------------------------------------------------
  function getUnitModifier() returns Action2<unit, real>
    return m_zombieModifier

  // --------------------------------------------------------------------------
  function setUnitModifier(Action2<unit, real> value)
    if (m_zombieModifier != null)
      m_zombieModifier.release()
    m_zombieModifier = value

  // --------------------------------------------------------------------------
  function getMinZombies() returns int
    return m_minZombies

  // --------------------------------------------------------------------------
  function setMinZombies(int zombies)
    if (zombies <= 0)
      error("Argument 'zombies' must be greater than 0")
    m_minZombies = zombies

  // --------------------------------------------------------------------------
  function getMaxZombies() returns int
    return m_maxZombies

  // --------------------------------------------------------------------------
  function setMaxZombies(int zombies)
    if (zombies <= 0)
      error("Argument 'zombies' must be greater than 0")
    m_maxZombies = zombies

  // --------------------------------------------------------------------------
  function setItemChances(ItemChances chancesStart, ItemChances chancesEnd)
    m_itemChancesStart = chancesStart
    m_itemChancesEnd = chancesEnd

  // --------------------------------------------------------------------------
  override function giveReward(LootableComponent lootable, unit looter) returns bool
    spawnZombies(lootable, looter)
    return true

  // --------------------------------------------------------------------------
  protected function spawnZombies(LootableComponent lootable, unit looter)
    let zombieCount = GetRandomInt(m_minZombies, m_maxZombies)
    let owner = looter.getOwner()
    let spawnPos = lootable.getSpawnPosition()

    let notification = new LootRewardNotification(
      NotificationManager.nextNotificationId(),
      owner,
      looter.getPos(),
      g_zombieSpawnSound)
    ..setMessage("Found " + "ZOMBIES!".colorize(Colors.red))
    ..setIconPath(Icons.bTNZombie)

    lootable.showLootRewardNotification(owner, notification)

    let gameProgressT = g_GameInstance.getGameProgress01()

    doPeriodicallyCounted(ZOMBIE_SPAWN_INTERVAL, zombieCount) (cb) ->
    //{
      let lastCreatedZombie = createUnitTLS(
        PLAYER_UNDEAD,
        TlsUnitIds.Undead.zombiesDay[0],
        spawnPos,
        GetRandomDirectionDeg().asAngleDegrees())

      if (m_zombieModifier != null)
        m_zombieModifier.call(lastCreatedZombie, gameProgressT)

      let metadata = lastCreatedZombie.getMetadata()
      if (metadata != null)
        let utc = metadata.getUndeadTargetingComponent()
        if (utc != null)
          utc.setTargetUnit(looter)

      lastCreatedZombie.issueTargetOrderById(OrderIds.attack, looter)

      // Give a random item to the last created zombie
      if (cb.isLast())
        let itemChances = lerp(m_itemChancesStart, m_itemChancesEnd, g_GameInstance.getGameProgress01())
        g_MainItemLibrary.giveRandomItemToUnit(lastCreatedZombie, itemChances)
    //}

// ============================================================================
init
  g_zombieSpawnSound = new SoundDefinition(Sounds.zombieDeath1, false, false)
  g_zombieSpawnSound.volume = 32