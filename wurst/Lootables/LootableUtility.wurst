package LootableUtility
import UnitMetadata
import LooterComponent
import TlsAbilityIds
import Orders
import Math

public constant int ABILITY_ID_SEARCH = TlsAbilityIds.search
public constant int ABILITY_SEARCH_ORDER = Orders.phaseshift
public constant int ABILITY_ID_LOOTABLE = 'A02C'

// ============================================================================
public function getUnitSearchDuration(unit looter, real unscaledSearchDuration) returns real
  var searchDuration = unscaledSearchDuration
  // Shapeshifting Key decreases duration by 50%
  let metadata = looter.getMetadata()
  if (metadata != null)
    let comp = metadata.getLooterComponent()
    if (comp != null)
      searchDuration = comp.scaleLootDuration(searchDuration)
  return searchDuration

// ============================================================================
public function getUnitSearchManaCostPerSecond(unit looter) returns real  
  var manaCostPerSecond = looter.getAbility(ABILITY_ID_SEARCH).getField(ABILITY_ILF_MANA_COST, 0).toReal()
  let metadata = looter.getMetadata()
  if (metadata != null)
    let looterComp = metadata.getLooterComponent()
    if (looterComp != null)
      manaCostPerSecond = looterComp.scaleLootManaCostPerSecond(manaCostPerSecond)
  return manaCostPerSecond

// ============================================================================
public function canUnitSearchForDuration(unit looter, real duration) returns bool
  let manaCostPerSecond = getUnitSearchManaCostPerSecond(looter)
  let startingMana = looter.getMana()
  let maxMana = looter.getMaxMana()
  let manaRegenPerSecond = looter.getField(UNIT_RF_MANA_REGENERATION)
  let totalManaRegened = manaRegenPerSecond * duration
  let totalManaDrained = manaCostPerSecond * duration
  let manaAfterRegen = startingMana + totalManaRegened
  let manaAfterRegenAndDrain = clamp(manaAfterRegen - totalManaDrained, 0, maxMana)
  return manaAfterRegenAndDrain.floor() > 0