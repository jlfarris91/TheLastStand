package LootableUtility
import UnitMetadata
import TlsAbilityIds
import UnitPropertiesComponent

public constant int ABILITY_ID_SEARCH = TlsAbilityIds.search
public constant int ABILITY_ID_LOOTABLE = 'A02C'

// ============================================================================
public function getUnitSearchDuration(unit looter, real unscaledSearchDuration) returns real
  var searchDuration = unscaledSearchDuration
  // Shapeshifting Key decreases duration by 50%
  let metadata = looter.getMetadata()
  if (metadata != null)
    let comp = metadata.getUnitPropertiesComponent()
    if (comp != null)
      searchDuration *= comp.getPropertyValue(UnitProperty.LOOT_DURATION_SCALE)
  return searchDuration

// ============================================================================
public function getUnitSearchManaCostPerSecond(unit looter) returns real  
  var manaCostPerSecond = looter.getAbility(ABILITY_ID_SEARCH).getField(ABILITY_ILF_MANA_COST, 0).toReal()
  let metadata = looter.getMetadata()
  if (metadata != null)
    let comp = metadata.getUnitPropertiesComponent()
    if (comp != null)
      manaCostPerSecond *= comp.getPropertyValue(UnitProperty.LOOT_MANA_COST_SCALE)
  return manaCostPerSecond

// ============================================================================
public function canUnitSearchForDuration(unit looter, real duration) returns bool
  return calculateManaRemainingAfterLootOperation(looter, duration) > 0

// ============================================================================
public function calculateManaRemainingAfterLootOperation(unit looter, real duration) returns int
  let manaCostPerSecond = getUnitSearchManaCostPerSecond(looter)
  let startingMana = looter.getMana()
  let manaRegenPerSecond = looter.getField(UNIT_RF_MANA_REGENERATION)
  let totalManaRegened = manaRegenPerSecond * duration
  let totalManaDrained = manaCostPerSecond * duration
  let manaAfterRegen = startingMana + totalManaRegened
  return (manaAfterRegen - totalManaDrained).floor()