package LootableSurvivorReward
import LootableReward
import GameConstants
import FX
import Orders
import LootableComponent
import ColorUtility
import SurvivorJobs
import WeightedSet
import Survivors

WeightedSet<SurvivorJobDefinition> g_weightedSurvivorJobSet

// ============================================================================
public class LootableSurvivorReward implements ILootableReward

  // --------------------------------------------------------------------------
  override function getStopsRetrigger() returns bool
    return true

  // --------------------------------------------------------------------------
  override function giveReward(LootableComponent lootable, unit looter) returns bool
    spawnSurvivor(lootable, looter)
    return true

  // --------------------------------------------------------------------------
  function spawnSurvivor(LootableComponent lootable, unit looter)
    let lootableUnit = lootable.getOwnerUnit()
    
    let survivor = SurvivorUtility.spawnSurvivorWithRandomJob(PLAYER_VILLAGERS, lootableUnit.getPos(), g_weightedSurvivorJobSet)

    survivor.issuePointOrderById(OrderIds.move, looter.getPos())

    FX.createFoundSurvivorTag(lootableUnit.getPos(), lootableUnit.getOwner())
    
    let job = getJobDefinitionForUnitType(survivor.getTypeId())

    lootable.displayLootRewardText(
      looter.getOwner(),
      "Found {0} {1}!".format(
        job.getTitle(survivor.getTypeId()).colorize(Colors.gold),
        survivor.getProperName()))

// ============================================================================
init
  
  g_weightedSurvivorJobSet = new WeightedSet<SurvivorJobDefinition>()
    ..add(SurvivorJobs.none, 50)
    ..add(SurvivorJobs.builder, 5)
    ..add(SurvivorJobs.militia, 3)
    ..add(SurvivorJobs.spearman, 3)
    ..add(SurvivorJobs.priest, 3)
    ..add(SurvivorJobs.marksman, 1)
    ..add(SurvivorJobs.acolyte, 1)
    // ..add(SurvivorJobs.engineer, 1)