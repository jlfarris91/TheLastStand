package LootableItemReward
import LootableReward
import MainItemLibrary
import FX
import DisplayTextToPlayer
import LootableComponent
import ColorUtility
import UnitMetadata
import LooterComponent

// ============================================================================
public class LootableItemReward implements ILootableReward
  private ItemChances m_itemChances

  // --------------------------------------------------------------------------
  override function getStopsRetrigger() returns bool
    return false

  // --------------------------------------------------------------------------
  function getItemChances() returns ItemChances
    return m_itemChances

  // --------------------------------------------------------------------------
  function setItemChances(ItemChances chances)
    m_itemChances = chances

  // --------------------------------------------------------------------------
  override function giveReward(LootableComponent lootable, unit looter)

    var itemChances = m_itemChances

    // Treasure Hunter's Pendant increases rare item chances
    let metadata = looter.getMetadata()
    if (metadata != null)
      let comp = metadata.getLooterComponent()
      if (comp != null and comp.getEnabled() and comp.getOverrideItemChances())
        itemChances = comp.getItemChances()
        displayMessageToPlayer(looter.getOwner(), "Treasure Hunter's Pendant!".colorize(Colors.lightBlue))

    let itm = g_MainItemLibrary.giveRandomItemToUnit(looter, itemChances)

    if (itm == null)
      Log.error("LootableItemReward", "giveReward", "", "No item could be found in main item library")
      return

    let itemSet = g_MainItemLibrary.getOwningSet(itm.getTypeId())
    if (itemSet == null)
      Log.error("LootableItemReward", "giveReward", "", "Could not find matching item set for item {0}".format(itm.getTypeId().toString()))
      return

    FX.createFoundItemTag(looter.getPos(), looter.getOwner())
    lootable.displayLootRewardText(looter.getOwner(),
      "Found {0} item {1}!".format(
        itemSet.getName().colorize(itemSet.getColor()),
        itm.getName().colorize(Colors.gold)))