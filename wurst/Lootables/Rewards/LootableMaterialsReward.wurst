package LootableMaterialsReward
import LootableReward
import HumanPlayerMetadata
import FX
import ErrorHandling
import LootableComponent
import ColorUtility

// ============================================================================
public class LootableMaterialsReward implements ILootableReward
  private int _minMaterials
  private int _maxMaterials

  // --------------------------------------------------------------------------
  override function getStopsRetrigger() returns bool
    return false

  // --------------------------------------------------------------------------
  function getMinMaterials() returns int
    return _minMaterials

  // --------------------------------------------------------------------------
  function setMinMaterials(int materials)
    if (materials <= 0)
      error("Argument 'materials' must be greater than 0")
    _minMaterials = materials

  // --------------------------------------------------------------------------
  function getMaxMaterials() returns int
    return _maxMaterials

  // --------------------------------------------------------------------------
  function setMaxMaterials(int materials)
    if (materials <= 0)
      error("Argument 'materials' must be greater than 0")
    _maxMaterials = materials

  // --------------------------------------------------------------------------
  override function giveReward(LootableComponent lootable, unit looter)
    let mats = GetRandomInt(_minMaterials, _maxMaterials)
    let owner = looter.getOwnerMetadata() castTo HumanPlayerMetadata
    owner.giveMaterials(mats)
    
    FX.createFoundMaterialsTag(looter.getPos(), mats, owner.getPlayer())
    FX.createFoundMaterialsEffect(looter.getPos(), owner.getPlayer())
    
    lootable.displayLootRewardText(
      looter.getOwner(),
      "Found {0} materials!".format(mats.toString().colorize(Colors.lumber)))