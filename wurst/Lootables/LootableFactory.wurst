package LootableFactory
import LootableTypes
import UnitMetadata
import initlater Lootables
import MainItemLibrary
import LootableGoldReward
import Range
import LootableComponent
import HashList
import Math
import ObjEditingCommons
import UnitExtensions
import UnitModifiers

constant ItemChances g_smallLootableItemChances_Start = ItemChances(64.0, 24.0, 8.0, 2.0)
constant ItemChances g_smallLootableItemChances_End = ItemChances(36.0, 32.0, 12.0, 6.0)

constant ItemChances g_mediumLootableItemChances_Start = ItemChances(60.0, 32.0, 14.0, 4.0)
constant ItemChances g_mediumLootableItemChances_End = ItemChances(32.0, 32.0, 18.0, 8.0)

constant ItemChances g_largeLootableItemChances_Start = ItemChances(56.0, 40.0, 20.0, 6.0)
constant ItemChances g_largeLootableItemChances_End = ItemChances(28.0, 32.0, 24.0, 10.0)

HashList<int> g_smallLootables = new HashList<int>()
HashList<int> g_mediumLootables = new HashList<int>()
HashList<int> g_largeLootables = new HashList<int>()

// ============================================================================
public class LootableFactory implements IUnitMetadataFactory

  // --------------------------------------------------------------------------
  override function createUnit(IUnitMetadata metadata) returns bool
    let u = metadata.getUnit()
    let id = u.getTypeId()

    if (g_smallLootables.has(id))
      createSmallLootable(metadata)
      return true

    if (g_mediumLootables.has(id))
      createMediumLootable(metadata)
      return true

    if (g_largeLootables.has(id))
      createLargeLootable(metadata)
      return true

    return false  

  // --------------------------------------------------------------------------
  private function createSmallLootable(IUnitMetadata metadata)
    let lootable = metadata.getOrAddLootableComponent()
    ..setSearchDuration(5.0)
    ..setChanceToRetrigger(0.01)

    let goldRewardStart = rangeInt(1,1)
    let goldRewardEnd = rangeInt(1, 1)
    let goldReward = new LootableGoldReward(goldRewardStart, goldRewardEnd)

    let materialsRewardStart = rangeInt(20, 50)
    let materialsRewardEnd = rangeInt(60, 150)
    let materialsReward = new LootableMaterialsReward(materialsRewardStart, materialsRewardEnd)
    
    let itemReward = new LootableItemReward(g_smallLootableItemChances_Start, g_smallLootableItemChances_End)
    
    lootable.getRewardsSet()
    ..add(goldReward, 5)
    ..add(materialsReward, 80)
    ..add(itemReward, 15)

  // --------------------------------------------------------------------------
  private function createMediumLootable(IUnitMetadata metadata)
  
    let lootable = metadata.getOrAddLootableComponent()
    ..setSearchDuration(10.0)
    ..setChanceToRetrigger(0.05)

    let goldRewardStart = rangeInt(1, 2)
    let goldRewardEnd = rangeInt(2, 2)
    let goldReward = new LootableGoldReward(goldRewardStart, goldRewardEnd)

    let materialsRewardStart = rangeInt(40, 100)
    let materialsRewardEnd = rangeInt(120, 300)
    let materialsReward = new LootableMaterialsReward(materialsRewardStart, materialsRewardEnd)

    let itemReward = new LootableItemReward(g_mediumLootableItemChances_Start, g_mediumLootableItemChances_End)

    let survivorReward = new LootableSurvivorReward()

    let zombieReward = new LootableZombieReward()
    ..setMinZombies(4)
    ..setMaxZombies(8)
    ..setItemChances(g_mediumLootableItemChances_Start, g_mediumLootableItemChances_End)
    ..setUnitModifier() (unit u, real t) ->
      u.setMaxHPandHP(lerpInt(60, 1000, t))
      u.setArmor(lerp(0.0, 2.0, t))
      u.setDamageRange(0, lerp(rangeInt(8, 12), rangeInt(60, 120), t))
      u.setMoveSpeed(lerp(100.0, 200.0, t))
      u.setDefenseType(ArmorType.Unarmored)
      u.awardLumberOnDeath(lerp(materialsRewardStart, materialsRewardEnd, t) / 8.0, 1.0)
    
    lootable.getRewardsSet()
    ..add(goldReward, 5)
    ..add(materialsReward, 70)
    ..add(itemReward, 15)
    ..add(survivorReward, 5)
    ..add(zombieReward, 5)

  // --------------------------------------------------------------------------
  private function createLargeLootable(IUnitMetadata metadata)
    
    let lootable = metadata.getOrAddLootableComponent()
    ..setSearchDuration(20.0)
    ..setChanceToRetrigger(0.1)

    let goldRewardStart = rangeInt(1, 3)
    let goldRewardEnd = rangeInt(2, 3)
    let goldReward = new LootableGoldReward(goldRewardStart, goldRewardEnd)

    let materialsRewardStart = rangeInt(60, 150)
    let materialsRewardEnd = rangeInt(180, 450)
    let materialsReward = new LootableMaterialsReward(materialsRewardStart, materialsRewardEnd)

    let itemReward = new LootableItemReward(g_largeLootableItemChances_Start, g_largeLootableItemChances_End)

    let survivorReward = new LootableSurvivorReward()

    let zombieReward = new LootableZombieReward()
    ..setMinZombies(10)
    ..setMaxZombies(15)
    ..setItemChances(g_largeLootableItemChances_Start, g_largeLootableItemChances_End)
    ..setUnitModifier() (unit u, real t) ->
      u.setMaxHPandHP(lerpInt(60, 1000, t))
      u.setArmor(lerp(0.0, 2.0, t))
      u.setDamageRange(0, lerp(rangeInt(8, 12), rangeInt(60, 120), t))
      u.setMoveSpeed(lerp(100.0, 200.0, t))
      u.setDefenseType(ArmorType.Unarmored)
      u.awardLumberOnDeath(lerp(materialsRewardStart, materialsRewardEnd, t) / 15.0, 1.0)
    
    lootable.getRewardsSet()
    ..add(goldReward, 5)
    ..add(materialsReward, 60)
    ..add(itemReward, 20)
    ..add(survivorReward, 5)
    ..add(zombieReward, 10)

// ============================================================================
init
  g_smallLootables.add(
    UNIT_ID_LOOTABLE_BARREL,
    UNIT_ID_LOOTABLE_CART,
    UNIT_ID_LOOTABLE_CRATES,
    UNIT_ID_LOOTABLE_HAY,
    UNIT_ID_LOOTABLE_JUNK_1,
    UNIT_ID_LOOTABLE_JUNK_2,
    UNIT_ID_LOOTABLE_MARKET_BAUBLES,
    UNIT_ID_LOOTABLE_MARKET_MINECART,
    UNIT_ID_LOOTABLE_MARKET_STALL,
    UNIT_ID_LOOTABLE_MARKET_TABLE,
    UNIT_ID_LOOTABLE_TENT
  )

  g_mediumLootables.add(
    UNIT_ID_LOOTABLE_BARN,
    UNIT_ID_LOOTABLE_BUILDING_HORIZONTAL_BLUE,
    UNIT_ID_LOOTABLE_BUILDING_HORIZONTAL_GREEN,
    UNIT_ID_LOOTABLE_BUILDING_HORIZONTAL_RED,
    UNIT_ID_LOOTABLE_BUILDING_GRANARY,
    UNIT_ID_LOOTABLE_HOUSE_LARGE_BLUE,
    UNIT_ID_LOOTABLE_HOUSE_LARGE_RED,
    UNIT_ID_LOOTABLE_HOUSE_SMALL_GREEN,
    UNIT_ID_LOOTABLE_MARKET,
    UNIT_ID_LOOTABLE_TOWER,
    UNIT_ID_LOOTABLE_WINDMILL
  )

  g_largeLootables.add(
    UNIT_ID_LOOTABLE_BREWERY,
    UNIT_ID_LOOTABLE_BUILDING_CHAPEL,
    UNIT_ID_LOOTABLE_BUILDING_LARGE_HORIZONTAL_GREEN,
    UNIT_ID_LOOTABLE_BUILDING_LARGE_VERTICAL_PURPLE,
    UNIT_ID_LOOTABLE_CATHEDRAL,
    UNIT_ID_LOOTABLE_INN,
    UNIT_ID_LOOTABLE_MINE,
    UNIT_ID_LOOTABLE_SHIPYARD,
    UNIT_ID_LOOTABLE_TAVERN
  )