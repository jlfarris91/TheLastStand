package LootableFactory
import LootableTypes
import UnitMetadata
import initlater Lootables
import MainItemLibrary
import LootableGoldReward
import Range
import LootableComponent
import HashList
import UnitModifier
import SpawnWaveDefinitionExtensions
import Math
import ObjEditingCommons
import ZombieUnitModifier

constant ItemChances g_smallLootableItemChances = ItemChances(64.0, 24.0, 8.0, 1.0)
constant ItemChances g_mediumLootableItemChances = ItemChances(32.0, 32.0, 16.0, 1.0)
constant ItemChances g_largeLootableItemChances = ItemChances(8.0, 32.0, 24.0, 4.0)

HashList<int> g_smallLootables = new HashList<int>()
HashList<int> g_mediumLootables = new HashList<int>()
HashList<int> g_largeLootables = new HashList<int>()

// ============================================================================
public class LootableFactory implements IUnitMetadataFactory

  // --------------------------------------------------------------------------
  override function createUnit(unit u) returns IUnitMetadata
    let id = u.getTypeId()

    if (g_smallLootables.has(id))
      return createSmallLootable()

    if (g_mediumLootables.has(id))
      return createMediumLootable()

    if (g_largeLootables.has(id))
      return createLargeLootable()

    return null    

  // --------------------------------------------------------------------------
  private function createSmallLootable() returns UnitMetadata
    let metadata = new UnitMetadata()
    let lootable = metadata.getOrAddLootableComponent()
    ..setSearchDuration(5.0)
    ..setChanceToRetrigger(0.05)

    let goldReward = new LootableGoldReward(rangeInt(1,1))

    let materialsReward = new LootableMaterialsReward()
    ..setMinMaterials(20)
    ..setMaxMaterials(50)

    let itemReward = new LootableItemReward()
    ..setItemChances(g_smallLootableItemChances)
    
    lootable.getRewardsSet()
    ..add(goldReward, 1.0)
    ..add(materialsReward, 5.0)
    ..add(itemReward, 2.0)

    return metadata

  // --------------------------------------------------------------------------
  private function createMediumLootable() returns UnitMetadata
    let metadata = new UnitMetadata()
  
    let lootable = metadata.getOrAddLootableComponent()
    ..setSearchDuration(12.0)
    ..setChanceToRetrigger(0.15)

    let goldReward = new LootableGoldReward(rangeInt(2,4))

    let materialsReward = new LootableMaterialsReward()
    ..setMinMaterials(40)
    ..setMaxMaterials(80)

    let itemReward = new LootableItemReward()
    ..setItemChances(g_mediumLootableItemChances)

    let survivorReward = new LootableSurvivorReward()

    let zombieModifier = new AggregateUnitModifier()
    zombieModifier.setMaxHp(t -> lerpInt(120, 2000, t))
    zombieModifier.setArmor(t -> lerp(0.0, 5.0, t))
    zombieModifier.setDamageRange(0, t -> lerp(rangeInt(8, 12), rangeInt(240, 260), t))
    zombieModifier.setMovementSpeed((real t) -> lerp(100.0, 250.0, t))
    zombieModifier.setDefenseType(ArmorType.Unarmored)
    zombieModifier.grantLumberOnDeath(1.0, rangeInt(1,1))
    zombieModifier.add(new ZombieUnitModifier())

    let zombieReward = new LootableZombieReward()
    ..setMinZombies(4)
    ..setMaxZombies(8)
    ..setUnitModifier(zombieModifier)      
    
    lootable.getRewardsSet()
    ..add(goldReward, 10.0)
    ..add(materialsReward, 50.0)
    ..add(itemReward, 25.0)
    ..add(survivorReward, 5.0)
    ..add(zombieReward, 10.0)

    return metadata

  // --------------------------------------------------------------------------
  private function createLargeLootable() returns UnitMetadata
    let metadata = new UnitMetadata()
    
    let lootable = metadata.getOrAddLootableComponent()
    ..setSearchDuration(20.0)
    ..setChanceToRetrigger(0.3)

    let goldReward = new LootableGoldReward(rangeInt(3,5))

    let materialsReward = new LootableMaterialsReward()
    ..setMinMaterials(70)
    ..setMaxMaterials(120)

    let itemReward = new LootableItemReward()
    ..setItemChances(g_largeLootableItemChances)

    let survivorReward = new LootableSurvivorReward()

    let zombieModifier = new AggregateUnitModifier()
    zombieModifier.setMaxHp(t -> lerpInt(120, 2000, t))
    zombieModifier.setArmor(t -> lerp(0.0, 5.0, t))
    zombieModifier.setDamageRange(0, t -> lerp(rangeInt(8, 12), rangeInt(240, 260), t))
    zombieModifier.setMovementSpeed((real t) -> lerp(100.0, 250.0, t))
    zombieModifier.setDefenseType(ArmorType.Unarmored)
    zombieModifier.grantLumberOnDeath(1.0, rangeInt(1,1))
    zombieModifier.add(new ZombieUnitModifier())

    let zombieReward = new LootableZombieReward()
    ..setMinZombies(10)
    ..setMaxZombies(15)
    ..setUnitModifier(zombieModifier)
    
    lootable.getRewardsSet()
    ..add(goldReward, 1.0)
    ..add(materialsReward, 5.0)
    ..add(itemReward, 2.0)
    ..add(survivorReward, 5.0)
    ..add(zombieReward, 1.0)

    return metadata

// ============================================================================
init
  g_smallLootables.add(
    UNIT_ID_LOOTABLE_BARREL,
    UNIT_ID_LOOTABLE_CART,
    UNIT_ID_LOOTABLE_CRATES,
    UNIT_ID_LOOTABLE_HAY,
    UNIT_ID_LOOTABLE_JUNK_1,
    UNIT_ID_LOOTABLE_JUNK_2,
    UNIT_ID_LOOTABLE_MARKET_BAUBLES,
    UNIT_ID_LOOTABLE_MARKET_MINECART,
    UNIT_ID_LOOTABLE_MARKET_STALL,
    UNIT_ID_LOOTABLE_MARKET_TABLE,
    UNIT_ID_LOOTABLE_TENT
  )

  g_mediumLootables.add(
    UNIT_ID_LOOTABLE_BARN,
    UNIT_ID_LOOTABLE_BUILDING_HORIZONTAL_BLUE,
    UNIT_ID_LOOTABLE_BUILDING_HORIZONTAL_GREEN,
    UNIT_ID_LOOTABLE_BUILDING_HORIZONTAL_RED,
    UNIT_ID_LOOTABLE_BUILDING_GRANARY,
    UNIT_ID_LOOTABLE_HOUSE_LARGE_BLUE,
    UNIT_ID_LOOTABLE_HOUSE_LARGE_RED,
    UNIT_ID_LOOTABLE_HOUSE_SMALL_GREEN,
    UNIT_ID_LOOTABLE_MARKET,
    UNIT_ID_LOOTABLE_TOWER,
    UNIT_ID_LOOTABLE_WINDMILL
  )

  g_largeLootables.add(
    UNIT_ID_LOOTABLE_BREWERY,
    UNIT_ID_LOOTABLE_BUILDING_CHAPEL,
    UNIT_ID_LOOTABLE_BUILDING_LARGE_HORIZONTAL_GREEN,
    UNIT_ID_LOOTABLE_BUILDING_LARGE_VERTICAL_PURPLE,
    UNIT_ID_LOOTABLE_CATHEDRAL,
    UNIT_ID_LOOTABLE_INN,
    UNIT_ID_LOOTABLE_MINE,
    UNIT_ID_LOOTABLE_SHIPYARD,
    UNIT_ID_LOOTABLE_TAVERN
  )