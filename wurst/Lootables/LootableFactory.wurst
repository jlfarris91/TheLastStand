package LootableFactory
import UnitMetadata
import Lootables
import HashList
import GroupExtensions
import TlsItemLibrary
import Deck
import SpawnUndeadUnitDirector
import SpawnCards
import GameInstance

import LootLumberCard
import LootGoldCard
import LootItemCard
import LootSurvivorCard
import LootUndeadCard
import LootablesItemLibrary

HashList<int> g_smallLootables = new HashList<int>()
HashList<int> g_mediumLootables = new HashList<int>()
HashList<int> g_largeLootables = new HashList<int>()

Deck g_smallLootableDeck
Deck g_mediumLootableDeck
Deck g_largeLootableDeck
Deck g_cageLootableDeck

group g_spawnOverrides

constant int LOOT_CARD_COST_SURVIVOR = 15

// ============================================================================
public class LootableUnitComponentGenerator implements IUnitComponentGenerator

  // --------------------------------------------------------------------------
  override function generateComponents(IUnitMetadata metadata) returns bool
    let u = metadata.getUnit()
    let id = u.getTypeId()

    if (id == UNIT_ID_LOOTABLE_CAGE)
      createCageLootable(metadata)
      return true

    if (g_smallLootables.has(id))
      createSmallLootable(metadata)
      return true

    if (g_mediumLootables.has(id))
      createMediumLootable(metadata)
      return true

    if (g_largeLootables.has(id))
      createLargeLootable(metadata)
      return true

    return false  

  // --------------------------------------------------------------------------
  private function createSmallLootable(IUnitMetadata metadata)
    
    let lootableComponent = new LootableComponent(metadata)
    ..setSearchDurationPerLoot(5.0)
    ..setMaxLootCount(1)

    lootableComponent.getDirector()
    ..setDeck(g_smallLootableDeck)
    ..setCreditMultiplier(1.0)
    ..setCreditsOnActivation(10)

    metadata.addComponent(lootableComponent)

    assignClosestSpawnOverride(lootableComponent)

  // --------------------------------------------------------------------------
  private function createMediumLootable(IUnitMetadata metadata)
  
    let lootableComponent = new LootableComponent(metadata)
    ..setSearchDurationPerLoot(5.0)
    ..setMaxLootCount(2)

    lootableComponent.getDirector()
    ..setDeck(g_mediumLootableDeck)
    ..setCreditMultiplier(1.0)
    ..setCreditsOnActivation(20)

    metadata.addComponent(lootableComponent)

    assignClosestSpawnOverride(lootableComponent)

  // --------------------------------------------------------------------------
  private function createLargeLootable(IUnitMetadata metadata)
    
    let lootableComponent = new LootableComponent(metadata)
    ..setSearchDurationPerLoot(5.0)
    ..setMaxLootCount(3)

    lootableComponent.getDirector()
    ..setDeck(g_largeLootableDeck)
    ..setCreditMultiplier(1.0)
    ..setCreditsOnActivation(30)

    metadata.addComponent(lootableComponent)

    assignClosestSpawnOverride(lootableComponent)

  // --------------------------------------------------------------------------
  private function createCageLootable(IUnitMetadata metadata)

    let lootableComponent = new LootableComponent(metadata)
    ..setSearchDurationPerLoot(10.0)
    ..setMaxLootCount(1)
    ..setDestroyOnLoot(true)
    
    lootableComponent.getDirector()
    ..setDeck(g_cageLootableDeck)
    ..setCreditMultiplier(0.0)
    ..setCreditsOnActivation(() -> LOOT_CARD_COST_SURVIVOR + g_GameInstance.getWorldDifficultyCoeff())

    metadata.addComponent(lootableComponent)

    assignClosestSpawnOverride(lootableComponent)

// ============================================================================
function assignClosestSpawnOverride(LootableComponent comp)
  let pos = comp.getOwnerUnit().getPos()

  let closestSpawnOverride = g_spawnOverrides.getClosestUnit(pos, 512.0)
  if (closestSpawnOverride != null)
    comp.setSpawnPosition(closestSpawnOverride.getPos())
    g_spawnOverrides.removeUnit(closestSpawnOverride)
    closestSpawnOverride.remove()

// ============================================================================
init
  g_smallLootables.add(
    UNIT_ID_LOOTABLE_BARREL,
    UNIT_ID_LOOTABLE_CART,
    UNIT_ID_LOOTABLE_CRATES,
    UNIT_ID_LOOTABLE_HAY,
    UNIT_ID_LOOTABLE_JUNK_1,
    UNIT_ID_LOOTABLE_JUNK_2,
    UNIT_ID_LOOTABLE_MARKET_BAUBLES,
    UNIT_ID_LOOTABLE_MARKET_MINECART,
    UNIT_ID_LOOTABLE_MARKET_STALL,
    UNIT_ID_LOOTABLE_MARKET_TABLE,
    UNIT_ID_LOOTABLE_TENT
  )

  g_mediumLootables.add(
    UNIT_ID_LOOTABLE_BARN,
    UNIT_ID_LOOTABLE_BUILDING_HORIZONTAL_BLUE,
    UNIT_ID_LOOTABLE_BUILDING_HORIZONTAL_GREEN,
    UNIT_ID_LOOTABLE_BUILDING_HORIZONTAL_RED,
    UNIT_ID_LOOTABLE_BUILDING_GRANARY,
    UNIT_ID_LOOTABLE_HOUSE_LARGE_BLUE,
    UNIT_ID_LOOTABLE_HOUSE_LARGE_RED,
    UNIT_ID_LOOTABLE_HOUSE_SMALL_GREEN,
    UNIT_ID_LOOTABLE_MARKET,
    UNIT_ID_LOOTABLE_TOWER,
    UNIT_ID_LOOTABLE_WINDMILL
  )

  g_largeLootables.add(
    UNIT_ID_LOOTABLE_BREWERY,
    UNIT_ID_LOOTABLE_BUILDING_CHAPEL,
    UNIT_ID_LOOTABLE_BUILDING_LARGE_HORIZONTAL_GREEN,
    UNIT_ID_LOOTABLE_BUILDING_LARGE_VERTICAL_PURPLE,
    UNIT_ID_LOOTABLE_CATHEDRAL,
    UNIT_ID_LOOTABLE_INN,
    UNIT_ID_LOOTABLE_MINE,
    UNIT_ID_LOOTABLE_SHIPYARD,
    UNIT_ID_LOOTABLE_TAVERN
  )

  g_spawnOverrides = CreateGroup()
  g_spawnOverrides.enumUnitsOfType(UNIT_ID_LOOTABLE_SPAWN_OVERRIDE, null)

  let zombieCard = new SpawnCard(SpawnDefinitions.zombies)                  ..acquire() ..setCost(3)  ..setWeight(3)
  let skeletonArchersCard = new SpawnCard(SpawnDefinitions.skeletonArchers) ..acquire() ..setCost(10) ..setWeight(2)

  let tier0SpawnDirectorDeck = new Deck()..acquire()
  tier0SpawnDirectorDeck.addDefaultCategory()
  ..addCard(zombieCard)

  let tier1SpawnDirectorDeck = new Deck()..acquire()
  tier1SpawnDirectorDeck.addDefaultCategory()
  ..addCard(zombieCard)

  let tier2SpawnDirectorDeck = new Deck()..acquire()
  tier2SpawnDirectorDeck.addDefaultCategory()
  ..addCard(zombieCard)
  ..addCard(skeletonArchersCard)

  let tier3SpawnDirectorDeck = new Deck()..acquire()
  tier3SpawnDirectorDeck.addDefaultCategory()
  ..addCard(zombieCard)
  ..addCard(skeletonArchersCard)

  g_smallLootableDeck = new Deck()..acquire()
  g_smallLootableDeck.addDefaultCategory()
  ..addCard(new LootLumberCard("lumber", 50)  ..setCost(3)  ..setWeight(9))
  ..addCard(new LootItemCard("item")          ..setCost(12)  ..setWeight(3))
  ..addCard(new LootGoldCard("gold")          ..setCost(30) ..setWeight(1))

  g_mediumLootableDeck = new Deck()..acquire()
  g_mediumLootableDeck.addDefaultCategory()
  ..addCard(new LootLumberCard("lumber", 50)  ..setCost(3)  ..setWeight(12))
  ..addCard(new LootItemCard("item")          ..setCost(12)  ..setWeight(4))
  ..addCard(new LootGoldCard("gold")          ..setCost(30) ..setWeight(2))
  ..addCard(new LootSurvivorCard("survivor")  ..setCost(30) ..setWeight(2))
  ..addCard(new LootUndeadCard("undead_med")  ..setCost(20) ..setWeight(2)
    ..setCreditsOnActivation(0, 30)
    ..setCreditsOnActivation(1, 45)
    ..setCreditsOnActivation(2, 60)
    ..setCreditsOnActivation(3, 75)
    ..setDeck(0, tier0SpawnDirectorDeck)
    ..setDeck(1, tier1SpawnDirectorDeck)
    ..setDeck(2, tier2SpawnDirectorDeck)
    ..setDeck(3, tier3SpawnDirectorDeck)
    ..setItemSet(0, g_LootableItemLibrary.commonSet)
    ..setItemSet(1, g_LootableItemLibrary.rareSet)
    ..setItemSet(2, g_LootableItemLibrary.epicSet)
    ..setItemSet(3, g_LootableItemLibrary.legendarySet))

  g_largeLootableDeck = new Deck()..acquire()
  g_largeLootableDeck.addDefaultCategory()
  ..addCard(new LootLumberCard("lumber", 50)  ..setCost(3)  ..setWeight(12))
  ..addCard(new LootItemCard("item")          ..setCost(12)  ..setWeight(4))
  ..addCard(new LootGoldCard("gold")          ..setCost(30) ..setWeight(2))
  ..addCard(new LootSurvivorCard("survivor")  ..setCost(30) ..setWeight(2))
  ..addCard(new LootUndeadCard("undead_lrg")  ..setCost(20) ..setWeight(2)
    ..setCreditsOnActivation(0, 30)
    ..setCreditsOnActivation(1, 45)
    ..setCreditsOnActivation(2, 60)
    ..setCreditsOnActivation(3, 75)
    ..setDeck(0, tier0SpawnDirectorDeck)
    ..setDeck(1, tier1SpawnDirectorDeck)
    ..setDeck(2, tier2SpawnDirectorDeck)
    ..setDeck(3, tier3SpawnDirectorDeck)
    ..setItemSet(0, g_LootableItemLibrary.commonSet)
    ..setItemSet(1, g_LootableItemLibrary.rareSet)
    ..setItemSet(2, g_LootableItemLibrary.epicSet)
    ..setItemSet(3, g_LootableItemLibrary.legendarySet))

  g_cageLootableDeck = new Deck()..acquire()
  g_cageLootableDeck.addDefaultCategory()
  ..addCard(new LootSurvivorCard("survivor")  ..setCost(50) ..setWeight(1))