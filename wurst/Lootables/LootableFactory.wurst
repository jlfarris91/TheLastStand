package LootableFactory
import LootableTypes
import UnitMetadata
import initlater Lootables
import MainItemLibrary

constant ItemChances g_defaultItemChances = ItemChances(83.0, 12.0, 4.0, 1.0)

// ============================================================================
public class LootableFactory implements IUnitMetadataFactory

  // --------------------------------------------------------------------------
  override function createUnit(unit u) returns IUnitMetadata
    let id = u.getTypeId()

    if (id == UNIT_ID_LOOTABLE_BARREL or
        id == UNIT_ID_LOOTABLE_CART or
        id == UNIT_ID_LOOTABLE_CRATES or
        id == UNIT_ID_LOOTABLE_JUNK_1 or
        id == UNIT_ID_LOOTABLE_JUNK_2)
      return createLootableUnit(u)

    if (id == UNIT_ID_LOOTABLE_HOUSE_SMALL_GREEN or
        id == UNIT_ID_LOOTABLE_HOUSE_LARGE_RED or
        id == UNIT_ID_LOOTABLE_HOUSE_LARGE_BLUE)
      return createLootableHouse(u)

    if (id == UNIT_ID_LOOTABLE_BUILDING_VERTICAL_RED or
        id == UNIT_ID_LOOTABLE_BUILDING_VERTICAL_GREEN or
        id == UNIT_ID_LOOTABLE_BUILDING_VERTICAL_BLUE or
        id == UNIT_ID_LOOTABLE_BUILDING_HORIZONTAL_RED or
        id == UNIT_ID_LOOTABLE_BUILDING_HORIZONTAL_GREEN or
        id == UNIT_ID_LOOTABLE_BUILDING_HORIZONTAL_BLUE or
        id == UNIT_ID_LOOTABLE_BUILDING_DIAGONAL_RED or
        id == UNIT_ID_LOOTABLE_BUILDING_DIAGONAL_GREEN or
        id == UNIT_ID_LOOTABLE_BUILDING_DIAGONAL_BLUE or
        id == UNIT_ID_LOOTABLE_TENT or
        id == UNIT_ID_LOOTABLE_BARN)
      return createLootableBuilding(u)

    if (id == UNIT_ID_LOOTABLE_BUILDING_LARGE_HORIZONTAL_GREEN or
        id == UNIT_ID_LOOTABLE_BUILDING_LARGE_VERTICAL_PURPLE or
        id == UNIT_ID_LOOTABLE_INN or
        id == UNIT_ID_LOOTABLE_TAVERN)
      return createLootableBuildingLarge(u)

    return null    

  // --------------------------------------------------------------------------
  private function createLootableUnit(unit u) returns LootableUnit
    let lootable = new LootableUnit(u)
    let rewards = lootable.getRewardsSet()

    let materialsReward = new LootableMaterialsReward()
    ..setMinMaterials(6)
    ..setMaxMaterials(12)
    rewards.add(materialsReward, 40.0)

    let itemReward = new LootableItemReward()
    ..setItemChances(g_defaultItemChances)
    rewards.add(itemReward, 20.0)

    return lootable

  // --------------------------------------------------------------------------
  private function createLootableHouse(unit u) returns LootableUnit
    let lootable = new EnterableLootable(u)
    ..setSearchDuration(4.0)

    let materialsReward = new LootableMaterialsReward()
    ..setMinMaterials(10)
    ..setMaxMaterials(30)

    let itemReward = new LootableItemReward()
    ..setItemChances(g_defaultItemChances)

    let survivorReward = new LootableSurvivorReward()

    let zombieReward = new LootableZombieReward()
    ..setMinZombies(1)
    ..setMaxZombies(3)
    
    let rewards = lootable.getRewardsSet()
    rewards.add(materialsReward, 50.0)
    rewards.add(itemReward, 20.0)
    rewards.add(survivorReward, 15.0)
    rewards.add(zombieReward, 15.0)

    return lootable

  // --------------------------------------------------------------------------
  private function createLootableBuilding(unit u) returns LootableUnit

    let lootable = new EnterableLootable(u)
    ..setSearchDuration(4.0)

    let materialsReward = new LootableMaterialsReward()
    ..setMinMaterials(10)
    ..setMaxMaterials(30)

    let itemReward = new LootableItemReward()
    ..setItemChances(g_defaultItemChances)

    let survivorReward = new LootableSurvivorReward()

    let zombieReward = new LootableZombieReward()
    ..setMinZombies(2)
    ..setMaxZombies(4)
    
    let rewards = lootable.getRewardsSet()
    rewards.add(materialsReward, 50.0)
    rewards.add(itemReward, 20.0)
    rewards.add(survivorReward, 15.0)
    rewards.add(zombieReward, 15.0)

    return lootable

  // --------------------------------------------------------------------------
  private function createLootableBuildingLarge(unit u) returns LootableUnit
    let lootable = new EnterableLootable(u)
    ..setSearchDuration(6.0)

    let materialsReward = new LootableMaterialsReward()
    ..setMinMaterials(30)
    ..setMaxMaterials(50)

    let itemReward = new LootableItemReward()
    ..setItemChances(g_defaultItemChances)

    let survivorReward = new LootableSurvivorReward()

    let zombieReward = new LootableZombieReward()
    ..setMinZombies(3)
    ..setMaxZombies(5)
    
    let rewards = lootable.getRewardsSet()
    rewards.add(materialsReward, 50.0)
    rewards.add(itemReward, 20.0)
    rewards.add(survivorReward, 15.0)
    rewards.add(zombieReward, 15.0)

    return lootable