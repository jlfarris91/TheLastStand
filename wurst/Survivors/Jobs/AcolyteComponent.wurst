package AcolyteComponent
import SurvivorJobComponent
import UnitMetadata
import SurvivorJobData
import SurvivorJobs
import SurvivorComponent

// ============================================================================
public class AcolyteJobComponent extends SurvivorJobComponent
  
  // --------------------------------------------------------------------------
  construct(IUnitMetadata owner)
    super(owner)

  // --------------------------------------------------------------------------
  override function getTypeId() returns int
    return AcolyteJobComponent.typeId

  // --------------------------------------------------------------------------
  override function loadJobData(SurvivorJobData jobData)
    jobData.setExperience(getTotalXP())
    super.loadJobData(jobData)

  // --------------------------------------------------------------------------
  private function getTotalXP() returns int
    let survivorComp = getOwner().getSurvivorComponent()
    var totalXP = 0
    for otherJobDef in g_allJobDefinitions
      if (otherJobDef != SurvivorJobs.acolyte)
        let otherJobData = survivorComp.getJobData(otherJobDef)
        if (otherJobData != null)
          totalXP += otherJobData.getExperience()
    return totalXP

// ============================================================================
public function IUnitMetadata.getAcolyteJobComponent() returns AcolyteJobComponent
  return this.getComponent(typeInfo(AcolyteJobComponent.typeId)) castTo AcolyteJobComponent

// ============================================================================
public function IUnitMetadata.getOrAddAcolyteJobComponent() returns AcolyteJobComponent
  var component = this.getAcolyteJobComponent()
  if (component == null)
    component = this.addComponent(new AcolyteJobComponent(this)) castTo AcolyteJobComponent
  return component