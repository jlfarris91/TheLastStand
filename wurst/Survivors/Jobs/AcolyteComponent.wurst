package AcolyteComponent
import SurvivorJobComponent
import UnitMetadata
import SurvivorJobs
import SurvivorComponent

// ============================================================================
public class AcolyteJobComponent extends SurvivorJobComponent
  
  // --------------------------------------------------------------------------
  construct(IUnitMetadata owner)
    super(owner)

  // --------------------------------------------------------------------------
  override function getJob() returns SurvivorJobDefinition
    return SurvivorJobs.acolyte

  // --------------------------------------------------------------------------
  override function loadJobData()
    setExperience(getTotalXP())
    super.loadJobData()

  // --------------------------------------------------------------------------
  private function getTotalXP() returns int
    let survivorComp = getOwner().getSurvivorComponent()
    var totalXP = 0
    for otherJobDef in g_allJobDefinitions
      if (otherJobDef != SurvivorJobs.acolyte)
        let otherJobData = survivorComp.getJobComponent(otherJobDef)
        if (otherJobData != null)
          totalXP += otherJobData.getExperience()
    return totalXP

// ============================================================================
public function IUnitMetadata.getAcolyteJobComponent() returns AcolyteJobComponent
  return this.getComponent(AcolyteJobComponent.typeId) castTo AcolyteJobComponent

// ============================================================================
public function IUnitMetadata.getOrAddAcolyteJobComponent() returns AcolyteJobComponent
  var component = this.getAcolyteJobComponent()
  if (component == null)
    component = this.addComponent(new AcolyteJobComponent(this), false) castTo AcolyteJobComponent
  return component

function onHeroLeveledUp()
  let leveledUnit = GetLevelingUnit()
  let survivor = leveledUnit.getSurvivorComponent()
  if (survivor == null)
    return
  let activeJobComp = survivor.getActiveJobComponent()
  if (activeJobComp != null)
    activeJobComp.onLevelChanged()

// ============================================================================
init
  SurvivorJobComponent.registerSurvivorJobComponentGetter(SurvivorJobs.acolyte, metadata -> metadata.getAcolyteJobComponent())
  SurvivorJobComponent.registerSurvivorJobComponentFactory(SurvivorJobs.acolyte, metadata -> metadata.getOrAddAcolyteJobComponent())