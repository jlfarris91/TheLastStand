package MarksmanJobComponent
import UnitMetadata
import SurvivorJobComponent
import RangedTargetXpReceieverComponent
import ExperienceComponent
import UnitPropertiesComponent
import SurvivorJobs

constant real BONUS_DAMAGE_TO_NORMALS_PERCENTAGE = 0.0
constant real BONUS_DAMAGE_TO_ELITES_PERCENTAGE = 10.0
constant real BONUS_DAMAGE_TO_BOSS_PERCENTAGE = 20.0
constant real BONUS_CRIT_CHANCE = 25.0
constant real BONUS_CRIT_MULT = 4.0

// ============================================================================
public class MarksmanJobComponent extends SurvivorJobComponent

  // --------------------------------------------------------------------------
  construct(IUnitMetadata owner)
    super(owner)

  // --------------------------------------------------------------------------
  override function getJob() returns SurvivorJobDefinition
    return SurvivorJobs.marksman

  // --------------------------------------------------------------------------
  protected override function onEnabled()
    super.onEnabled()
    getOwner().getOrAddRangedTargetXpRecieverComponent().setEnabled(true)
    getOwner().getOrAddExperienceComponent().setEnabled(true)

    let unitPropsComp = getOwner().getOrAddUnitPropertiesComponent()
    if (unitPropsComp != null)
      unitPropsComp.setNormalDamagePercentage(unitPropsComp.getNormalDamagePercentage() + BONUS_DAMAGE_TO_NORMALS_PERCENTAGE)
      unitPropsComp.setEliteDamagePercentage(unitPropsComp.getEliteDamagePercentage() + BONUS_DAMAGE_TO_ELITES_PERCENTAGE)
      unitPropsComp.setBossDamagePercentage(unitPropsComp.getBossDamagePercentage() + BONUS_DAMAGE_TO_ELITES_PERCENTAGE)
      unitPropsComp.setCritChancePercentage(unitPropsComp.getCritChancePercentage() + BONUS_CRIT_CHANCE)
      unitPropsComp.setCritDamageMultiplier(unitPropsComp.getCritDamageMultiplier() + BONUS_CRIT_MULT)

  // --------------------------------------------------------------------------
  protected override function onDisabled()
    super.onDisabled()

    let ownerUnit = getOwner()
    if (ownerUnit == null)
      return
    
    let rangedTargetXpReceieverComponent = ownerUnit.getRangedTargetXpRecieverComponent()
    if (rangedTargetXpReceieverComponent != null)
      rangedTargetXpReceieverComponent.setEnabled(false)

    let gainXpPerKillComponent = ownerUnit.getOrAddExperienceComponent()
    if (gainXpPerKillComponent != null)
      gainXpPerKillComponent.setEnabled(false)

    let unitPropsComp = getOwner().getOrAddUnitPropertiesComponent()
    if (unitPropsComp != null)
      unitPropsComp.setNormalDamagePercentage(unitPropsComp.getNormalDamagePercentage() - BONUS_DAMAGE_TO_NORMALS_PERCENTAGE)
      unitPropsComp.setEliteDamagePercentage(unitPropsComp.getEliteDamagePercentage() - BONUS_DAMAGE_TO_ELITES_PERCENTAGE)
      unitPropsComp.setBossDamagePercentage(unitPropsComp.getBossDamagePercentage() - BONUS_DAMAGE_TO_ELITES_PERCENTAGE)
      unitPropsComp.setCritChancePercentage(unitPropsComp.getCritChancePercentage() - BONUS_CRIT_CHANCE)
      unitPropsComp.setCritDamageMultiplier(unitPropsComp.getCritDamageMultiplier() - BONUS_CRIT_MULT)

// ============================================================================
public function IUnitMetadata.getMarksmanJobComponent() returns MarksmanJobComponent
  return this.getComponent(MarksmanJobComponent.typeId) castTo MarksmanJobComponent

// ============================================================================
public function IUnitMetadata.getOrAddMarksmanJobComponent() returns MarksmanJobComponent
  var component = this.getMarksmanJobComponent()
  if (component == null)
    component = this.addComponent(new MarksmanJobComponent(this), false) castTo MarksmanJobComponent
  return component

// ============================================================================
init
  SurvivorJobComponent.registerSurvivorJobComponentGetter(SurvivorJobs.marksman, metadata -> metadata.getMarksmanJobComponent())
  SurvivorJobComponent.registerSurvivorJobComponentFactory(SurvivorJobs.marksman, metadata -> metadata.getOrAddMarksmanJobComponent())