package MedicJobComponent
import SurvivorJobComponent
import UnitMetadata
import ExperienceComponent
import RangedTargetXpReceieverComponent
import TlsAbilityIds
import SurvivorJobs

// ============================================================================
public class MedicJobComponent extends SurvivorJobComponent
  
  // --------------------------------------------------------------------------
  construct(IUnitMetadata owner)
    super(owner)

  // --------------------------------------------------------------------------
  override function getJob() returns SurvivorJobDefinition
    return SurvivorJobs.priest

  // --------------------------------------------------------------------------
  protected override function onEnabled()
    super.onEnabled()
    
    getOwner().getOrAddRangedTargetXpRecieverComponent().setEnabled(true)
    getOwner().getOrAddExperienceComponent().setEnabled(true)

    updateAbilities()

  // --------------------------------------------------------------------------
  protected override function onDisabled()
    super.onDisabled()

    let owner = getOwner()
    if (owner == null)
      return
    
    let rangedTargetXpReceieverComponent = owner.getRangedTargetXpRecieverComponent()
    if (rangedTargetXpReceieverComponent != null)
      rangedTargetXpReceieverComponent.setEnabled(false)

    let gainXpPerKillComponent = owner.getOrAddExperienceComponent()
    if (gainXpPerKillComponent != null)
      gainXpPerKillComponent.setEnabled(false)

  // --------------------------------------------------------------------------
  override function onLevelChanged()
    super.onLevelChanged()
    updateAbilities()

  // --------------------------------------------------------------------------
  private function updateAbilities()
    let ownerUnit = getOwnerUnit()
    
    if (not ownerUnit.hasAbility(TlsAbilityIds.heal))
      ownerUnit.addAbility(TlsAbilityIds.heal)
    
    ownerUnit.setAbilityLevel(TlsAbilityIds.heal, ownerUnit.getLevel())

// ============================================================================
public function IUnitMetadata.getMedicJobComponent() returns MedicJobComponent
  return this.getComponent(MedicJobComponent.typeId) castTo MedicJobComponent

// ============================================================================
public function IUnitMetadata.getOrAddMedicJobComponent() returns MedicJobComponent
  var component = this.getMedicJobComponent()
  if (component == null)
    component = this.addComponent(new MedicJobComponent(this), false) castTo MedicJobComponent
  return component

// ============================================================================
init
  SurvivorJobComponent.registerSurvivorJobComponentGetter(SurvivorJobType.Priest, MedicJobComponent.typeId)
  SurvivorJobComponent.registerSurvivorJobComponentFactory(SurvivorJobType.Priest, metadata -> metadata.getOrAddMedicJobComponent())