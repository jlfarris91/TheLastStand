package MedicJobComponent
import SurvivorJobComponent
import UnitMetadata
import XpReceiverComponent
import RangedTargetXpReceieverComponent
import SurvivorJobData
import TlsAbilityIds


// ============================================================================
public class MedicJobComponent extends SurvivorJobComponent
  
  // --------------------------------------------------------------------------
  construct(IUnitMetadata owner)
    super(owner)

  // --------------------------------------------------------------------------
  override function getTypeId() returns int
    return MedicJobComponent.typeId

  // --------------------------------------------------------------------------
  protected override function onEnabled()
    super.onEnabled()
    
    getOwner().getOrAddRangedTargetXpRecieverComponent().setEnabled(true)
    getOwner().getOrAddXpReceiverComponent().setEnabled(true)

  // --------------------------------------------------------------------------
  protected override function onDisabled()
    super.onDisabled()

    let ownerUnit = getOwner()
    if (ownerUnit == null)
      return
    
    let rangedTargetXpReceieverComponent = ownerUnit.getRangedTargetXpRecieverComponent()
    if (rangedTargetXpReceieverComponent != null)
      rangedTargetXpReceieverComponent.setEnabled(false)

    let gainXpPerKillComponent = ownerUnit.getOrAddXpReceiverComponent()
    if (gainXpPerKillComponent != null)
      gainXpPerKillComponent.setEnabled(false)

 // --------------------------------------------------------------------------
  override function saveJobData(SurvivorJobData jobData)
    super.saveJobData(jobData)

    let ownerUnit = getOwnerUnit()

    if (ownerUnit.hasAbility(TlsAbilityIds.heal))
      jobData.addAbility(TlsAbilityIds.heal, ownerUnit.getAbilityLevel(TlsAbilityIds.heal))


// --------------------------------------------------------------------------
  override function onLevelChanged()
    super.onLevelChanged()
    let ownerUnit = getOwnerUnit()
    let ownerUnitLevel = ownerUnit.getLevel()

  // The unit's level will be 1 when it is upgraded, in that case ignore this
    if (ownerUnitLevel > 1)

     // Otherwise, increase the level of the ability
    if (ownerUnit.hasAbility(TlsAbilityIds.heal))
      ownerUnit.setAbilityLevel(TlsAbilityIds.heal, ownerUnit.getAbilityLevel(TlsAbilityIds.heal) + 1)


// ============================================================================
public function IUnitMetadata.getMedicJobComponent() returns MedicJobComponent
  return this.getComponent(typeInfo(MedicJobComponent.typeId)) castTo MedicJobComponent

// ============================================================================
public function IUnitMetadata.getOrAddMedicJobComponent() returns MedicJobComponent
  var component = this.getMedicJobComponent()
  if (component == null)
    component = this.addComponent(new MedicJobComponent(this)) castTo MedicJobComponent
  return component