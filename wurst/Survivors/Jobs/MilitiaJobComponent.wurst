package MilitiaJobComponent
import SurvivorJobComponent
import UnitMetadata
import XpReceiverComponent
import RangedTargetXpReceieverComponent
import UnitPropertiesComponent
import SurvivorJobData
import TlsAbilityIds

constant real BONUS_DAMAGE_TO_NORMALS_PERCENTAGE = 10.0
constant real BONUS_DAMAGE_TO_ELITES_PERCENTAGE = -10.0
constant real BONUS_DAMAGE_TO_BOSS_PERCENTAGE = 0.0
constant real BONUS_EVADE_CHANCE_PERCENTAGE = 10.0

// ============================================================================
public class MilitiaJobComponent extends SurvivorJobComponent
  
  // --------------------------------------------------------------------------
  construct(IUnitMetadata owner)
    super(owner)

  // --------------------------------------------------------------------------
  override function getTypeId() returns int
    return MilitiaJobComponent.typeId

  // --------------------------------------------------------------------------
  protected override function onEnabled()
    super.onEnabled()
    getOwner().getOrAddRangedTargetXpRecieverComponent().setEnabled(true)
    getOwner().getOrAddXpReceiverComponent().setEnabled(true)

    let unitPropsComp = getOwner().getOrAddUnitPropertiesComponent()
    if (unitPropsComp != null)
      unitPropsComp.setNormalDamagePercentage(unitPropsComp.getNormalDamagePercentage() + BONUS_DAMAGE_TO_NORMALS_PERCENTAGE)
      unitPropsComp.setEliteDamagePercentage(unitPropsComp.getEliteDamagePercentage() + BONUS_DAMAGE_TO_ELITES_PERCENTAGE)
      unitPropsComp.setBossDamagePercentage(unitPropsComp.getBossDamagePercentage() + BONUS_DAMAGE_TO_ELITES_PERCENTAGE)
      unitPropsComp.setEvadeChancePercentage(unitPropsComp.getEvadeChancePercentage() + BONUS_EVADE_CHANCE_PERCENTAGE)

  // --------------------------------------------------------------------------
  protected override function onDisabled()
    super.onDisabled()

    let ownerUnit = getOwner()
    if (ownerUnit == null)
      return
    
    let rangedTargetXpReceieverComponent = ownerUnit.getRangedTargetXpRecieverComponent()
    if (rangedTargetXpReceieverComponent != null)
      rangedTargetXpReceieverComponent.setEnabled(false)

    let gainXpPerKillComponent = ownerUnit.getOrAddXpReceiverComponent()
    if (gainXpPerKillComponent != null)
      gainXpPerKillComponent.setEnabled(false)

    let unitPropsComp = getOwner().getUnitPropertiesComponent()
    if (unitPropsComp != null)
      unitPropsComp.setNormalDamagePercentage(unitPropsComp.getNormalDamagePercentage() - BONUS_DAMAGE_TO_NORMALS_PERCENTAGE)
      unitPropsComp.setEliteDamagePercentage(unitPropsComp.getEliteDamagePercentage() - BONUS_DAMAGE_TO_ELITES_PERCENTAGE)
      unitPropsComp.setBossDamagePercentage(unitPropsComp.getBossDamagePercentage() - BONUS_DAMAGE_TO_ELITES_PERCENTAGE)
      unitPropsComp.setEvadeChancePercentage(unitPropsComp.getEvadeChancePercentage() - BONUS_EVADE_CHANCE_PERCENTAGE)

  // --------------------------------------------------------------------------
  override function saveJobData(SurvivorJobData jobData)
    super.saveJobData(jobData)

    let ownerUnit = getOwnerUnit()

    if (ownerUnit.hasAbility(TlsAbilityIds.militiaCleave))
      jobData.addAbility(TlsAbilityIds.militiaCleave, ownerUnit.getAbilityLevel(TlsAbilityIds.militiaCleave))

    if (ownerUnit.hasAbility(TlsAbilityIds.militiaTaunt))
      jobData.addAbility(TlsAbilityIds.militiaTaunt, ownerUnit.getAbilityLevel(TlsAbilityIds.militiaTaunt))

    if (ownerUnit.hasAbility(TlsAbilityIds.militiaDefend))
      jobData.addAbility(TlsAbilityIds.militiaDefend, ownerUnit.getAbilityLevel(TlsAbilityIds.militiaDefend))

    if (ownerUnit.hasAbility(TlsAbilityIds.militiaThorns))
      jobData.addAbility(TlsAbilityIds.militiaThorns, ownerUnit.getAbilityLevel(TlsAbilityIds.militiaThorns))

  // --------------------------------------------------------------------------
  override function onLevelChanged()
    super.onLevelChanged()
    let ownerUnit = getOwnerUnit()
    let ownerUnitLevel = ownerUnit.getLevel()

    // The unit's level will be 1 when it is upgraded, in that case ignore this
    if (ownerUnitLevel > 1)

      // Otherwise, increase the level of the ability
      if (ownerUnit.hasAbility(TlsAbilityIds.militiaCleave))
        ownerUnit.setAbilityLevel(TlsAbilityIds.militiaCleave, ownerUnit.getAbilityLevel(TlsAbilityIds.militiaCleave) + 1)

// ============================================================================
public function IUnitMetadata.getMilitiaJobComponent() returns MilitiaJobComponent
  return this.getComponent(typeInfo(MilitiaJobComponent.typeId)) castTo MilitiaJobComponent

// ============================================================================
public function IUnitMetadata.getOrAddMilitiaJobComponent() returns MilitiaJobComponent
  var component = this.getMilitiaJobComponent()
  if (component == null)
    component = this.addComponent(new MilitiaJobComponent(this)) castTo MilitiaJobComponent
  return component