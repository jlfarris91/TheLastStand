package SurvivorJobComponent
import UnitComponent
import SurvivorJobData

// ============================================================================
public class SurvivorJobComponent extends UnitComponent

  // --------------------------------------------------------------------------
  construct(IUnitMetadata owner)
    super(owner)

  // --------------------------------------------------------------------------
  override function getTypeId() returns int
    return SurvivorJobComponent.typeId

  // --------------------------------------------------------------------------
  function onLevelChanged()
    skip

  // --------------------------------------------------------------------------
  function saveJobData(SurvivorJobData jobData)
    let ownerUnit = getOwnerUnit()
    jobData.setLevel(ownerUnit.getLevel())
    jobData.setExperience(ownerUnit.getXp())
    jobData.setUnitId(ownerUnit.getTypeId())
    jobData.setSkillPoints(ownerUnit.getSkillPoints())
    jobData.clearAbilities()

  // --------------------------------------------------------------------------
  function loadJobData(SurvivorJobData jobData)
    let ownerUnit = getOwnerUnit()

    let xp = jobData.getExperience()
    if (xp > 0)
      ownerUnit.setXp(xp, false)

    ownerUnit.setSkillPoints(jobData.getSkillPoints())
    
    for i = 0 to jobData.getAbilityCount() - 1
      let abilId = jobData.getAbilityId(i)
      let abilLvl = jobData.getAbilityLevel(i)
      ownerUnit.addAbility(abilId)
      ownerUnit.setAbilityLevel(abilId, abilLvl)