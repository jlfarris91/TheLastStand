package RespawnDeadSurvivors
import TentComponent
import UnitMetadata
import RegisterEvents
import ClosureTimers
import GameConstants
import initlater Survivors
import TlsUnitIds
import Range

trigger g_trigger
group g_tempGroup

// ============================================================================
function onUnitConstructed()

  let constructedUnit = GetConstructedStructure()
  let metadata = constructedUnit.getMetadata()
  if (metadata == null)
    return

  let tentComponent = metadata.getTentComponent()
  if (tentComponent == null or not tentComponent.getEnabled())
    return

  let p = constructedUnit.getOwner()
  trySpawnSurvivorForPlayer(p)

// ============================================================================
public function trySpawnSurvivorForPlayer(player p)
  let numberOfTents = countNumberOfConstructedTentsOwnedByPlayer(p)
  let numberOfSurvivors = countNumberOfSurvivorsOwnedByPlayer(p)
  Log.debug("Player {0} has {1} tent(s) and {2} survivor(s)".format(p.getName(), numberOfTents.toString(), numberOfSurvivors.toString()))
  if (numberOfTents > numberOfSurvivors)
    spawnSurvivorUnitForPlayer(p)

// ============================================================================
public function countNumberOfConstructedTentsOwnedByPlayer(player p) returns int
  g_tempGroup.clear()
  g_tempGroup.enumUnitsOfPlayer(p, null)
  var count = 0
  for u from g_tempGroup
    let metadata = u.getMetadata()
    if (metadata != null and metadata.hasComponent(TentComponent.typeId))
      let tentComponent = metadata.getTentComponent()
      if (tentComponent != null and tentComponent.getIsConstructed())
        count++
  return count

// ============================================================================
public function countNumberOfSurvivorsOwnedByPlayer(player p) returns int
  g_tempGroup.clear()
  g_tempGroup.enumUnitsOfPlayer(p, null)
  var count = 0
  for u from g_tempGroup
    if (u.isAlive() and u.isSurvivor())
      count++
  return count

// ============================================================================
function onUnitKilled()
  let dyingUnit = GetDyingUnit()
  if (dyingUnit.isSurvivor())
    doAfter(SURVIVORS_RESPAWN_INTERVAL_RANGE.getRandom(), () -> trySpawnSurvivorForPlayer(dyingUnit.getOwner()))

// ============================================================================
init
  g_tempGroup = CreateGroup()
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_CONSTRUCT_FINISH, function onUnitConstructed)
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_DEATH, function onUnitKilled)