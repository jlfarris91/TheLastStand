package SurvivorJobs
import TlsUnitIds
import HashMap
import HashList
import TlsJobItemIds
import Vector

HashMap<int, SurvivorJobDefinition> g_unitTypeToJobMap = new HashMap<int, SurvivorJobDefinition>()
HashMap<int, SurvivorJobDefinition> g_itemTypeToJobMap = new HashMap<int, SurvivorJobDefinition>()

// ============================================================================
public class SurvivorJobDefinition
  private string m_id
  private string m_title
  private int m_itemType
  private Vector<int> m_unitTypes
  private HashList<int> m_equivalentUnitTypes
  private HashMap<int, int> m_upgradeMap

  // --------------------------------------------------------------------------
  construct(string id, string title, int itemType)
    m_id = id
    m_title = title
    m_itemType = itemType
    g_itemTypeToJobMap.put(itemType, this)
    m_unitTypes = new Vector<int>(8)
    m_equivalentUnitTypes = new HashList<int>()
    m_upgradeMap = new HashMap<int, int>()

  // --------------------------------------------------------------------------
  ondestroy
    destroy m_unitTypes
    m_unitTypes = null

    destroy m_equivalentUnitTypes
    m_equivalentUnitTypes = null

    destroy m_upgradeMap
    m_upgradeMap = null

  // --------------------------------------------------------------------------
  function getId() returns string
    return m_id

  // --------------------------------------------------------------------------
  function getTitle() returns string
    return m_title

  // --------------------------------------------------------------------------
  function registerUnitType(int unitType)
    m_unitTypes.add(unitType)
    registerEquivalentUnitType(unitType)

  // --------------------------------------------------------------------------
  function registerEquivalentUnitType(int unitType)
    m_equivalentUnitTypes.add(unitType)
    g_unitTypeToJobMap.put(unitType, this)

  // --------------------------------------------------------------------------
  function registerUpgrade(int unitTypeCurrent, int unitTypeNext)
    m_upgradeMap.put(unitTypeCurrent, unitTypeNext)

  // --------------------------------------------------------------------------
  function getNextUpgrade(int unitTypeCurrent) returns int
    if (not m_upgradeMap.has(unitTypeCurrent))
      return -1
    return m_upgradeMap.get(unitTypeCurrent)

  // --------------------------------------------------------------------------
  function getUnitTypes() returns Vector<int>
    return m_unitTypes

  // --------------------------------------------------------------------------
  function getInitialUnitType() returns int
    return m_unitTypes.getFirst()

  // --------------------------------------------------------------------------
  function getItemType() returns int
    return m_itemType

  // --------------------------------------------------------------------------
  function hasUnitType(int unitType) returns bool
    return m_equivalentUnitTypes.has(unitType)

// ============================================================================
public class SurvivorJobs
  static constant SurvivorJobDefinition none = new SurvivorJobDefinition("none", "Survivor", -1)
  static constant SurvivorJobDefinition builder = new SurvivorJobDefinition("builder", "Builder", TlsJobItemIds.builder1)
  static constant SurvivorJobDefinition militia = new SurvivorJobDefinition("militia", "Militia", TlsJobItemIds.militia1)
  static constant SurvivorJobDefinition spearman = new SurvivorJobDefinition("spearman", "Spearman", TlsJobItemIds.spearman1)
  static constant SurvivorJobDefinition medic = new SurvivorJobDefinition("medic", "Medic", TlsJobItemIds.medic1)
  static constant SurvivorJobDefinition marksman = new SurvivorJobDefinition("marksman", "Marksman", TlsJobItemIds.marksman1)

// ============================================================================
public function getJobDefinitionForUnitType(int unitType) returns SurvivorJobDefinition
  return g_unitTypeToJobMap.get(unitType)

// ============================================================================
public function getJobDefinitionForItemType(int itemType) returns SurvivorJobDefinition
  return g_itemTypeToJobMap.get(itemType)

// ============================================================================
init
  // Survivor Male
  SurvivorJobs.none
  ..registerUnitType(TlsUnitIds.Survivors.survivorMale)

  // Builder
  SurvivorJobs.builder
  ..registerUnitType(TlsUnitIds.Survivors.survivorBuilder)

  // Militia
  SurvivorJobs.militia
  ..registerUnitType(TlsUnitIds.Survivors.survivorMilitia1)
  ..registerUnitType(TlsUnitIds.Survivors.survivorMilitia2)
  ..registerUnitType(TlsUnitIds.Survivors.survivorMilitia3)
  ..registerUpgrade(TlsUnitIds.Survivors.survivorMilitia1, TlsUnitIds.Survivors.survivorMilitia2)
  ..registerUpgrade(TlsUnitIds.Survivors.survivorMilitia2, TlsUnitIds.Survivors.survivorMilitia3)

  // Spearman
  SurvivorJobs.spearman
  ..registerUnitType(TlsUnitIds.Survivors.survivorSpearman1)
  ..registerUnitType(TlsUnitIds.Survivors.survivorSpearman2)
  ..registerUpgrade(TlsUnitIds.Survivors.survivorSpearman1, TlsUnitIds.Survivors.survivorSpearman2)

  // Medic
  SurvivorJobs.medic
  ..registerUnitType(TlsUnitIds.Survivors.survivorMedic)

  // Marksman
  SurvivorJobs.marksman
  ..registerUnitType(TlsUnitIds.Survivors.survivorMarksman)
  ..registerEquivalentUnitType(TlsUnitIds.Survivors.survivorMarksmanTower)