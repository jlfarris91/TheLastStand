package Statistic
import Icons
import PropertyEvents

// ============================================================================
public interface IStatistic
  function getValueChangedEvent() returns PropertyChangedEvent<Statistic>
  function getName() returns string
  function setName(string name)
  function getUnits() returns string
  function setUnits(string units)
  function getIcon() returns string
  function setIcon(string icon)
  function getTooltip() returns string
  function setTooltip(string tooltip)

// ============================================================================
public class Statistic<TValue> implements IStatistic
  protected string m_name
  protected string m_units
  protected string m_icon
  protected string m_tooltip
  protected TValue m_value

  protected PropertyChangingEvent<Statistic, TValue> m_valueChangingEvent
  protected PropertyChangedEvent<Statistic> m_valueChangedEvent

  // --------------------------------------------------------------------------
  construct(string name)
    setName(name)
    setTooltip("Missing tooltip")
    setIcon(Icons.bTNSelectHeroOff)

    m_valueChangingEvent = new PropertyChangingEvent<Statistic, TValue>()
    m_valueChangedEvent = new PropertyChangedEvent<Statistic>()

  // --------------------------------------------------------------------------
  ondestroy
    destroy m_valueChangedEvent
    destroy m_valueChangingEvent

  // --------------------------------------------------------------------------
  function getValueChangingEvent() returns PropertyChangingEvent<Statistic, TValue>
    return m_valueChangingEvent

  // --------------------------------------------------------------------------
  override function getValueChangedEvent() returns PropertyChangedEvent<Statistic>
    return m_valueChangedEvent

  // --------------------------------------------------------------------------
  override function getName() returns string
    return m_name

  // --------------------------------------------------------------------------
  override function setName(string name)
    m_name = name

  // --------------------------------------------------------------------------
  override function getUnits() returns string
    return m_units

  // --------------------------------------------------------------------------
  override function setUnits(string units)
    m_units = units

  // --------------------------------------------------------------------------
  override function getIcon() returns string
    return m_icon

  // --------------------------------------------------------------------------
  override function setIcon(string icon)
    m_icon = icon

  // --------------------------------------------------------------------------
  override function getTooltip() returns string
    return m_tooltip

  // --------------------------------------------------------------------------
  override function setTooltip(string tooltip)
    m_tooltip = tooltip

  // --------------------------------------------------------------------------
  function getValue() returns TValue
    return m_value

  // --------------------------------------------------------------------------
  function setValue(TValue value)

    if (m_value == value)
      return
    
    let changingArgs = new PropertyChangingEventArgs("Value", m_value, value)
    m_valueChangingEvent.call(this, changingArgs)
    destroy changingArgs

    m_value = value

    m_valueChangedEvent.call(this, "Value")


// // ============================================================================
// public class GenericStatistic extends Statistic<Union>

//   // --------------------------------------------------------------------------
//   construct(string name)
//     super(name)

//   // --------------------------------------------------------------------------
//   ondestroy
//     destroy m_value

//   // --------------------------------------------------------------------------
//   function getReal() returns real
//     return getValue().getReal()

//   // --------------------------------------------------------------------------
//   function getInt() returns int
//     return getValue().getInt()

//   // --------------------------------------------------------------------------
//   function getString() returns string
//     return getValue().getString()

//   // --------------------------------------------------------------------------
//   function setReal(real value)
//     let oldValue = m_value.getReal()
//     if (oldValue == value)
//       return
      
//     let newUnion = new Union()
//     ..setReal(value)
    
//     let changingArgs = new PropertyChangingEventArgs("Value", m_value, newUnion)
//     m_valueChangingEvent.call(this, changingArgs)
//     destroy changingArgs

//     m_value.setReal(newUnion.getReal())

//     destroy newUnion

//     m_valueChangedEvent.call(this, "Value")

//   // --------------------------------------------------------------------------
//   function setInt(int value)
//     let oldValue = m_value.getInt()
//     if (oldValue == value)
//       return
      
//     let newUnion = new Union()
//     ..setInt(value)
    
//     let changingArgs = new PropertyChangingEventArgs("Value", m_value, newUnion)
//     m_valueChangingEvent.call(this, changingArgs)
//     destroy changingArgs

//     m_value.setInt(newUnion.getInt())

//     destroy newUnion

//     m_valueChangedEvent.call(this, "Value")

//   // --------------------------------------------------------------------------
//   function setString(string value)
//     let oldValue = m_value.getString()
//     if (oldValue == value)
//       return
      
//     let newUnion = new Union()
//     ..setString(value)
    
//     let changingArgs = new PropertyChangingEventArgs("Value", m_value, newUnion)
//     m_valueChangingEvent.call(this, changingArgs)
//     destroy changingArgs

//     m_value.setString(newUnion.getString())

//     destroy newUnion

//     m_valueChangedEvent.call(this, "Value")