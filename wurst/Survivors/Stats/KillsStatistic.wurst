package KillsStatistic
import Statistic
import UnitMetadata
import UnitComponent
import Events
import SurvivorStats
import SurvivorDataComponent

// ============================================================================
public class KillsStatisticComponent extends UnitComponent
  private SurvivorDataComponent m_survivorDataComponent
  private Action m_onUnitKilledHandler

  // --------------------------------------------------------------------------
  construct(IUnitMetadata owner)
    super(owner)

  // --------------------------------------------------------------------------
  override protected function onEnabled()
    super.onEnabled()
    m_survivorDataComponent = getOwner().getOrAddSurvivorDataComponent()
    listenToUnitKilledEvent()

  // --------------------------------------------------------------------------
  override protected function onDisabled()
    super.onDisabled()
    unlistenToUnitKilledEvent()
    m_survivorDataComponent = null

  // --------------------------------------------------------------------------
  private function listenToUnitKilledEvent()
    unlistenToUnitKilledEvent()
    m_onUnitKilledHandler = PlayerUnitEvents.unitKilled.add() -> 
      if (GetKillingUnit() == getOwnerUnit())
        onUnitKilledByOwner()

  // --------------------------------------------------------------------------
  private function unlistenToUnitKilledEvent()
    if (m_onUnitKilledHandler != null)
      PlayerUnitEvents.unitKilled.remove(m_onUnitKilledHandler)
      destroy m_onUnitKilledHandler
      m_onUnitKilledHandler = null

  // --------------------------------------------------------------------------
  private function onUnitKilledByOwner()
    let stats = m_survivorDataComponent.getSurvivorData()
    if (stats == null)
      return

    let stat = stats.getStatistic(SurvivorStats.kills) castTo IntStatistic
    if (stat == null)
      return

    stat.increment(1)