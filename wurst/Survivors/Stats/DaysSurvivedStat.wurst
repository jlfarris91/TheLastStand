package DaysSurvivedStat
import Statistic
import UnitComponent
import SurvivorStats
import SurvivorComponent
import TimeOfDay
import LinkedList

LinkedList<DaysSurvivedStat> g_activeComponents

// ============================================================================
public class DaysSurvivedStat extends UnitComponent
  private SurvivorComponent m_survivorDataComponent

  // --------------------------------------------------------------------------
  construct(IUnitMetadata owner)
    super(owner)

  // --------------------------------------------------------------------------
  override function getTypeId() returns int
    return DaysSurvivedStat.typeId

  // --------------------------------------------------------------------------
  override protected function onEnabled()
    super.onEnabled()
    m_survivorDataComponent = getOwner().getOrAddSurvivorComponent()
    g_activeComponents.add(this)

  // --------------------------------------------------------------------------
  override protected function onDisabled()
    super.onDisabled()
    g_activeComponents.remove(this)
    m_survivorDataComponent = null

  // --------------------------------------------------------------------------
  function registerDaySurvived()
    let stats = m_survivorDataComponent.getSurvivorData()
    if (stats == null)
      return

    let stat = stats.getStatistic(SurvivorStats.daysSurvived) castTo IntStatistic
    if (stat == null)
      return

    stat.increment(1)

// ============================================================================
public function IUnitMetadata.getDaysSurvivedStat() returns DaysSurvivedStat
  return this.getComponent(typeInfo(DaysSurvivedStat.typeId)) castTo DaysSurvivedStat

// ============================================================================
public function IUnitMetadata.getOrAddDaysSurvivedStat() returns DaysSurvivedStat
  var component = this.getDaysSurvivedStat()
  if (component == null)
    component = this.addComponent(new DaysSurvivedStat(this)) castTo DaysSurvivedStat
  return component

// ============================================================================
function onDayEnd()
  for comp in g_activeComponents
    if (comp != null and comp.getEnabled())
      comp.registerDaySurvived()  

// ============================================================================
init
  g_activeComponents = new LinkedList<DaysSurvivedStat>()
  registerNightEvent(function onDayEnd)