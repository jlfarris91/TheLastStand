package SurvivorStats
import HashMap
import LinkedList
import Enumerable
import StringComparison
import Statistic

// ============================================================================
public class SurvivorStats implements IEnumerable<IStatistic>
  private IterableMap<string, IStatistic> m_statsStore
  private LinkedList<IStatistic> m_statsList

  // --------------------------------------------------------------------------
  construct()
    m_statsStore = new IterableMap<string, IStatistic>()
    m_statsList = new LinkedList<IStatistic>()

  // --------------------------------------------------------------------------
  ondestroy
    m_statsList.forEach((IStatistic t) -> destroy t)

    destroy m_statsList
    m_statsList = null

    destroy m_statsStore
    m_statsStore = null

  // --------------------------------------------------------------------------
  override function iterator() returns IEnumerator<IStatistic>
    return m_statsList.asEnumerable().iterator()

  // --------------------------------------------------------------------------
  function getStatistic(string key) returns IStatistic
    return m_statsStore.get(key)

  // --------------------------------------------------------------------------
  function addStatistic(string key, IStatistic statistic)
    
    m_statsStore.put(key, statistic)
    m_statsList.add(statistic)

    // Sort the stats by name
    m_statsList.sortWith() (IStatistic s1, IStatistic s2) ->
      return stringComparator.compare(s1.getName(), s2.getName())