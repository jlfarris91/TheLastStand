package Survivors
import GroupUtils
import GameConstants
import Math
import GameSettings
import MainItemLibrary
import HumanPlayers
import Camp
import TlsUnitIds
import HumanPlayerMetadata
import UnitMetadata
import SurvivorSpawnManager

// ============================================================================
public function removeUnrescuedSurvivors()
  let ug = getGroup()
  ug.enumUnitsOfPlayer(PLAYER_VILLAGERS, null)
  for u in ug
    if (u.getTypeId() == TlsUnitIds.survivorMaleUnrescued)
      u.remove()
  ug.release()

// ============================================================================
public function spawnUnrescuedSurvivorsNearPlayers()
  g_PlayingHumanPlayers.forEach() (player p) ->
    spawnUnrescuedSurvivorsNearPlayer(p)

// ============================================================================
function spawnUnrescuedSurvivorsNearPlayer(player p)
  let playerMetadata = p.getHumanMetadataRequired()

  if (playerMetadata.getIsDead())
    return
  
  let camp = playerMetadata.getCamp()
  var center = camp.getCenter()

  // Clamp the spawn area to the world bounds
  center = clampToWorldBounds(center, SURVIVORS_SPAWN_RANGE_MAX)

  let spawnPoints = g_survivorSpawnManager.getRandomSpawnPointsInRange(
    center,
    SURVIVORS_SPAWN_RANGE_MIN,
    SURVIVORS_SPAWN_RANGE_MAX,
    GameSettings.survivors_SpawnCountPerPlayer)

  for sp in spawnPoints
    let survivor = createUnitTLS(
      PLAYER_VILLAGERS,
      TlsUnitIds.survivorMaleUnrescued,
      sp.x, sp.y,
      GetRandomDirectionDeg())   

    // There's a chance to give an unrescued survivor an item
    if (passesChanceCheck(SURVIVORS_ITEM_CHANCE))
      g_MainItemLibrary.giveRandomItemToUnit(survivor, SURVIVORS_ITEM_CHANCES)