package Survivors
import GroupUtils
import GameConstants
import Math
import SurvivorSpawnPoints
import GameSettings
import MainItemLibrary
import HumanPlayers
import Camp
import TlsUnitIds
import HumanPlayerMetadata
import UnitMetadata
import SpawnPointManager

public function removeUnrescuedSurvivors()
  var ug = getGroup()
  ug.enumUnitsOfPlayer(PLAYER_VILLAGERS, null)
  for u in ug
    if (u.getTypeId() == TlsUnitIds.survivorUnrescued)
      u.remove()
  ug.release()

public function spawnUnrescuedSurvivorsNearPlayers()
  g_PlayingHumanPlayers.forEach() (player p) ->
    spawnUnrescuedSurvivorsNearPlayer(p)

function spawnUnrescuedSurvivorsNearPlayer(player p)
  let playerMetadata = p.getHumanMetadataRequired()

  if (playerMetadata.getIsDead())
    return
  
  var camp = playerMetadata.getCamp()
  var center = camp.getCenter()

  // Clamp the spawn area to the world bounds
  center = clampToWorldBounds(center, SURVIVORS_SPAWN_RANGE)

  var spawnPoints = g_SurvivorSpawnPointManager.getRandomSpawnPointsInRange(
    center,
    SURVIVORS_SPAWN_RANGE,
    GameSettings.survivors_SpawnCountPerPlayer)

  for sp in spawnPoints
    var survivor = createUnitTLS(
      PLAYER_VILLAGERS,
      TlsUnitIds.survivorUnrescued,
      sp.getPos().x,
      sp.getPos().y,
      GetRandomDirectionDeg())

    // There's a chance to give an unrescued survivor an item
    if (passesChanceCheck(SURVIVORS_ITEM_CHANCE))
      g_MainItemLibrary.giveRandomItemToUnit(survivor, SURVIVORS_ITEM_CHANCES)