package KillTrackerComponent
import UnitComponent
import Events
import UnitMetadata
import Type
import StatsComponent

// ============================================================================
public class KillTrackerComponent extends UnitComponent
  private int m_totalKills
  private Action m_onUnitKilledHandler
  private StatsComponent m_statsComponent

  GenericArgsEvent<KillTrackerComponent, unit> killedUnitEvent

  // --------------------------------------------------------------------------
  construct(IUnitMetadata owner)
    super(owner)
    killedUnitEvent = new GenericArgsEvent<KillTrackerComponent, unit>()

  // --------------------------------------------------------------------------
  ondestroy
    destroy killedUnitEvent

  // --------------------------------------------------------------------------
  function reset()
    m_totalKills = 0

  // --------------------------------------------------------------------------
  protected override function onEnabled()
    super.onEnabled()
    m_statsComponent = getOwner().getStatsComponent()
    m_totalKills = 0
    listenToKillEvent()

  // --------------------------------------------------------------------------
  protected override function onDisabled()
    super.onDisabled()
    unlistenToKillEvent()
    m_statsComponent = null

  // --------------------------------------------------------------------------
  private function onKilledUnit(unit dyingUnit)
    m_totalKills++
    killedUnitEvent.call(this, dyingUnit)

    if (m_statsComponent != null)
      m_statsComponent.getStats().incrementInt(Stats.kills, 1)

  // --------------------------------------------------------------------------
  private function listenToKillEvent()
    unlistenToKillEvent()

    if (m_onUnitKilledHandler == null)
      m_onUnitKilledHandler = PlayerUnitEvents.unitKilled.add() -> 
        let killingUnit = GetKillingUnit()
        if (killingUnit == getOwnerUnit())
          onKilledUnit(GetDyingUnit())
    
  // --------------------------------------------------------------------------
  private function unlistenToKillEvent()
    if (m_onUnitKilledHandler != null)
      PlayerUnitEvents.unitKilled.remove(m_onUnitKilledHandler)
      destroy m_onUnitKilledHandler
      m_onUnitKilledHandler = null

// ============================================================================
public function IUnitMetadata.getOrAddKillTrackerComponent() returns KillTrackerComponent
  var component = this.getComponent(Type(KillTrackerComponent.typeId)) castTo KillTrackerComponent
  if (component == null)
    component = this.addComponent(new KillTrackerComponent(this)) castTo KillTrackerComponent
  return component