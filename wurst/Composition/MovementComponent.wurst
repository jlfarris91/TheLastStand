package MovementComponent
import UnitMetadata
import GameConstants
import Events
import RealtimeUnitComponent

// ============================================================================
public class MovementComponent extends RealtimeUnitComponent

  private vec2 m_lastPos
  private Event1<real> m_unitMovedEvent

  // --------------------------------------------------------------------------
  construct(IUnitMetadata owner)
    super(owner)
    m_unitMovedEvent = new Event1<real>()

  // --------------------------------------------------------------------------
  ondestroy
    destroy m_unitMovedEvent
    m_unitMovedEvent = null

  // --------------------------------------------------------------------------
  function getUnitMovedEvent() returns Event1<real>
    return m_unitMovedEvent

  // --------------------------------------------------------------------------
  override function onEnabled()
    super.onEnabled()
    registerForUpdate(UpdatePriority.Fast)
    m_lastPos = getOwnerUnit().getPos()

  // --------------------------------------------------------------------------
  override function onDisabled()
    super.onDisabled()
    unregisterForUpdate()

  // --------------------------------------------------------------------------
  override function update(real dt)
    super.update(dt)
    
    let pos = getOwnerUnit().getPos()
    let distanceInMeters = m_lastPos.distanceTo(pos) * WORLD_TO_METERS
    if (distanceInMeters > 0.0)
      onMoved(distanceInMeters)
    m_lastPos = pos

  // --------------------------------------------------------------------------
  private function onMoved(real distanceInMeters)

    if (m_unitMovedEvent != null)
      m_unitMovedEvent.call(distanceInMeters)

// ============================================================================
public function IUnitMetadata.getMovementComponent() returns MovementComponent
  return this.getComponent(typeInfo(MovementComponent.typeId)) castTo MovementComponent

// ============================================================================
public function IUnitMetadata.getOrAddMovementComponent() returns MovementComponent
  var component = this.getMovementComponent()
  if (component == null)
    component = this.addComponent(new MovementComponent(this)) castTo MovementComponent
  return component