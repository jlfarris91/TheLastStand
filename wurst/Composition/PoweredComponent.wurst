package PoweredComponent
import UnitComponent
import PowerConsumerComponent
import Events

// ============================================================================
public class PoweredComponent extends UnitComponent
  private PowerConsumerComponent m_powerConsumer
  private real m_powerConsumptionRate
  private bool m_isPowered

  Action poweredCallback
  Action unpoweredCallback

  // --------------------------------------------------------------------------
  construct (IUnitMetadata metadata)
    super(metadata)
    m_powerConsumer = null
    poweredCallback = null
    unpoweredCallback = null

  // --------------------------------------------------------------------------
  override function getTypeId() returns int
    return PoweredComponent.getTypeId()

  // --------------------------------------------------------------------------
  function getIsPowered() returns bool
    return m_isPowered

  // --------------------------------------------------------------------------
  function setPowerConsumptionRate(real value)
    m_powerConsumptionRate = value
    if (m_powerConsumer != null)
      m_powerConsumer.setPowerRequired(m_powerConsumptionRate)

  // --------------------------------------------------------------------------
  function getPowerConsumptionRate() returns real
    return m_powerConsumptionRate

  // --------------------------------------------------------------------------
  override function onEnabled()
    super.onEnabled()

  // --------------------------------------------------------------------------
  override function onDisabled()
    super.onDisabled()

  // --------------------------------------------------------------------------
  function powered()
    if (m_isPowered)
      return
    if (poweredCallback != null)
      poweredCallback.call()

  // --------------------------------------------------------------------------
  function unpowered()
    if (not m_isPowered)
      return
    if (unpoweredCallback != null)
      unpoweredCallback.call()

// ============================================================================
public function IUnitMetadata.getPoweredComponent() returns PoweredComponent
  return this.getComponent(typeInfo(PoweredComponent.typeId)) castTo PoweredComponent

// ============================================================================
public function IUnitMetadata.getOrAddPoweredComponent() returns PoweredComponent
  var component = this.getPoweredComponent()
  if (component == null)
    component = this.addComponent(new PoweredComponent(this)) castTo PoweredComponent
  return component