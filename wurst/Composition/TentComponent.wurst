package TentComponent
import UnitComponent
import Survivors
import RegisterEvents

// ============================================================================
public class TentComponent extends UnitComponent

  // --------------------------------------------------------------------------
  construct (IUnitMetadata owner)
    super(owner)

// ============================================================================
public function IUnitMetadata.getTentComponent() returns TentComponent
  return this.getComponent(Type(TentComponent.typeId)) castTo TentComponent

// ============================================================================
public function IUnitMetadata.getOrAddTentComponent() returns TentComponent
  var component = this.getTentComponent()
  if (component == null)
    component = this.addComponent(new TentComponent(this)) castTo TentComponent
  return component

// ============================================================================
function onUnitConstructed()

  let constructedUnit = GetConstructedStructure()
  let metadata = constructedUnit.getMetadata()
  if (metadata == null)
    return

  let tentComponent = metadata.getTentComponent()
  if (tentComponent == null or not tentComponent.getEnabled())
    return

  spawnSurvivorUnitForPlayer(constructedUnit.getOwner())

// ============================================================================
init
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_CONSTRUCT_FINISH, function onUnitConstructed)