package AltarComponent
import UnitMetadata
import ItemEvents
import TlsItemIds
import TlsAbilityIds
import Abilities

constant string FX1_PATH = Abilities.vampPotionCaster
constant string FX2_PATH = "Items\\Heart.mdx"

// ============================================================================
public class AltarComponent extends UnitComponent
  private effect m_fx1
  private effect m_fx2

  // --------------------------------------------------------------------------
  construct (IUnitMetadata owner)
    super(owner)

  // --------------------------------------------------------------------------
  ondestroy
    hideFX()

  // --------------------------------------------------------------------------
  override function onEnabled()
    super.onEnabled()
    onItemAcquired()

  // --------------------------------------------------------------------------
  override function onDisabled()
    super.onDisabled()
    hideFX()

  // --------------------------------------------------------------------------
  protected function onItemAcquired()
    let ownerUnit = getOwnerUnit()

    if (ownerUnit.itemCount(TlsItemIds.heart) != 1)
      return

    ownerUnit.removeAbility(TlsAbilityIds.altarReviveDisabledIcon)
    ownerUnit.addAbility(TlsAbilityIds.altarRevive)
    showFX()

  // --------------------------------------------------------------------------
  protected function onItemDropped()
    let ownerUnit = getOwnerUnit()

    // The unit still has at least one heart item
    if (ownerUnit.itemCount(TlsItemIds.heart) > 1)
      return

    ownerUnit.removeAbility(TlsAbilityIds.altarRevive)
    ownerUnit.addAbility(TlsAbilityIds.altarReviveDisabledIcon)
    hideFX()

  // --------------------------------------------------------------------------
  function showFX()
    let ownerUnit = getOwnerUnit()
    if (m_fx1 == null)
      m_fx1 = AddSpecialEffect(FX1_PATH, ownerUnit.getX(), ownerUnit.getY())
    if (m_fx2 == null)
      m_fx2 = AddSpecialEffect(FX2_PATH, ownerUnit.getX(), ownerUnit.getY())
      ..setScale(0.5)
      ..setHeight(50)

  // --------------------------------------------------------------------------
  function hideFX()
    if (m_fx1 != null)
      m_fx1.destr()
      m_fx1 = null
    if (m_fx2 != null)
      m_fx2.destr()
      m_fx2 = null

// ============================================================================
public function IUnitMetadata.getAltarComponent() returns AltarComponent
  return this.getComponent(AltarComponent.typeId) castTo AltarComponent

// ============================================================================
public function IUnitMetadata.getOrAddAltarComponent() returns AltarComponent
  var component = this.getAltarComponent()
  if (component == null)
    component = this.addComponent(new AltarComponent(this)) castTo AltarComponent
  return component

// ============================================================================
function onHeartAcquired(unit manipulatingUnit, item manipulatedItem)
  
  let heroId = manipulatedItem.getUserData()
  let heroUnit = unitFromIndex(heroId)
  if (heroUnit == null)
    Log.debug("Could not find owner of heart item " + heroId.toString())
    return

  let metadata = manipulatingUnit.getMetadata()
  if (metadata == null)
    return

  let comp = metadata.getAltarComponent()
  if (comp == null)
    return

  comp.onItemAcquired()

// ============================================================================
function onHeartDropped(unit manipulatingUnit, item manipulatedItem)
  
  let heroId = manipulatedItem.getUserData()
  let heroUnit = unitFromIndex(heroId)
  if (heroUnit == null)
    Log.debug("Could not find owner of heart item " + heroId.toString())
    return

  let metadata = manipulatingUnit.getMetadata()
  if (metadata == null)
    return

  let comp = metadata.getAltarComponent()
  if (comp == null)
    return

  comp.onItemDropped()

// ============================================================================
init
  registerItemAcquiredEvent(TlsItemIds.heart, (u, i) -> onHeartAcquired(u, i))
  registerItemDroppedEvent(TlsItemIds.heart, (u, i) -> onHeartDropped(u, i))