package HeroComponent
import UnitComponent
import HumanPlayerMetadata

// ============================================================================
public class HeroComponent extends UnitComponent

  // --------------------------------------------------------------------------
  construct(IUnitMetadata owner)
    super(owner)

  // --------------------------------------------------------------------------
  protected override function getTypeId() returns int
    return HeroComponent.getTypeId()
  
  // --------------------------------------------------------------------------
  override function onUnitChanged(unit oldUnit, unit newUnit)
    super.onUnitChanged(oldUnit, newUnit)

    if (oldUnit != null)
      let ownerMetadata = oldUnit.getOwner().getHumanMetadata()
      let currentHero = ownerMetadata.getHero()
      if (currentHero != null and currentHero == oldUnit)
        ownerMetadata.setHero(null)

    if (newUnit != null)
      let ownerMetadata = newUnit.getOwner().getHumanMetadata()
      ownerMetadata.setHero(newUnit)

// ============================================================================
public function IUnitMetadata.getHeroComponent() returns HeroComponent
  return this.getComponent(typeInfo(HeroComponent.typeId)) castTo HeroComponent

// ============================================================================
public function IUnitMetadata.getOrAddHeroComponent() returns HeroComponent
  var component = this.getHeroComponent()
  if (component == null)
    component = this.addComponent(new HeroComponent(this)) castTo HeroComponent
  return component