package SpikesComponent
import FX
import ClosureTimers
import UnitComponent
import RegisterEvents

// ============================================================================
public class SpikesComponent extends UnitComponent

  // --------------------------------------------------------------------------
  construct (IUnitMetadata owner)
    super(owner)

// ============================================================================
public function IUnitMetadata.getSpikesComponent() returns SpikesComponent
  return this.getComponent(typeInfo(SpikesComponent.typeId)) castTo SpikesComponent

// ============================================================================
public function IUnitMetadata.getOrAddSpikesComponent() returns SpikesComponent
  var component = this.getSpikesComponent()
  if (component == null)
    component = this.addComponent(new SpikesComponent(this)) castTo SpikesComponent
  return component

// ============================================================================
function onUnitDamaged()

  let damagingUnit = GetEventDamageSource()
  let damagingUnitMetadata = damagingUnit.getMetadata()
  if (damagingUnitMetadata == null)
    return

  let spikes = damagingUnitMetadata.getSpikesComponent()
  if (spikes == null or not spikes.getEnabled())
    return

  let damagedUnit = GetTriggerUnit()

  damagingUnit.subHP(GetEventDamage())

  let spikesPos = damagingUnit.getPos()
  let damagedPos = damagedUnit.getPos()
  
  let fxPos = ((spikesPos + damagedPos) / 2.0)

  let fx = FX.createEffect("Abilities\\Weapons\\Rifle\\RifleImpact.mdl", fxPos)
  fx.setAlpha(255)
  fx.setColor(255, 255, 255)
  fx.setScale(0.8)
  doAfter(2) ->
    DestroyEffect(fx)

// ============================================================================
init
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_DAMAGED, function onUnitDamaged)