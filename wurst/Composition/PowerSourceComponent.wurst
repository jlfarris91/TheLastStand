package PowerSourceComponent
import UnitComponent
import initlater PowerConsumerComponent
import LinkedList

// ============================================================================
class PowerConsumerComparator implements Comparator<PowerConsumerComponent>
  override function compare(PowerConsumerComponent a, PowerConsumerComponent b) returns int
    return a.getPowerRequired() < b.getPowerRequired() ? -1 : 1

// ============================================================================
public class PowerSourceComponent extends UnitComponent
  private LinkedList<PowerConsumerComponent> m_receivers
  private real m_powerRate
  private real m_powerRateRemaining

  // --------------------------------------------------------------------------
  construct (IUnitMetadata metadata)
    super(metadata)
    m_receivers = new LinkedList<PowerConsumerComponent>()
    m_powerRate = 0

  // --------------------------------------------------------------------------
  ondestroy
    destroy m_receivers

  // --------------------------------------------------------------------------
  override function getTypeId() returns int
    return PowerSourceComponent.typeId

  // --------------------------------------------------------------------------
  function setPowerRate(real powerRate)
    m_powerRate = powerRate

  // --------------------------------------------------------------------------
  function getPowerRate() returns real
    return m_powerRate

  // --------------------------------------------------------------------------
  function getPowerRateRemaining() returns real
    return m_powerRateRemaining

  // --------------------------------------------------------------------------
  function getRecievers() returns LinkedList<PowerConsumerComponent>
    return m_receivers

  // --------------------------------------------------------------------------
  function tryLink(PowerConsumerComponent powerConsumer) returns bool
    if (m_powerRateRemaining < powerConsumer.getPowerRequired())
      return false
    link(powerConsumer)
    return true

  // --------------------------------------------------------------------------
  private function link(PowerConsumerComponent consumer)
    m_receivers.add(consumer)
    m_powerRateRemaining -= consumer.getPowerRequired()

  // --------------------------------------------------------------------------
  function unlink(PowerConsumerComponent consumer)
    if (m_receivers.remove(consumer))
      m_powerRateRemaining += consumer.getPowerRequired()

// ============================================================================
public function IUnitMetadata.getPowerSourceComponent() returns PowerSourceComponent
  return this.getComponent(typeInfo(PowerSourceComponent.typeId)) castTo PowerSourceComponent

// ============================================================================
public function IUnitMetadata.getOrAddPowerSourceComponent() returns PowerSourceComponent
  var component = this.getPowerSourceComponent()
  if (component == null)
    component = this.addComponent(new PowerSourceComponent(this)) castTo PowerSourceComponent
  return component