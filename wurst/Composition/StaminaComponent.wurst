package StaminaComponent
import Composition
import UnitMetadata
import Events
import Type
import ProgressBar
import ColorUtility
import ClosureTimers
import UnitComponent

// ============================================================================
public class StaminaComponent extends UnitComponent

  private constant real TIME_TO_HIDE_STAMINA_BAR = 3.0

  private ProgressBar _staminaBar
  private GenericArgsEventHandler<StaminaComponent, real> _staminaChangedEventHandler
  private timer _hideStaminaBarTimer

  GenericArgsEvent<StaminaComponent, real> staminaChangedEvent
  GenericEvent<StaminaComponent> outOfStaminaEvent

  // --------------------------------------------------------------------------
  construct(IUnitMetadata owner)
    super(owner)
    staminaChangedEvent = new GenericArgsEvent<StaminaComponent, real>()
    outOfStaminaEvent = new GenericEvent<StaminaComponent>()

  // --------------------------------------------------------------------------
  ondestroy
    if (_hideStaminaBarTimer != null)
      _hideStaminaBarTimer.destr()
      _hideStaminaBarTimer = null

    if (_staminaChangedEventHandler != null)
      _staminaChangedEventHandler = staminaChangedEvent.removeListener(_staminaChangedEventHandler)

    destroy outOfStaminaEvent
    destroy staminaChangedEvent

    if (_staminaBar != null)
      destroy _staminaBar

  // --------------------------------------------------------------------------
  override function initialize()
    super.initialize()
    
    _staminaBar = new ProgressBar()
    ..setHeight(135.0)
    ..setOffset(vec2(-14.5, 0))
    ..setScale(1.2)
    ..setColor(Colors.gold)
    ..show(false)

    _staminaChangedEventHandler = staminaChangedEvent.addListener() (StaminaComponent sender, real args) ->
      let t = getStamina() / getMaxStamina()
      _staminaBar.setPercentage(t)
      _staminaBar.show(true)
      hideStaminaBarDelayed()

  // --------------------------------------------------------------------------
  override function onUnitChanged(unit oldUnit, unit newUnit)
    super.onUnitChanged(oldUnit, newUnit)
      
    if (_staminaBar != null)
      _staminaBar.setTarget(newUnit)
      _staminaBar.setPercentageNow(getStaminaPercentage())

  // --------------------------------------------------------------------------
  function getStamina() returns real
    let ownerUnit = getOwnerUnit()
    return ownerUnit != null ? ownerUnit.getMana() : 0.0

  // --------------------------------------------------------------------------
  function getMaxStamina() returns real
    let ownerUnit = getOwnerUnit()
    return ownerUnit != null ? ownerUnit.getMana() : 0.0

  // --------------------------------------------------------------------------
  function getStaminaPercentage() returns real
    let current = getStamina()
    let max = getMaxStamina()
    return max == 0.0 ? 0.0 : current / max

  // --------------------------------------------------------------------------
  function removeStamina(real amount)
    let ownerUnit = getOwnerUnit()
    let originalMana = ownerUnit.getMana()
    let remainingMana = RMaxBJ(originalMana - amount, 0.0)
    let actualDelta = originalMana - remainingMana

    if (RAbsBJ(actualDelta) <= 0.0)
      return
    
    ownerUnit.setMana(remainingMana)
    staminaChangedEvent.invoke(this, actualDelta)

    if (remainingMana <= 0.0)
      outOfStaminaEvent.invoke(this)

  // --------------------------------------------------------------------------
  private function hideStaminaBarDelayed()
    if (_hideStaminaBarTimer != null)
      _hideStaminaBarTimer.destr()

    _hideStaminaBarTimer = CreateTimer()
    _hideStaminaBarTimer.doAfter(TIME_TO_HIDE_STAMINA_BAR) () ->
      _staminaBar.show(false)
      _hideStaminaBarTimer.destr()

// ============================================================================
public function IUnitMetadata.getOrAddStaminaComponent() returns StaminaComponent
  var component = this.getComponent(Type(StaminaComponent.typeId)) castTo StaminaComponent
  if (component == null)
    component = this.addComponent(new StaminaComponent(this)) castTo StaminaComponent
  return component