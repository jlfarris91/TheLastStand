package RealtimeComponent
import Events
import Composition
import ClosureTimers

AnonymousEvent g_updateEvent

// ============================================================================
public abstract class RealtimeComponent extends Component
  private Action m_updateHandler

  // --------------------------------------------------------------------------
  construct(IComposite owner)
    super(owner)

  // --------------------------------------------------------------------------
  ondestroy
    unregisterForUpdate()

  // --------------------------------------------------------------------------
  protected override function onDisabled()
    super.onDisabled()
    unregisterForUpdate()

  // --------------------------------------------------------------------------
  protected function registerForUpdate()
    unregisterForUpdate()

    if (m_updateHandler == null)
      m_updateHandler = g_updateEvent.add() () -> 
        onUpdate(ANIMATION_PERIOD)

  // --------------------------------------------------------------------------
  protected function unregisterForUpdate()
    if (m_updateHandler != null)
      g_updateEvent.remove(m_updateHandler)
      destroy m_updateHandler
      m_updateHandler = null

  // --------------------------------------------------------------------------
  protected function onUpdate(real _dt)
    skip

// ============================================================================
init
  g_updateEvent = new AnonymousEvent()

  let t = CreateTimer()
  t.doPeriodically(ANIMATION_PERIOD) (CallbackPeriodic cb) ->
    g_updateEvent.call()