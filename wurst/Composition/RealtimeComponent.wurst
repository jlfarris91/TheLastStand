package RealtimeComponent
import Events
import Composition
import ClosureTimers

AnonymousEvent g_updateEvent

// ============================================================================
public abstract class RealtimeComponent extends Component
  private AnonymousEventHandler _updateHandler
  private bool _isRegisteredForUpdate

  // --------------------------------------------------------------------------
  construct(IComposite owner)
    super(owner)
    _isRegisteredForUpdate = false

  // --------------------------------------------------------------------------
  ondestroy
    unregisterForUpdate()

  // --------------------------------------------------------------------------
  override function onDisabled()
    super.onDisabled()
    unregisterForUpdate()

  // --------------------------------------------------------------------------
  protected function registerForUpdate()
    if (not _isRegisteredForUpdate)
      _updateHandler = g_updateEvent.addListener() () -> 
        onUpdate(ANIMATION_PERIOD)
    _isRegisteredForUpdate = true

  // --------------------------------------------------------------------------
  protected function unregisterForUpdate()
    if (_isRegisteredForUpdate)
      _updateHandler = g_updateEvent.removeListener(_updateHandler)
    _isRegisteredForUpdate = false

  // --------------------------------------------------------------------------
  protected function onUpdate(real _dt)
    skip

// ============================================================================
init
  g_updateEvent = new AnonymousEvent()

  var t = CreateTimer()
  t.doPeriodically(ANIMATION_PERIOD) (CallbackPeriodic cb) ->
    g_updateEvent.invoke()