package RangedTargetComponent
import UnitComponent
import DamageEvent
import GameConstants
import RangedTargetXpReceieverComponent
import RegisterEvents
import TlsUnitIds
import Orders
import ExperienceComponent

// ============================================================================
public class RangedTargetComponent extends UnitComponent
  private DamageListener m_onDamagedHandler

  // --------------------------------------------------------------------------
  construct(IUnitMetadata owner)
    super(owner)

  // --------------------------------------------------------------------------
  override protected function onEnabled()
    super.onEnabled()
    listenToDamageEvent()

  // --------------------------------------------------------------------------
  override protected function onDisabled()
    super.onDisabled()
    unlistenToDamageEvent()
  
  // --------------------------------------------------------------------------
  private function onDamaged()
    let target = DamageEvent.getTarget()
    if (target != getOwnerUnit())
      return

    let source = DamageEvent.getSource()
    if (source.getOwner() == PLAYER_UNDEAD)
      return
    
    DamageEvent.setAmount(0)

    let sourceMetadata = source.getMetadata()
    if (sourceMetadata == null)
      return

    let xpReciever = sourceMetadata.getRangedTargetXpRecieverComponent()
    if (xpReciever == null or not xpReciever.getEnabled())
      return

    source.addUnitAdjustedXp(xpReciever.getXpPerHit(), true)

  // --------------------------------------------------------------------------
  private function listenToDamageEvent()
    unlistenToDamageEvent()
    m_onDamagedHandler = DamageEvent.addUnreducedListener() -> 
      onDamaged()

  // --------------------------------------------------------------------------
  private function unlistenToDamageEvent()
    if (m_onDamagedHandler != null)
      destroy m_onDamagedHandler
      m_onDamagedHandler = null

// ============================================================================
public function IUnitMetadata.getRangedTargetComponent() returns RangedTargetComponent
  return this.getComponent(RangedTargetComponent.typeId) castTo RangedTargetComponent

// ============================================================================
public function IUnitMetadata.getOrAddRangedTargetComponent() returns RangedTargetComponent
  var component = this.getRangedTargetComponent()
  if (component == null)
    component = this.addComponent(new RangedTargetComponent(this)) castTo RangedTargetComponent
  return component

// ============================================================================
function onUnitIssuedTargetOrder()
  let orderId = GetIssuedOrderId()
  if (orderId != OrderIds.smart)
    return

  let targetUnit = GetOrderTargetUnit()
  if (targetUnit.getTypeId() != TlsUnitIds.rangedTarget)
    return

  let orderedUnit = GetOrderedUnit()
  let orderedMetadata = orderedUnit.getMetadata()
  if (orderedMetadata == null)
    return

  let xpReciever = orderedMetadata.getRangedTargetXpRecieverComponent()
  if (xpReciever == null or not xpReciever.getEnabled())
    return

  orderedUnit.issueTargetOrderById(OrderIds.attack, targetUnit)

// ============================================================================
init
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER, function onUnitIssuedTargetOrder)