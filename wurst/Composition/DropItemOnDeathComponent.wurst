package DropItemOnDeathComponent
import UnitComponent
import ItemSetLibrary
import RegisterEvents
import ItemSet
import HumanPlayers
import ErrorHandling

constant int MAX_NUM_ITEMS = 3

// ============================================================================
public class DropItemOnDeathComponent extends UnitComponent
  private int array[MAX_NUM_ITEMS] m_itemType
  private ItemSetLibrary array[MAX_NUM_ITEMS] m_itemSetLibrary
  private ItemSet array[MAX_NUM_ITEMS] m_itemSet
  private int m_itemCount

  // --------------------------------------------------------------------------
  construct (IUnitMetadata owner)
    super(owner)
    setDisableOnDeath(false)

    m_itemCount = 0
    for i = 0 to MAX_NUM_ITEMS -1
      m_itemType[i] = -1
      m_itemSetLibrary[i] = null
      m_itemSet[i] = null

  // --------------------------------------------------------------------------
  function addRandomItemFromSet(ItemSet itemSet)
    addInternal(-1, itemSet, null)

  // --------------------------------------------------------------------------
  function addItem(int itemType, ItemSet itemSet)
    addInternal(itemType, itemSet, null)

  // --------------------------------------------------------------------------
  function hasItem(int itemType) returns bool
    for i = 0 to m_itemCount - 1
      if (m_itemType[i] == itemType)
        return true
    return false

  // --------------------------------------------------------------------------
  private function addInternal(int itemType, ItemSet itemSet, ItemSetLibrary itemSetLibrary)
    if (m_itemCount == MAX_NUM_ITEMS)
      error("Too many items!")
    m_itemType[m_itemCount] = itemType
    m_itemSetLibrary[m_itemCount] = itemSetLibrary
    m_itemSet[m_itemCount] = itemSet
    m_itemCount++

  // --------------------------------------------------------------------------
  protected function onUnitKilled()
    for i = 0 to m_itemCount - 1
      createItem(m_itemType[i], m_itemSet[i], m_itemSetLibrary[i])

  // --------------------------------------------------------------------------
  private function createItem(int itemTypeId, ItemSet itemSet, ItemSetLibrary itemSetLibrary)

    if (itemSetLibrary == null and itemSet == null)
      Log.warn("DropItemOnDeathComponent has no item set or item set library assigned!")
      return

    var mutableItemTypeId = itemTypeId
    if (mutableItemTypeId == -1)
      if (itemSetLibrary != null)
        let itemType = itemSetLibrary.getRandomItemType()
        if (itemType == null)
          Log.warn("ItemSetLibrary contains no items!")
          return
        mutableItemTypeId = itemType.id
      else
        mutableItemTypeId = itemSet.getRandomItemTypeId()

    if (itemSetLibrary != null)
      itemSetLibrary.createItem(mutableItemTypeId, getOwnerUnit().getPos())      
    else
      itemSet.createItem(mutableItemTypeId, getOwnerUnit().getPos())

// ============================================================================
public function IUnitMetadata.getDropItemOnDeathComponent() returns DropItemOnDeathComponent
  return this.getComponent(DropItemOnDeathComponent.typeId) castTo DropItemOnDeathComponent

// ============================================================================
public function IUnitMetadata.getOrAddDropItemOnDeathComponent() returns DropItemOnDeathComponent
  var component = this.getDropItemOnDeathComponent()
  if (component == null)
    component = this.addComponent(new DropItemOnDeathComponent(this)) castTo DropItemOnDeathComponent
  return component

// ============================================================================
function onUnitKilled()

  let dyingUnit = GetDyingUnit()
  let killingUnit = GetKillingUnit()
  
  if (not killingUnit.getOwner().isHumanPlayer())
    return

  let metadata = dyingUnit.getMetadata()
  if (metadata == null)
    return

  let comp = metadata.getDropItemOnDeathComponent()
  if (comp == null or not comp.getEnabled())
    return

  comp.onUnitKilled()

// ============================================================================
init
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_DEATH, function onUnitKilled)