package SprintComponent
import UnitComponent
import UnitMetadata
import TlsAbilityIds
import Events
import ExhaustComponent
import MovementComponent
import StaminaComponent

// ============================================================================
public class SprintComponent extends UnitComponent
  private MovementComponent _movement
  private StaminaComponent _stamina
  private real _sprintSpeed = 0
  private real _staminaCost = 0
  private int _level = 1
  private bool _isSprinting
  private Action2<MovementComponent, real> _onUnitMovedHandler

  GenericEvent<SprintComponent> startedSprintingEvent
  GenericEvent<SprintComponent> stoppedSprintingEvent

  // --------------------------------------------------------------------------
  construct(IUnitMetadata owner)
    super(owner)
    startedSprintingEvent = new GenericEvent<SprintComponent>()
    stoppedSprintingEvent = new GenericEvent<SprintComponent>()

  // --------------------------------------------------------------------------
  ondestroy
    stopSprinting()
    destroy startedSprintingEvent
    destroy stoppedSprintingEvent

  // --------------------------------------------------------------------------
  function getIsSprinting() returns bool
    return _isSprinting

  // --------------------------------------------------------------------------
  function setSprintSpeed(real sprintSpeed)
    _sprintSpeed = sprintSpeed

  // --------------------------------------------------------------------------
  function getSprintSpeed() returns real
    return _sprintSpeed

  // --------------------------------------------------------------------------
  function setStaminaCost(real staminaCost)
    _staminaCost = staminaCost

  // --------------------------------------------------------------------------
  function getStaminaCost() returns real
    return _staminaCost

  // --------------------------------------------------------------------------
  function setLevel(int level)
    _level = level

  // --------------------------------------------------------------------------
  function getLevel() returns int
    return _level

  // --------------------------------------------------------------------------
  protected override function onEnabled()
    super.onEnabled()

    _movement = getOwner().getOrAddMovementComponent()
    _stamina = getOwner().getOrAddStaminaComponent()

    let u = getOwnerUnit()
    if (u.getAbilityLevel(TlsAbilityIds.sprint) <= 0)
      u.addAbility(TlsAbilityIds.sprint)
    u.setAbilityLevel(TlsAbilityIds.sprint, _level)

  // --------------------------------------------------------------------------
  protected override function onDisabled()
    super.onDisabled()

    let u = getOwnerUnit()
    if (u.getAbilityLevel(TlsAbilityIds.sprint) > 0)
      u.removeAbility(TlsAbilityIds.sprint)

    _movement = null
    _stamina = null

  // --------------------------------------------------------------------------
  function startSprinting()
    if (_isSprinting)
      return

    _isSprinting = true

    let u = getOwnerUnit()
    let baseSpeed = u.getDefaultMovespeed()
    u.removeAbility(TlsAbilityIds.sprint)
    u.addAbility(TlsAbilityIds.stopSprinting)
    u.setAbilityLevel(TlsAbilityIds.stopSprinting, _level)
    u.setMoveSpeed(baseSpeed + _sprintSpeed)

    listenToUnitMovedEvent()
    startedSprintingEvent.call(this)

  // --------------------------------------------------------------------------
  function stopSprinting()
    if (not _isSprinting)
      return

    _isSprinting = false

    let u = getOwnerUnit()
    let baseSpeed = u.getDefaultMovespeed()
    u.removeAbility(TlsAbilityIds.stopSprinting)
    u.addAbility(TlsAbilityIds.sprint)
    u.setAbilityLevel(TlsAbilityIds.sprint, _level)
    u.setMoveSpeed(baseSpeed)
    
    unlistenToUnitMovedEvent()
    stoppedSprintingEvent.call(this)

  // --------------------------------------------------------------------------
  function exhaustUnit()
    let exhaustion = getOwner().getOrAddExhaustionComponent()
    exhaustion.exhaustUnit()

  // --------------------------------------------------------------------------
  private function onUnitMoved(real distanceInMeters)
    let totalStaminaCost = distanceInMeters * _staminaCost
    _stamina.removeStamina(totalStaminaCost)
    if (_stamina.getStamina() < totalStaminaCost)
      stopSprinting()
      exhaustUnit()

  // --------------------------------------------------------------------------
  private function listenToUnitMovedEvent()
    unlistenToUnitMovedEvent()
    if (_onUnitMovedHandler == null)
      _onUnitMovedHandler = _movement.getUnitMovedEvent().add() (MovementComponent sender, real distanceInMeters) ->
        onUnitMoved(distanceInMeters)

  // --------------------------------------------------------------------------
  private function unlistenToUnitMovedEvent()
    if (_onUnitMovedHandler != null)
      _movement.getUnitMovedEvent().remove(_onUnitMovedHandler)
      destroy _onUnitMovedHandler
      _onUnitMovedHandler = null

// ============================================================================
public function IUnitMetadata.getOrAddSprintComponent() returns SprintComponent
  var component = this.getComponent(Type(SprintComponent.typeId)) castTo SprintComponent
  if (component == null)
    component = this.addComponent(new SprintComponent(this)) castTo SprintComponent
  return component