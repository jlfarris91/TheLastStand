package InfectedComponent
import UnitComponent
import Abilities
import AttachmentPoints
import TlsAbilityIds

constant real POISON_EFFECT_SCALE = 0.8
constant string POISON_EFFECT_MODEL_PATH = Abilities.poisonStingTarget
constant colorA INFECTED_TINT_COLOR = colorA(180, 255, 140, 255)

// ============================================================================
public class InfectedComponent extends UnitComponent
  private effect m_effect

  // --------------------------------------------------------------------------
  construct(IUnitMetadata owner)
    super(owner)

  // --------------------------------------------------------------------------
  ondestroy
    hide()

  // --------------------------------------------------------------------------
  override function getTypeId() returns int
    return InfectedComponent.typeId

  // --------------------------------------------------------------------------
  override function onEnabled()
    super.onEnabled()
    enableInfectedWoundAbility()
    show()

  // --------------------------------------------------------------------------
  override function onDisabled()
    super.onDisabled()
    disableInfectedWoundAbility()
    hide()

  // --------------------------------------------------------------------------
  function show()
    if (getIsVisible())
      return

    let targetUnit = getOwnerUnit()
    if (targetUnit == null)
      return
  
    m_effect = createPoisonEffect(targetUnit)
    targetUnit.setVertexColor(INFECTED_TINT_COLOR)

  // --------------------------------------------------------------------------
  function hide()
    if (m_effect != null)
      m_effect.destr()

  // --------------------------------------------------------------------------
  function getIsVisible() returns bool
    return m_effect != null

  // --------------------------------------------------------------------------
  private function enableInfectedWoundAbility()
    let ownerUnit = getOwnerUnit()
    if (ownerUnit != null)
      ownerUnit.addAbility(TlsAbilityIds.infectedWound)
      
  // --------------------------------------------------------------------------
  private function disableInfectedWoundAbility()
    let ownerUnit = getOwnerUnit()
    if (ownerUnit != null)
      ownerUnit.removeAbility(TlsAbilityIds.infectedWound)
  
  // --------------------------------------------------------------------------
  private function createPoisonEffect(unit targetUnit) returns effect
    let fx = AddSpecialEffectTargetUnitBJ(AttachmentPoints.origin, targetUnit, POISON_EFFECT_MODEL_PATH)
    ..setScale(POISON_EFFECT_SCALE)
    return fx

// ============================================================================
public function IUnitMetadata.getOrAddInfectedComponent() returns InfectedComponent
  var component = this.getComponent(typeInfo(InfectedComponent.typeId)) castTo InfectedComponent
  if (component == null)
    component = this.addComponent(new InfectedComponent(this)) castTo InfectedComponent
  return component