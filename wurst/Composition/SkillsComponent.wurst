package SkillsComponent
import LinkedList
import Skills
// import initlater SkillsBoard
import RegisterEvents
import UnitMetadata
// import ClosureTimers

// ============================================================================
public class SkillsComponent extends Component

  protected LinkedList<ISkill> _skills
  // private SkillsBoard _board
  
  // --------------------------------------------------------------------------
  construct(IComposite owner)
    super(owner)
    _skills = new LinkedList<ISkill>()

  // --------------------------------------------------------------------------
  ondestroy
    for skill in _skills
      destroy skill
    destroy _skills
    _skills = null
    // destroy _board
    // _board = null

  // --------------------------------------------------------------------------
  function addSkill(ISkill skill) returns ISkill
    _skills.add(skill)

    skill.reset()
    skill.setIsEnabled(true)

    // if (_board != null)
    //   _board.updateMultiboardRows()

    return skill

  // --------------------------------------------------------------------------
  function getSkill(Type skillType) returns ISkill
    if (_skills != null)
      for skill in _skills
        if (skill.typeId == skillType.id)
          return skill
    return null
  
  // --------------------------------------------------------------------------
  function getSkillInstances() returns LinkedList<ISkill>
    return _skills

  // --------------------------------------------------------------------------
  override function initialize()
    super.initialize()
    // _board = new SkillsBoard(this, "Skills")
    // _board.updateMultiboardRows()
    
  // --------------------------------------------------------------------------
  function show()
    // _board.updateMultiboardRows()
    // _board.update()
    // _board.show()
    
  // --------------------------------------------------------------------------
  function hide()
    // _board.hide()
  
// ============================================================================
public function IComposite.getOrAddSkillsComponent() returns SkillsComponent
  var component = this.getComponent(Type(SkillsComponent.typeId)) castTo SkillsComponent
  if (component == null)
    component = this.addComponent(new SkillsComponent(this)) castTo SkillsComponent
  return component

// ============================================================================
function onUnitSelected()
  let u = GetTriggerUnit()
  let metadata = u.getMetadata()
  if (metadata == null)
    return
  let skillsComponent = metadata.getComponent(Type(SkillsComponent.typeId)) castTo SkillsComponent
  if (skillsComponent == null)
    return
  skillsComponent.show()

// ============================================================================
function onUnitDeselected()
  let u = GetTriggerUnit()
  let metadata = u.getMetadata()
  if (metadata == null)
    return
  let skillsComponent = metadata.getComponent(Type(SkillsComponent.typeId)) castTo SkillsComponent
  if (skillsComponent == null)
    return
  skillsComponent.hide()

function delayedInit()
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SELECTED, function onUnitSelected)
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_DESELECTED, function onUnitDeselected)

// ============================================================================
init
  // doAfter(1.0) () ->
  //   delayedInit()