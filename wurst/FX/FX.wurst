package FX
import ClosureTimers
import ColorUtility

constant string GOLD_FOUND_MODEL_PATH = "UI\\Feedback\\GoldCredit\\GoldCredit.mdl"
constant string MATERIALS_FOUND_MODEL_PATH = "UI\\Feedback\\GoldCredit\\GoldCredit.mdl"
constant string MODEL_PATH_RANGE = "UI\\Feedback\\SelectionCircle\\SelectionCircle.mdl"
constant colorA TAG_COLOR_GOLD = Colors.gold
constant colorA TAG_COLOR_MATERIALS = Colors.lightBrown
constant colorA TAG_COLOR_SURVIVOR = COLOR_WHITE
constant colorA TAG_COLOR_ITEM = COLOR_WHITE

// ============================================================================
public class FX

  // --------------------------------------------------------------------------
  static function createEffect(string modelPath, vec2 pos) returns effect
    return AddSpecialEffect(modelPath, pos.x, pos.y)

  // --------------------------------------------------------------------------
  static function createEffect(string modelPath, vec3 pos) returns effect
    let fx = AddSpecialEffect(modelPath, pos.x, pos.y)
    fx.setZ(pos.z)
    return fx

  // --------------------------------------------------------------------------
  static function createEffect(string modelPath, vec2 pos, player p) returns effect
    var _modelPath = ""
    if (localPlayer == p)
      _modelPath = modelPath
    return createEffect(_modelPath, pos)

  // --------------------------------------------------------------------------
  static function createEffect(string modelPath, vec3 pos, player p) returns effect
    var _modelPath = ""
    if (localPlayer == p)
      _modelPath = modelPath
    return createEffect(_modelPath, pos)

  // --------------------------------------------------------------------------
  static function createEffectOneShot(string modelPath, vec2 pos)
    let fx = AddSpecialEffect(modelPath, pos.x, pos.y)
    DestroyEffect(fx)

  // --------------------------------------------------------------------------
  static function createEffectOneShot(string modelPath, vec3 pos)
    let fx = AddSpecialEffect(modelPath, pos.x, pos.y)
    fx.setZ(pos.z)
    DestroyEffect(fx)

  // --------------------------------------------------------------------------
  static function createEffectOneShot(string modelPath, vec2 pos, player p)
    var _modelPath = ""
    if (localPlayer == p)
      _modelPath = modelPath
    createEffectOneShot(_modelPath, pos)

  // --------------------------------------------------------------------------
  static function createFoundMaterialsEffect(vec2 pos, player p)
    let fx = createEffect(MATERIALS_FOUND_MODEL_PATH, pos, p)
    doAfter(2.0, () -> fx.destr())

  // --------------------------------------------------------------------------
  static function createFoundMaterialsTag(vec2 pos, int mats, player p)
    createTag(pos, "+" + I2S(mats), TAG_COLOR_MATERIALS, p)

  // --------------------------------------------------------------------------
  static function createHarvestedMaterialsTag(vec2 pos, int mats, player p)
    createTag(pos, "+" + I2S(mats), TAG_COLOR_MATERIALS, p)

  // --------------------------------------------------------------------------
  static function createFoundItemTag(vec2 pos, player p)
    createTag(pos, "+Item", TAG_COLOR_ITEM, p)

  // --------------------------------------------------------------------------
  static function createFoundSurvivorTag(vec2 pos, player p)
    createTag(pos, "+Survivor", TAG_COLOR_SURVIVOR, p)

  // --------------------------------------------------------------------------
  static function createTag(vec2 pos, string msg, colorA color)
    createTag(pos, msg, color, null)

  // --------------------------------------------------------------------------
  static function createTag(vec2 pos, string msg, colorA color, player p)
    let vel = vec2(0.0, TextTagSpeed2Velocity(64.0))
    createTTEx(vec3(pos.x, pos.y, 32.0), vel,  msg, 10.0, 3.0, color, p)

  // --------------------------------------------------------------------------
  static function createRangeEffect(vec2 pos, real radius, colorA color)
    createRangeEffect(pos, radius, color, null)

  // --------------------------------------------------------------------------
  static function createRangeEffect(vec2 pos, real radius, colorA color, player p) returns effect
    let scale = radius / 50.0
    let scaledHeight = scale * -14.0

    var _modelPath = ""
    if (localPlayer == p)
      _modelPath = MODEL_PATH_RANGE

    let fx = AddSpecialEffect(MODEL_PATH_RANGE, pos.x, pos.y)
    ..setScale(scale)
    ..setColor(color)
    ..setHeight(scaledHeight)

    return fx
    