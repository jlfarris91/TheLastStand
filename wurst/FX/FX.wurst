package FX
import ClosureTimers
import ColorUtility

constant string GOLD_FOUND_MODEL_PATH = "UI\\Feedback\\GoldCredit\\GoldCredit.mdl"
constant string LUMBER_FOUND_MODEL_PATH = "UI\\Feedback\\GoldCredit\\GoldCredit.mdl"
constant string MODEL_PATH_RANGE = "circle.mdl"
constant string JOB_CHANGE_FX_PATH = "Objects\\Spawnmodels\\Other\\ToonBoom\\ToonBoom.mdl"
public constant colorA TAG_COLOR_GOLD = Colors.gold
public constant colorA TAG_COLOR_LUMBER = Colors.lumber
public constant colorA TAG_COLOR_SURVIVOR = COLOR_WHITE
public constant colorA TAG_COLOR_ITEM = COLOR_WHITE
public constant colorA TAG_COLOR_EXP = colorA(111, 110, 252, 255)
public constant colorA TAG_COLOR_MANA = colorA(50, 100, 255, 255)
public constant colorA TAG_COLOR_JOBCHANGE = Colors.gold

// ============================================================================
public class FX

  // --------------------------------------------------------------------------
  static function createEffect(string modelPath, vec2 pos) returns effect
    return AddSpecialEffect(modelPath, pos.x, pos.y)

  // --------------------------------------------------------------------------
  static function createEffect(string modelPath, vec3 pos) returns effect
    let fx = AddSpecialEffect(modelPath, pos.x, pos.y)
    fx.setZ(pos.z)
    return fx

  // --------------------------------------------------------------------------
  static function createEffect(string modelPath, vec2 pos, player p) returns effect
    var _modelPath = ""
    if (localPlayer == p)
      _modelPath = modelPath
    return createEffect(_modelPath, pos)

  // --------------------------------------------------------------------------
  static function createEffect(string modelPath, vec3 pos, player p) returns effect
    var _modelPath = ""
    if (localPlayer == p)
      _modelPath = modelPath
    return createEffect(_modelPath, pos)

  // --------------------------------------------------------------------------
  static function createEffect(string modelPath, widget target, string attachPointName, player p) returns effect
    var _modelPath = ""
    if (localPlayer == p)
      _modelPath = modelPath
    return addEffect(modelPath, target, attachPointName)

  // --------------------------------------------------------------------------
  static function createEffectOneShot(string modelPath, vec2 pos)
    let fx = AddSpecialEffect(modelPath, pos.x, pos.y)
    DestroyEffect(fx)

  // --------------------------------------------------------------------------
  static function createEffectOneShot(string modelPath, vec3 pos)
    let fx = AddSpecialEffect(modelPath, pos.x, pos.y)
    fx.setZ(pos.z)
    DestroyEffect(fx)

  // --------------------------------------------------------------------------
  static function createEffectOneShot(string modelPath, vec2 pos, player p)
    var _modelPath = ""
    if (localPlayer == p)
      _modelPath = modelPath
    createEffectOneShot(_modelPath, pos)

  // --------------------------------------------------------------------------
  static function createGainedGoldEffect(vec2 pos, player p)
    let fx = createEffect(GOLD_FOUND_MODEL_PATH, pos, p)
    doAfter(2.0, () -> fx.destr())

  // --------------------------------------------------------------------------
  static function createGainedGoldTag(vec2 pos, int mats, player p)
    createTag(pos, "+" + I2S(mats), TAG_COLOR_GOLD, p)
  
  // --------------------------------------------------------------------------
  static function createGainedLumberEffect(vec2 _pos, player _p)
    // let fx = createEffect(LUMBER_FOUND_MODEL_PATH, pos, p)
    // doAfter(2.0, () -> fx.destr())

  // --------------------------------------------------------------------------
  static function createGainedLumberTag(vec2 pos, int lumber, player p)
    createTag(pos, "+" + I2S(lumber), TAG_COLOR_LUMBER, p)

  // --------------------------------------------------------------------------
  static function createGainedLumberTag(vec2 pos, int lumber)
    createTag(pos, "+" + I2S(lumber), TAG_COLOR_LUMBER)
  
  // --------------------------------------------------------------------------
  static function createLostLumberTag(vec2 pos, int mats, player p)
    createTag(pos, "-" + I2S(mats), TAG_COLOR_LUMBER, p)

  // --------------------------------------------------------------------------
  static function createGainedXPTag(vec2 pos, int xp, player p)
    createTag(pos, "+" + I2S(xp) + "xp", TAG_COLOR_EXP, p)

  // --------------------------------------------------------------------------
  static function createGainedManaTag(vec2 pos, int mana, player p)
    createTag(pos, "+" + I2S(mana), TAG_COLOR_MANA, p)

  // --------------------------------------------------------------------------
  static function createFoundItemTag(vec2 pos, player p)
    createTag(pos, "+Item", TAG_COLOR_ITEM, p)

  // --------------------------------------------------------------------------
  static function createFoundSurvivorTag(vec2 pos, player p)
    createTag(pos, "+Survivor", TAG_COLOR_SURVIVOR, p)

  // --------------------------------------------------------------------------
  static function createJobChangeTag(string jobTitle, vec2 pos, player p)
    createTag(pos, jobTitle, TAG_COLOR_JOBCHANGE, p)
  
  // --------------------------------------------------------------------------
  static function createOutOfManaTag(vec2 pos, player p)
    createTag(pos, "Out of Mana", Colors.red, p)

  // --------------------------------------------------------------------------
  static function createLootingCanceledTag(vec2 pos)
    createTag(pos, "Looting Canceled", Colors.red)

  // --------------------------------------------------------------------------
  static function createTag(vec2 pos, string msg, colorA color)
    let vel = vec2(0.0, TextTagSpeed2Velocity(64.0))
    createTTEx(vec3(pos.x, pos.y, 32.0), vel,  msg, 10.0, 3.0, color)

  // --------------------------------------------------------------------------
  static function createTag(vec2 pos, string msg, colorA color, player p)
    let vel = vec2(0.0, TextTagSpeed2Velocity(64.0))
    createTTEx(vec3(pos.x, pos.y, 32.0), vel,  msg, 10.0, 3.0, color, p)

  // --------------------------------------------------------------------------
  static function createRangeEffect(vec2 pos, real radius, colorA color) returns effect
    return createRangeEffect(pos, radius, color, null)

  // --------------------------------------------------------------------------
  static function createRangeEffect(vec2 pos, real radius, colorA color, player p) returns effect
    let scale = radius / 64.0

    var _modelPath = ""
    if (localPlayer == p)
      _modelPath = MODEL_PATH_RANGE

    return addEffect(MODEL_PATH_RANGE, pos)
    ..setScale(scale)
    ..setColor(color)

  // --------------------------------------------------------------------------
  static function createJobChangeEffect(vec2 pos)
    let fx = FX.createEffect(JOB_CHANGE_FX_PATH, pos)
    fx.setAlpha(255)
    fx.setColor(255, 255, 255)
    fx.setScale(1.0)
    doAfter(5) ->
      DestroyEffect(fx)
    
  // --------------------------------------------------------------------------
  static function createSpawnEffect(vec2 pos)
    let fx = FX.createEffect(JOB_CHANGE_FX_PATH, pos)
    fx.setAlpha(255)
    fx.setColor(255, 255, 255)
    fx.setScale(1.0)
    doAfter(5) ->
      DestroyEffect(fx)